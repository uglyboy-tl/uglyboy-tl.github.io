[{"content":" ## Agent 使用指南 --- ### 如何在真实世界中使用大模型？ \u0026gt; 我说想开灯，大模型能帮我开灯吗？ --- - 我们希望大模型能够直接的解决问题 - 这样的使用方法现在被人们称为： **Agent** --- #### 简单应用：如何修复一个 json 串？ ----- - 错误做法： - 问大模型这个字符串哪里错了？ - 写代码修复字符串 - 正确做法： - \u0026#34;Do not change the specific content, fix the json, directly return the repaired JSON, without any explanation and dialogue.\u0026#34; --- #### 什么情况下我们需要 Agent ？ ----- - 不需要的情况： - 操作简单，人可以快速解决； - 规则清晰，程序可以按规则解决； - 需要的情况： - 解决步骤繁琐，对于人来说是重复劳动； - 情况复杂，不容易梳理清楚对应的解决规则； --- #### 场景举例 ----- - Github 的 Copilot - MacOS 的 Copilot - 软件自动运维 - Yi 6B 的自动安装助手 - 上网助手 - $\\dots$ --- #### 高级场景举例 ----- - 自动软件开发（GPT Engineer） - 自动会议纪要 - 自动任务记录 - 自动会议预定 - 自动消息通知 - 高级个人助理 - 一切自动化流程中需要人工参与的部分 --- #### 解决复杂问题有哪些难点？ ----- - 解决复杂问题往往需要很多步骤； - 而且正确的步骤往往也也需要探索； - Agent 需要能够正确的了解自己当前解决问题的进度； - 具体的步骤中，Agent 需要可以使用具体的工具； --- #### 传统 Agent 的定义 ###### **Agent = LLM \u0026#43; planning \u0026#43; memory \u0026#43; tools** ----- \u0026lt;center\u0026gt;\u0026lt;img src=\u0026#34;https://s2.loli.net/2023/12/18/Pucaj8OELXfeTZm.jpg\u0026#34;\u0026gt;\u0026lt;/center\u0026gt; --- ### Agent 究竟是如何工作的？ --- #### ReAct：Agent 的核心模式 \u0026lt;center\u0026gt;\u0026lt;img src=\u0026#34;https://s2.loli.net/2023/12/18/klDFI9n2Mq5Kf61.png\u0026#34; width=\u0026#34;70%\u0026#34;\u0026gt;\u0026lt;/center\u0026gt; --- #### ReAct 的核心思想 ----- - 循环试错（以此来取消幻觉）； - 充分利用大模型的能力（复杂条件下也总能给出解决方案）； - 大模型的知识足够多，且有泛化性，适合解决复杂问题； - 大模型可以很好的理解复杂的条件，找出适合的解决方案； - 通过对历史行为的记录（记忆），避免重复错误的尝试； --- ### Agent 测验 --- #### 如何打造一个联网的 LLM ？ ----- - **[Thought]** 针对用户输入，让 LLM 判断应该从哪个`搜索引擎`用什么`关键词` 获取结果； - **[Act]** 获取`搜索引擎`在对应`关键词`下的搜索结果； - **[Obs]** 具体返回的搜索结果； - **[Thought]** 判断是否回答了用户的输入，如果没有，类似第一步，继续判断如何搜索； --- #### 如何打造 Yi 6B 的自动安装助手 --- #### 如何打造 MacOS 的 Copilot --- #### 如何打造一个可以自动软件开发的 Agent --- ### 这件事需要产品做什么？ --- - **找到适合的场景** - 设计场景下的合理交互 - 总结场景下的最佳实践(作为数据喂给模型就可以了) - 扩展场景 --- \u0026gt; 大模型还没有出现 Killer APP 是因为还没有懂 Agent 的产品经理 --- # Q \u0026 A ","permalink":"https://blog.uglyboy.cn/slides/2023/12/10/agent-%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/","summary":"## Agent 使用指南 --- ### 如何在真实世界中使用大模型？ \u0026gt; 我说想开灯，大模型能帮我开灯吗？ --- - 我们希望大模型能够直接的解决问题 - 这样的使用方法现在被人们","title":"Agent 的使用指南"},{"content":" 又开始折腾博客了。\n基于 PaperMod 主题，给博客增加了两个基本功能：\n更换中文更加友好的 霞鹜文楷 字体，当然同样的方法也适用于其他任何字体 因为我经常使用 Markdown 做 PPT，所以希望博客也能支持这种类型的文档。 字体配置 首先，依然修改 layouts/partials/extend_head.html 文件1：\n1 2 3 4 5 6 7 {{ if or .Params.reveal .Site.Params.reveal }} {{ partial \u0026#34;reveal.html\u0026#34; . }} {{ else }} {{ if or .Params.mathjax .Site.Params.mathjax }} {{ partial \u0026#34;mathjax.html\u0026#34; . }} {{ end }} {{ end }} {{ if .Site.Params.changeFont }} {{ partial \u0026#34;font.html\u0026#34; . }} {{ end }} Reveal.js 的配置中会用到 mathjax，但会与我们之前添加过的 mathjax 冲突，所以需要在这里做一下判断。\n然后在 layouts/partials 下新建 font.html 文件：\n1 2 3 4 5 6 7 \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.bootcdn.net/ajax/libs/lxgw-wenkai-webfont/1.6.0/style.min.css\u0026#34; /\u0026gt; \u0026lt;style\u0026gt; body,code,section { font-family: \u0026#34;LXGW WenKai\u0026#34;, sans-serif; } \u0026lt;/style\u0026gt; 这样博客的字体就生效了。\nReveal.js 的配置 这个会稍微麻烦一些，先在 layouts/partials 下新建 reveal.html:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/reveal.js/5.0.2/reveal.min.css\u0026#34; integrity=\u0026#34;sha512-8849oiyeHKp8wdWclFreBguH6cXFoZfHhVBcoxdm+2+JcXagu1Poobm5vzBqEZqL9iJbTYK1bXbx3SWfNA3kRQ==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34; /\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/reveal.js/5.0.2/plugin/highlight/zenburn.min.css\u0026#34; integrity=\u0026#34;sha512-JPxjD2t82edI35nXydY/erE9jVPpqxEJ++6nYEoZEpX2TRsmp2FpZuQqZa+wBCen5U16QZOkMadGXHCfp+tUdg==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34; /\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/reveal.js/5.0.2/theme/serif.min.css\u0026#34; integrity=\u0026#34;sha512-oS1nbkOWsc5Ko9pLGsFZGIt0FBWp1ZmTD7LplvylADPQuxHfztC8Fd24/5CZGNDoLORrtkESGshNdgTbrXPBoQ==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34; /\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/reveal.js/5.0.2/reveal.min.js\u0026#34; integrity=\u0026#34;sha512-w7pY1wL5qhcH40XK9PIRYZc/qeog8TdyxRqEA9eHKBz+/tnhAOyIFHivbmJd/ezr8xbB7iVAh4tBNiJakCTw2g==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/reveal.js/5.0.2/plugin/markdown/markdown.min.js\u0026#34; integrity=\u0026#34;sha512-4exkEeyVuaWUFKozXl6L3UCugl6ai1cKnrVFkWUstdrNB2sDxxmPEaHBzTlYm9wX78EjPzEBG0s8k37oPeUFIw==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/reveal.js/5.0.2/plugin/highlight/highlight.min.js\u0026#34; integrity=\u0026#34;sha512-OE5v8UPoWQBlcTYkiOyXhC/+7WBrdCXC0Wg/QrrvDxtcEd7TzTLhHkx5WvTue9aJDORb15vhajbJlCSSZgifgg==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/reveal.js/5.0.2/plugin/math/math.min.js\u0026#34; integrity=\u0026#34;sha512-skPZpuRwuUAnF9iEEFBXc4zJaucKcHUDgY1wDBTv0ILy82C2gn8MJsbcinzj2u8r/iZjD/78HRgw2/n//poOhQ==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; document.addEventListener(\u0026#39;DOMContentLoaded\u0026#39;, function () { Reveal.initialize({ mathjax3: { mathjax: \u0026#39;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\u0026#39;, tex: { inlineMath: [ [ \u0026#39;$\u0026#39;, \u0026#39;$\u0026#39; ], [ \u0026#39;\\\\(\u0026#39;, \u0026#39;\\\\)\u0026#39; ] ], displayMath: [ [\u0026#34;$$\u0026#34;, \u0026#34;$$\u0026#34;], [\u0026#34;\\\\[\u0026#34;, \u0026#34;\\\\]\u0026#34;], ], processEscapes: true, processEnvironments: true, }, options: { enableExplorer: false, skipHtmlTags: [ \u0026#39;script\u0026#39;, \u0026#39;noscript\u0026#39;, \u0026#39;style\u0026#39;, \u0026#39;textarea\u0026#39;, \u0026#39;pre\u0026#39; ] }, }, transition: \u0026#39;fade\u0026#39;, progress: true, embedded: true, minScale: 0.2, plugins: [ RevealMarkdown, RevealHighlight, RevealMath.MathJax3 ] }); }); \u0026lt;/script\u0026gt; 这样就可以在 markdown 的文件头中通过设置：\n1 reveal: true 来启动 Reveal.js 的支持。但是只是这样的话，还是没有办法在页面中演示出 PPT 文件。\n还需要增加新的文档类型，在 layouts/_default 下增加 slide.html，其中最核心的功能是：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 {{ define \u0026#34;main\u0026#34; }} \u0026lt;article class=\u0026#34;post-single\u0026#34;\u0026gt; ... {{- if .Content }} \u0026lt;div class=\u0026#34;reveal\u0026#34; style=\u0026#34;height: 50vh;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;slides\u0026#34;\u0026gt; \u0026lt;section data-markdown\u0026gt; \u0026lt;textarea data-template\u0026gt; {{ .RawContent }} \u0026lt;/textarea\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; {{- end }} ... \u0026lt;/article\u0026gt; {{ end }}{{/* end main */}} 这样，再在文章的文件头中添加：\n1 layout: slide 就可以在页面中直接展示 PPT 了。\n大部分的功能配置都需要修改这个文件，通过这个路由来添加具体的 js 和 css 文件。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://blog.uglyboy.cn/posts/2023/12/07/hugo-%E6%9B%B4%E6%8D%A2%E5%AD%97%E4%BD%93-%E4%BD%BF%E7%94%A8-reveal.js-%E5%81%9A%E5%9C%A8%E7%BA%BF%E5%B1%95%E7%A4%BA/","summary":"又开始折腾博客了。 基于 PaperMod 主题，给博客增加了两个基本功能： 更换中文更加友好的 霞鹜文楷 字体，当然同样的方法也适用于其他任何字体 因为我经常使用 Markdown 做","title":"Hugo 更换字体 \u0026 使用 Reveal.js 做在线展示"},{"content":"从拼多多市值超过阿里说起 昨天，拼多多的市值超过阿里了。\n随后，看到了诸多的自媒体和身边资本圈的朋友开始热议，然后是前同事们的讨论，然后是马老师讲话又炸出一波人跟着转发着各种评论。\n大家都在认真的研究一个问题：拼多多做对了什么？ 可是有一个前提却被大家选择性遗忘——拼多多真的做对了吗？\n当然，这个问题不是针对拼多多的，并不是想说这个企业有什么不对。我们类比一下，三年前阿里市值最辉煌的时候，似乎也没有人在批判阿里有什么不对？而今天评判拼多多的每一个“对”，其实都在反衬着三年前阿里的“错”。回顾三年前，大家觉得阿里做对了吗？为什么今天就会觉得拼多多对了？那三年后，又会如何评说拼多多今天的对错呢？\n这是一个浮躁的时代——随波飘零的片片落叶，被浪花裹挟到高点时，就会被认为是对；反过来若恰好落到了波谷，则又会被认为是错。于是对错的标准也如同波浪般变幻莫测了。\n身边总有些朋友在努力寻找对与错的规律，希望自己成为对的人，奈何苦寻不得。或许，根源不是他们不够努力不够聪颖，而是误信了对错的标准，失去了正确的方向。\n芒格去世了，大家尊敬着他的长期主义，却依然做着短视的判断 也是在昨天，芒格去世了。\n朋友圈里追捧着拼多多的朋友们也纷纷缅怀着芒格。讽刺的是，他们说：芒格教会了他们要坚持长期主义；他们又在宣扬着自己从事的长期事业——无一例外的都是当下最热闹的赛道：大模型、跨境电商、AGI 。。。\n或许他们的观念中，未来是一成不变的，当下的热门可以持续一辈子；也或许他们的观念中，“长期”其实是短暂的，或许数年，或许更短，当热门变换时，就是下一个长期的到来。\n无一幸免 这种浮躁，在整个世界中蔓延，无一幸免。\n政治圈，中国会赢。不过是因为其他的人都太浮躁——我们可以愿意用 20 年改变什么事情，但是大部分的国家不愿意等，没有耐心等，甚至不相信等待的力量。\n芯片封锁了又能怎样？我们在芯片上再等 20 年又能怎样？这其实才是中国人真正的底气所在——我可以用 20 年的坚持去等待，去改变。而你们，不行！\n“时间在我”，不是因为重要的节点临近，而是因为我们相信我们的坚持。时间永远会站在正确的方向上，短期的挫折，不过是时机未到罢了。\n科研圈，也充斥着急功近利的浮躁的人们——大模型领域的论文越来越像新闻 PR 稿件，唯恐标题不醒目，满篇 \u0026ldquo;xxx is all you need\u0026rdquo;。\n娱乐圈。。。\n或许体育圈反而成了最后的净土，最强的战士们依然是上个时代遗留下来的老将，他们用刻苦和努力告诉后辈们，流星确实可以闪亮一瞬，绚烂无比；你可以选择成为流星，但我选择成为太阳。\n像我这样的人 喜欢毛不易的《像我这样的人》，唱出浮躁的时代里，每个人的沉沦：\n像我这样优秀的人 本该灿烂过一生 怎么二十多年到头来 还在人海里浮沉\n像我这样聪明的人 早就告别了单纯 怎么还是用了一段情 去换一身伤痕\n像我这样迷茫的人 像我这样寻找的人 像我这样碌碌无为的人 你还见过多少人\n像我这样庸俗的人 从不喜欢装深沉 怎么偶尔听到老歌时 忽然也晃了神 像我这样懦弱的人 凡事都要留几分 怎么曾经也会为了谁 想过奋不顾身\n像我这样孤单的人 像我这样傻的人 像我这样不甘平凡的人 世界上有多少人\n身边很多的人，意气风发，拿着高薪，天天讲着行业里最热门的黑话，谈论着阿里衰落的必然性和拼多多的成功，努力在各种场合里抛头露脸，努力成为时代的“精英”，换取别人崇拜的目光。他们不是互联网上的网红，却努力活成了自己生活圈中的网红，小心经营着自己的人设，努力迎合着身边的一切“粉丝”的期盼。\n可他们身上却似乎又都带着 BGM：“像我这样迷茫的人/像我这样寻找的人/像我这样碌碌无为的人/你还见过多少人”\n","permalink":"https://blog.uglyboy.cn/posts/2023/12/01/%E6%B5%AE%E8%BA%81%E7%9A%84%E6%97%B6%E4%BB%A3/","summary":"从拼多多市值超过阿里说起 昨天，拼多多的市值超过阿里了。 随后，看到了诸多的自媒体和身边资本圈的朋友开始热议，然后是前同事们的讨论，然后是马老师","title":"浮躁的时代"},{"content":" # RAG 技术 --- - 检索增强的生成系统（Retrieve Augment Generation）简称 RAG。 - 原理是在大语言模型的基础上，辅助检索技术，让大语言模型能够获得与用户问题相关的更多上下文信息，使得的大语言模型可以： - 降低幻觉出现概率 - 适应垂直场景应用 - 弥补数据实时性不足 --- ### 一个典型 RAG 系统的架构 \u0026lt;center\u0026gt;\u0026lt;img src=\u0026#34;https://s2.loli.net/2023/11/26/UcTsI8xJVdMFfRt.jpg\u0026#34;\u0026gt;\u0026lt;/center\u0026gt; --- ### RAG 系统的核心技术要素 - 文档导入 - 文档切分 - 文档向量化 - 向量数据库选型 - 检索算法 - 文档排序 - Prompt 生成 - $\\dots$ --- 市面上大部分的关于 RAG 的介绍都是类似上面的逻辑进行的，然后就顺利的将 *某一种 RAG 的方法* 变成了 *通用 RAG 的框架*，从而让我们迷失了 RAG 的真正价值。 --- ## 从定义出发，RAG 就是 ## 检索 \u0026#43; 生成 --- - Chat With Documents 属于 RAG - 用户对话中保留历史记忆 属于 RAG - 网页搜索 \u0026#43; LLM 属于 RAG - 自动调用 API 接口获取信息 属于 RAG - 调用数据库获取信息 属于 RAG - $\\dots$ - **上面各种方法一起使用也属于 RAG** --- ## RAG 究竟意味着什么？ \u0026gt; 为什么我们要使用检索 --- - 人类行为的两种模式：主动获取信息（功利动机行为）和被动获取信息（共情动机行为）； - 通常在产品上，我们可以用 *Save time* 和 *Kill time* 的模式来区分 - 主动获取信息的手段被称为信息检索。 - RAG 更标准的说法应当是有了 LLM 能力加持的信息检索。 --- ## LLM 很难独立完成检索 --- - 最核心的问题是，对于如何引导大模型按照我们的意愿生成内容，**我们无法直接控制，我们只能通过增加上下文的方式来影响生成结果**。 - 对于大模型来说，它会如何回答一个问题依赖的不是训练框架，而是训练数据。 - 我们无法直接控制大模型的生成结果，但是我们可以通过增加上下文的方式来影响生成结果。 - 一个问题，我们可以提供相关的上下文，然后利用大模型的泛化能力，让它生成我们想要的答案。 --- \u0026lt;center\u0026gt;\u0026lt;img class=\u0026#34;r-stretch\u0026#34; src=\u0026#34;https://s2.loli.net/2023/11/27/B1NkImf2eKrZl7J.png\u0026#34;\u0026gt;\u0026lt;/center\u0026gt; --- - 大模型的“记忆力”并不可靠，不同的上下文会引导出怎样的结果是不确定的。 - 仅靠大模型，是无法取消幻觉的。 - 如果 RAG 做得不好，可能带来的是负面效果。 --- ## RAG 的核心 ## 如何用好检索 --- ## 检索的发展史 1. 图书馆的索引式检索（Yahoo 等目录网页）； 2. 关键词召回（传统搜索）； 3. 向量相似度（个性化推荐）； 4. 自然语言回答问题（大模型）； \u0026gt; 这些方法不是递进的，而是并列的。 --- ## 新概念下的 RAG 框架 --- 1. 对用户问题分类，判断使用哪些检索器； 2. 根据用户问题，找到最适合的检索器检索方式（Query、SQL、API 调用等）； 3. 召回的结果，判断与用户问题的相关性，进行合理过滤或改进； 4. 用适合的方式组织召回结果，提供给 LLM 进行汇总并回答用户问题； 5. （可选）判断是否很好的回答了用户的问题，是否需要重新再来一遍（这其实就进化成 Agent 了）。 --- - 可以使用不同的 LLM 来执行不同的任务，这样就可以在计算速度和资源上得到极大的节约，并针对特定问题取得更好的效果。 - 检索器的各种优化技术都值得使用： - 包括传统的关键词搜索（QP） - 向量检索只是其中的一种手段；同时向量检索也应当额外建立适合的索引。 - 知识图谱是有效的检索器之一。 - 利用好结构化信息（数据库 或 API）。 - 好的检索器依赖好的数据。 --- # Q \u0026 A --- #### 如果我们有一些私有的数据，如何让大模型能够利用这些私有数据呢？ ----- - 通过微调的方式，将私有数据加入到大模型的训练数据中。 - 通过检索的方式，将私有数据加入到大模型的上下文中。 - **以上方法都用** --- #### 怎样才能更好的提升 RAG 的效果？ ----- 最核心的要素其实是：找到更优质的数据（准确、结构化） --- #### 产品和开发要深入研究 Prompt Engineering 吗？ ----- 永远都不要这样做，这件事交给 SFT - 概念对比 - Let’s think step by step - 通用优化 Prompt 的 Prompt - function call - Self RAG - 让模型来学习如何 Prompt Engineering ","permalink":"https://blog.uglyboy.cn/slides/2023/11/23/rag-%E6%8A%80%E6%9C%AF/","summary":"# RAG 技术 --- - 检索增强的生成系统（Retrieve Augment Generation）简称 RAG。 - 原理是在大语言模型的基础上，辅助检索技术，让大语言模型","title":"RAG 技术"},{"content":" ## 大语言模型的计算能力 --- ### LLM 的几个核心数学问题 ----- 1. N-GRAM 的计算能力问题 2. 过参数化模型的统计学习问题 3. 非凸的数值优化问题 4. 对深度神经网络的数学理解 5. Transformer 算子的含义 6. fine-tuning 的数学含义 --- ### N-GRAM 的计算能力 --- - **大语言模型的基本范式：** - 假设 $w_1, w_2,\\dots, w_{N}$ 是一个单词序列。我们可以按如下公式计算单词序列的概率： $$ p(w_{1},w_{2},\\dots,w_{N})=\\prod^N_{i=1}p(w_{i}|w_{1},w_{2},\\dots,w_{i}) $$ - 该模型是一个 $N-1$ 阶的马尔可夫链，称为 `N-GRAM` 模型。 - 该模型的计算能力是有限的，因为它的是个有穷自动机。 --- - `非确定型有穷自动机`(`NFA`) 是一个 5 元数组 $Q,\\Sigma,\\delta,q_0,F$，其中 - $Q$ 是一个有穷集合，称为**状态集**。 - $\\Sigma$ 是一个有穷集合，称为**字母表**。 - $\\delta:Q\\times\\Sigma_\\varepsilon\\rightarrow \\mathcal{P}(Q)$ 是**转移函数**。 - $q_0\\in Q$ 是**起始状态**。 - $F \\subseteq Q$ 是**接受状态集**。 --- #### 大模型是有穷自动机的证明过程 ----- - 令 $q_0 =\\varepsilon$ 为初始状态，大语言模型的预测函数记为 $$ \\phi:\\{s_0s_1s_2...s_{n-1}\\}\\rightarrow s_n,s_i \\in \\Sigma $$ - 取 $\\delta$ 为： $$ \\begin{equation} \\delta(q,\\sigma) = \\left \\\\\\{ \\begin{array}{ll} q \\circ\\sigma \u0026 \\sigma \\neq \\varepsilon\\\\\\\\ q \\circ\\phi(q) \u0026 \\sigma = \\varepsilon \\end{array} \\right. \\end{equation} $$ - 也就是将 $Q$ 设置为已经拥有的上文，持续输入或预测下一个字符。 --- - 在 [Bhattamishra et al. 2020](https://arxiv.org/abs/2009.11264) 中也有类似的实验，实验中基于 Transformer 的大语言模型甚至只能识别弱化的正则语言。 - 大模型无法判别一个 $\\{[0|1]^*\\}$ 序列中是否有奇数个 $1$。 - 给定 $n$ 大模型无法生成 $(aa)^n$。 - 在 [Zhou et al. 2023](http://arxiv.org/abs/2310.16028) 中还尝试论述了基于 Transformer 的大语言模型也无法实现加法运算之类的复杂运算。 - 以及，有穷自动机无法判定 $\\\\\\{0^n\\\\\\#1^n\\\\\\}$ 形式的序列；也无法进行基础的四则运算（无法处理括号的闭合和乘法的优先顺序）。 --- ### 大模型计算能力是有限的 ----- - 大模型不具备推理能力，这件事与模型的规模无关。 - 大模型是通过语言概率分布的泛化来模拟出推理能力的假象。 - 例如：大模型不会数数。他只是把看到过的数数类型的答案都记住了，然后用类比的方式去回答新的问题；如果答案在记忆中，就会回答正确。 - 更大的模型可以记住更多的答案，但是这并不是我们想要的答案。 - 我们需要新的范式来解决 AGI 问题。 --- ### Agent \u0026#43; LLM 可以成为完备图灵机 --- - Agent 的基本范式是一个 While 程序。 - 例如下面几种常见的 Agent： 1. [ReAct](http://arxiv.org/abs/2210.03629) 获得反思推理能力 2. [BabyAGI](https://github.com/yoheinakajima/babyagi) 基础的计划任务 Agent 3. [Reflexion](http://arxiv.org/abs/2303.11366) 长期记忆和短期记忆（短期记忆就符合上述流程） 4. [AutoGPT](https://github.com/Significant-Gravitas/AutoGPT) 第一个全能 Agent --- - 代码示例： ```python @dataclass class ReAct(ABC): thought: Optional[str] = None action: Optional[str] = None def __post_init__(self): self.obs = self.run() # 获取执行 Action 的结果 act = ReAct() acts = [] while not act.done: acts.append(act) prompt = get_prompt(acts) act: ReAct = ReAct.parse(llm.call(prompt)) # 调用大模型 ``` --- #### 编程语言 WHILE 语义 (Semnatik) ----- - 一个 while 程序 $P$ ,通过传递 $k$ 个参数,返回一个结果, 即 $f:\\mathbb{N}^k\\rightarrow\\mathbb{N}$ - 其他未定义的参数可以在程序里被调用,但是必须设定为 $0$ - WHILE 程序的结果在结束结束后通过 $x_0$ 传达 - 对于一个 WHILE 程序,有三种运行模式: - 变量赋值: $x_i=x_j\u0026#43;c,c\\in\\{0,1,−1\\}$ - $P_1$;$P_2$ ( $P_1$,$P_2$ 是两个任意程序程序),先运行 $P_1$ ,再运行 $P_2$ - WHILE $x_i \\neq 0$ DO $P$ END 意思是, $P$ 程序将一直被运行,直到 $x_i$ 等于 0 --- - **定理：编程语言 WHILE 是图灵完备的** - **证明:** 我们将受限 RAM(Registermaschine)(只有 LOAD,STORE,CLOAD,CADD,CSUB 功能的 RAM) 中的每一步都用 WHILE 程序来代替计算，由于受限 RAM 是图灵完备的,所以 WHILE 也是图灵完备的。 - 证明细节参看：[while循环](https://zhuanlan.zhihu.com/p/343107128) ，源自 [Unentscheidbarkeit des Halteproblems: WHILE-Programm, Vorlesung 10 in BUK von RWTH Aachen](https://algo.rwth-aachen.de/Lehre/WS1920/BuK/BuK/h10.pdf) --- - 实现图灵完备的方法不是唯一的。例如，[Schuurmans 2023](http://arxiv.org/abs/2301.04589) 就证明了，当可以使用外部存储时，大模型是图灵完备的。 - 但是，这并不意味着 Agent \u0026#43; LLM 就是 AGI，毕竟我们现在的电脑本身就是图灵完备的，但是我们并不认为电脑就是 AGI。 - 我们需要的是一个可以自适应的 Agent，而不是一个固定的 Agent。也就是可以通过学习来改变自己的行为，而不是通过人工的方式来改变自己的行为。 --- ### 以整数加法为例 ----- \u0026gt; 我们希望 Agent 学会整数加法。但学会的方式不是我们给了它加法的程序让它执行，而是通过加法的真值，“推导”出加法的程序。模拟人做加法的方式，我们尝试让机器训练出加法程序 --- - **已知**： - 十以内的加减法（这部分的结果是背下来的）； - 用字符串来保存十进制的数字； - 有额外的存储可以利用（保存进位时的信息）； - **目标：** - 懂得如何利用已知的十以内的加减法的结果，进行多位的加减法运算； - 计算时需要从后向前计算； - 需要保留进位的信息； - 确保计算结果一定是准确的； --- - 这应该是一个强化学习的过程——只有计算正确时，才会获得奖励。其中，尝试探索的动作空间是： - 如何利用十以内的加减 - 通过怎样的计算顺序 - 如何利用额外的存储 - 最终以此来生成一个完整的加法运算流程。 --- ### 使用 RL 训练 Agent ----- Agent 的 While 循环模式恰好符合 Bellman 方程的形式。 --- \u0026gt; 通过强化学习训练 Agent，直观上，状态空间和奖励都不难定义，难的是究竟如何定义 Action 空间。 --- - 例如十以内的加减法为什么可以成为加法的 Action？ - 进一步，当我们尝试训练乘法时，九九乘法表一定在我们的 Action 空间中，那如何凭空让机器找到这个“九九乘法表”呢？ - 甚至计算乘法时，加法也需要在 Action 空间中。这意味着，强化学习能学会内容是有序的，而且 Action 空间的生成也是依赖之前的训练结果的。 - 这个结果并不意外，《技术的本质》一书中就提到过人类技术的发展是渐进的，而不是突变的。 --- \u0026gt; 牛顿无法简单的通过阅读代数和几何来发明微积分。问题是，要生成全新的想法，还缺什么？ **有可能达成 AGI 的新范式应当需要 Agent \u0026#43; LLM 的联合训练，而不是各自的单独训练。** --- ## Thanks ","permalink":"https://blog.uglyboy.cn/slides/2023/11/21/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84%E8%AE%A1%E7%AE%97%E8%83%BD%E5%8A%9B/","summary":"## 大语言模型的计算能力 --- ### LLM 的几个核心数学问题 ----- 1. N-GRAM 的计算能力问题 2. 过参数化模型的统计学习问题 3. 非凸的数值优化问题 4. 对深度神经网络的数学理解","title":"大模型的计算能力"},{"content":" # 大语言模型\u0026lt;br\u0026gt;原理分享 --- ## 什么是大语言模型？ --- 当我说了很多话之后，我马上要说 $\\Box$ --- ## 数学公式描述 ----- $w_1, w_2,\\dots, w_{N}$ 是一个单词序列，这个序列的概率分布是： $$ p(w_{1},w_{2},\\dots,w_{N})=\\prod^N_{i=1}p(w_{i}|w_{1},w_{2},\\dots,w_{i}) $$ --- ## 大语言模型能做什么？ --- - 大模型能记住它看到过的一切信息。 - 大模型对于已经看到过的信息，有一定的泛化能力（有限度的推广）。 --- ### 大模型能达到怎样的泛化能力？ \u0026gt; 大模型可以涌现出智能吗？ --- ## 大语言模型不能做什么？ --- 1. 大模型无法判别一个 $\\\\\\{[0|1]^*\\\\\\}$ 序列中是否有奇数个 $1$。 2. 给定 $n$ 大模型无法生成 $(aa)^n$。 3. 大模型无法判定 $\\\\\\{0^n\\\\\\#1^n\\\\\\}$ 形式的序列。 4. 大模型无法执行加法运算。 5. $\\dots$ --- 大语言模型没有，也不可能具有推理能力。 \u0026gt; 大语言模型只是记住了足够多的别人的推理，然后用类比的方法将这些推理泛化了而已。 --- ## 大语言模型是如何将信息泛化的？ --- - 通过相似度计算来进行泛化，然后通过概率分布来进行选择。 1. 粗略的可以如下理解：可以用同义词替代的都能被泛化。 2. 这种泛化的替代能力是可以保留相对位置信息的（例如一道数学题中的数字变了，它可以泛化到后续的解题过程中，都用新数字替代原来的数字）。 3. 在训练样本充分的情况下，可以跨语言进行同义词泛化。 --- # Q \u0026 A ","permalink":"https://blog.uglyboy.cn/slides/2023/11/21/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E5%8E%9F%E7%90%86%E5%88%86%E4%BA%AB/","summary":"# 大语言模型\u0026lt;br\u0026gt;原理分享 --- ## 什么是大语言模型？ --- 当我说了很多话之后，我马上要说 $\\Box$ --- ## 数学公式描述 ----- $w_1, w_2,\\dots, w_{N}$ 是一个单词序列，这个","title":"大语言模型原理分享"},{"content":"大语言模型的基本逻辑 大语言模型的本质是一个 N-GRAM 模型，即：\n定义：\n假设 $w_1, w_2,\\dots, w_{N}$ 是一个单词序列。我们可以按如下公式计算单词序列的概率：\n$$ p(w_{1},w_{2},\\dots,w_{N})=\\prod^N_{i=1}p(w_{i}|w_{1},w_{2},\\dots,w_{i}) $$\n该模型是一个 $N-1$ 阶的马尔可夫链，称为 N-GRAM 模型\n推论： 有限马尔可夫链（或 N-GRAM 模型）背后的「语法」是有穷自动机，也就是正则表达式。是 乔姆斯基体系 最底级的文法。\nAgent + LLM 可以成为完备图灵机 一般来说，希望将有穷自动机扩充成完备图灵机，朴素的想法就是添加外部存储，如 Schuurmans et al(2023) 就证明了使用外部存储的大模型是图灵完备的。但这种图灵完备性的实现依然需要大量的人工介入。所以我们希望找到一种更加自然的，可以自我学习的具有图灵完备性的模式。\nWhile 循环的图灵完备性 编程语言 WHILE 语义 (Semnatik):\n一个 while 程序 $P$ ,通过传递 $k$ 个参数,返回一个结果, 即 $f:\\mathbb{N}^k\\rightarrow\\mathbb{N}$ 其他未定义的参数可以在程序里被调用,但是必须设定为 $0$ WHILE 程序的结果在结束结束后通过 $x_0$ 传达 对于一个 WHILE 程序,有三种运行模式: 变量赋值: $x_i=x_j+c,c\\in{0,1,−1}$ $P_1$;$P_2$ ( $P_1$,$P_2$ 是两个任意程序程序),先运行 $P_1$ ,再运行 $P_2$ WHILE $x_i \\neq 0$ DO $P$ END 意思是, $P$ 程序将一直被运行,直到 $x_i$ 等于 0 定理：编程语言 WHILE 是图灵完备的\n证明: 我们将受限 RAM(Registermaschine)(只有 LOAD, STORE, CLOAD, CADD, CSUB 功能的 RAM) 中的每一步都用 WHILE 程序来代替计算 1，由于受限 RAM 是图灵完备的,所以 WHILE 也是图灵完备的。\nAgent 流程都是 While 循环 典型的几个 Agent 流程：\nReAct 获得反思推理能力 BabyAGI 基础的计划任务 Agent Reflexion 长期记忆和短期记忆（短期记忆就符合上述流程） AutoGPT 第一个全能 Agent 都可以转化到上述的范式中，进而获得更强大的计算能力（通用图灵机）。\nAgent 的重要意义其实是帮助 LLM 获得图灵完备性。当然，现在的 Agent 所缺乏的是自适应能力，还强依赖于 Prompt Engineering，不能自适应，不能进化，也没有利用上足够多的人类知识。\n大语言模型的泛化性 从机器学习的角度看，大语言模型是一个生成式模型——学习原始数据的概率分布。这里有一个基础的问题：用哪种机器学习的方法来学习这个生成式模型。\n我们也逐步来分析这个问题，首先是传统统计学习的学习方法和深度神经网络之间的选择。从结果上看，我们选择了深度神经网络，因为我们不可能见过所有人说过的所有话，所以我们希望我们训练的模型在我们未见过的样本上也能取得很好的效果，这就是模型的泛化能力。而实验表明，深度神经网络的泛化性更好。为什么呢？\n过参数化是泛化性好的本质原因 在传统统计学习中，我们希望使用的参数尽可能的少（奥卡姆剃刀原理），这样才能带来更好的泛化效果。另一方面，我们又希望我们的模型的表达能力尽可能的强，这样才能更好的拟合真实的概率空间。所以会有经典的微笑曲线：\n假设空间的大小不能太小，也不能太大（否则会过拟合）。\n但当时的人们都没有尝试一件事情，就是如果进一步增大参数空间（已经发生过拟合之后），会发生什么？\n下图是实际发生的事情：\n随着参数空间的继续增大，泛化性又逐步的提升了，而且比过拟合之前的最优值还要好了。\n这件事是深度学习拥有良好泛化性的本质原因——过参数化。如 Belkin et al(2018) 中描述的，其实这种能力也并不是深度神经网络所独有的，而是一切过参数化的机器学习方法都能具备的性质。\n深度神经网络一方面可以通过网络结构学习任意形状的可积函数的分布，另一方面，又可以通过过参数化获得良好的泛化性，于是就成为了真实世界大部分问题的最优机器学习方法——我们可以从猜测真实问题的函数结构中解脱出来，也不用担心样本量少无法遍历全部解空间。\n过参数化带来的思考 过参数化的机器学习过程有无穷多最优解（训练数据上 Loss 为零），所以一定是一个非凸优化问题。但是不同的解对应的泛化性是不同的。而至今为止，我们也没有一个关于解的泛化性的指导性优化理论。所以深度学习能否获得良好的泛化性是一个随机事件。\n但另一方面，从实践的角度我们能得到，深度学习获得良好泛化性又是一个大概率的事件。\n结合深度学习中已经获得的大量实验结果，我们可以形成这样的物理认知：泛化性好的解空间应该是空间范围比较大（或者是梯度变化更平缓）的区域；而泛化性不好的空间则反之。从而自然会有结论：解落入更大空间的概率会更大，所以解能大概率是泛化性好的。\n而基于上面这个未被证实认知也会带来一些推论：\n收敛速度快的算法，可能其泛化性不如收敛速度慢的算法； 增加收敛时的随机扰动可以提升泛化性； 这些结论与已知的实验结果是相符的：Adam 收敛速度好于 SGD，但泛化性很多时候不如 SGD；而 SGD 的泛化性好于 GD。\n以及，当下的一些研究，例如尝试将已经训练好的模型中的部分参数扣掉——“因为这些参数的变化不会影响训练集上的 Loss，或者我们已知的测试集上的 Loss”……这些尝试是危险的，很可能损失掉良好的泛化性。\n过参数化的泛化性问题，现在还没有很好的数学解释，从而也没有合适的理论来衡量一个解的泛化性效果。一段时间之内，这个问题都会是大模型的“阿喀琉斯之踵”，考验大部分的深度学习优化算法——当你带来计算效率的提升时，是不是能确保泛化性不下降？\n大语言模型的 Transformer 算子 当我们确定了使用 N-GRAM 作为语言模型，以及利用深度神经网络作为机器学习的方法，以获得模型良好的泛化能力。下一步就需要进一步研究模型更细节的结构上是否为大语言模型带来的新的能力，亦或者是限制了什么能力。\n这里首先引入一个结论：\n当前所有的深度学习中的算子，都可以展开成全链接网络。也就是说，当前的各种深度学习的算子，并不能获得全链接网络获得不了的能力。所以如果是作为基础能力的研究，例如“网络层深是如何带来更强的表达能力的”这种研究课题，是可以将任意算子都抽象成全链接网络来进行探索。这也是 NTK 理论的重要价值。\n于是，各种具体算子带来的好处，是在于使用时效率的提升。这种提升等价于——给网络带来良好的先验知识。所以深度学习中的算子不存在优劣之分，只有不同的算子对于不同的数据，先验知识的匹配程度的差别。\n所以下面我们即将讨论的 Transformer 算子，研究的重点是它带来了哪些先验知识（或者可以说它舍弃了哪些信息，而只关注哪些知识）。\nTransformer 算子的位置编码 N-GRAM 模型是时不变的，具体来说，就是一句话的分布，不会因为它前后位置的小变化而改变。例如一个文章中一句话前面多打了一两个空格，并不会影响将要说的这句话。\n更具体来说，就是 N-GRAM 中的信息只与相对位置信息有关，而与绝对位置信息无关。基于这个信息，就可以优化全链接网络，设计出算子结构，使得其只与相对位置信息有关，而与绝对位置信息无关。\n放到 Transformer 算子中来说，就是位置编码的设计应该满足：\n$$ ⟨f(q,m),f(k,n)⟩=g(q,k,m−n) $$\n只与 $m-n$ 有关，而跟 $m,n$ 的具体数值无关。从这条性质就能比较容易地得到 RoPE 旋转位置编码。\n位置编码的内差 大模型当前研究的重点之一是上下文窗口的大小，我们希望这个窗口可以进一步的扩大以捕获更多的输入信息。\n但因为训练数据有限，以及模型本身需要有一个明确的形状，所以训练时的数据基本上还是要维持差不多在 4k 的水平上，但希望能对更长的文本进行预测。这时，从位置编码的性质来看，是与上下文窗口的大小无关的，所以是可以合理外推到无限大的。但是受限于训练样本的数量，当上下文窗口更大时，基本上还是只能有效捕获到训练窗口大小的信息，对更多的信息是无法利用的。\n这时自然的想法时，如果我对信息内差（将更长的文本挤成短文本窗口大小的样子），就可以利用已经训练的信息来推测更多的信息了。\n可以理解成，将位置编码设计成：\n$$ ⟨f(q,m),f(k,n)⟩=g(q,k,\\frac{m−n}{s}) $$\n其中，$s$ 是窗口长度。这表达的是位置编码与相对位置的绝对大小无关，而只与相对位置的相对大小有关。\n但是这样的问题是，在更常用的场景下，相对位置的绝对大小是更重要的，例如比较短的句子中，两个 token 究竟是相隔几个位置是十分重要的。这意味着，无法直接使用这样的位置编码获得任意的窗口能力。\n所以，当下流行的位置编码内差的方法是：\n通过 RoPE 算法训练一个 $s$ 长的窗口 然后再用内差的办法，重新扩张了窗口大小，此时低频（长文本部分）通过内差获得了还不错的训练性能。但高频（短文本）部分却被严重破坏了。 此时重新微调模型，将高频部分调整到合适的位置，可以理解成只需要训练高频部分的信息（这部分信息其实也已经有了一些合理的先验知识了），所以可以更快的将短窗口扩展到长窗口。 NTK-aware Scaled RoPE 方法，使用的是高频内推，低频外差的办法，做到了不需要额外训练即可扩大上下文窗口，即：\n$$ ⟨f(q,m),f(k,n)⟩=g(q,k,l(m−n)) $$\n其中：\n$$ \\begin{equation} l(m-n) \\approx \\left \\{ \\begin{array}{ll} m-n \u0026amp; \\text{当}(m-n)\\text{较小时} \\\\ \\frac{m-n}{s} \u0026amp; \\text{当}(m-n)\\text{较大时} \\end{array} \\right. \\end{equation} $$\n但这个方法还是会在很多位置上失去原本训练时学到的信息，使得外推时有性能损失。\n类似的，其实我们还可以用这样的思考方式，重新设计位置编码，使得模型可以更好的利用现有的训练数据获得合理的外推能力。例如 ReRoPE 算法的位置编码的设计是这样的：\n$$ ⟨f(q,m),f(k,n)⟩=g(q,k,l(m−n)) $$\n其中：\n$$ \\begin{equation} l(m-n) = \\left \\{ \\begin{array}{ll} m-n \u0026amp; m-n \u0026lt; s\\\\ s \u0026amp; m-n \\geq s \\end{array} \\right. \\end{equation} $$\n这是因为，训练样本中，我们从未见过 $m-n\u0026gt;s$ 的样本，所以更长程的样本都用 $s$ 来替代，近似的获得信息的利用。类似这样的编码设计，可以保证训练集上无性能损失，并且具备了一定的扩展能力，最大化的利用了训练信息。\n基于这个思想，还可以扩展出很多的位置编码的设计，尽最大可能性来挖掘训练样本中的信息。\n位置编码是否需要时间衰减？ 包括 RoPE 在内的各种位置编码，都增加了时间衰减的先验。而这部分信息其实是可以通过训练来学习到的。所以是否真的需要时间衰减这个先验信息，它是否能更有效的帮助我们训练？是一个值得研究和思考的问题。\nTransformer 算子的信息编码 类似于上面位置编码的分析，我们知道分析算子的核心，是考虑它保留了什么信息（或者说舍弃了什么信息，是否有不应当舍弃的信息被舍弃了）。\nTransformer 信息编码的设计表达的是：某个位置所蕴含的信息，只与这个位置之前的所有文本间两两的相似度信息有关。\n其中极为重要的信息是如下公式：\n$$ Attention(Query,Source) = \\sum_{i=1}Similarity(Query,Key_i)*Value_i $$\n于是也可以将 Attention 机制看作一种软寻址（Soft Addressing）。\n至于注意力模型中是否丢失了什么重要的信息？是否有更加合理的选择？是进一步分析 Transformer 算子的核心。但这一部分同样也没有什么更加基础的数学依据，所以就没有什么进一步讨论的余地了。\n稍值得留意的是，具体的 $Similarity$ 算法的选取，还是可以从一切其他不变量中获得部分更加有意义的约束的。例如，从熵不变性看Attention的Scale操作，还是可以从提升上下文窗口外推能力的角度，获得一个更有效的系数项。\n大语言模型的对齐 这部分其实在数学上值得分析的内容不多，因为对齐的操作本质上是一个偏应用的操作，是让预训练模型更加符合人类的使用场景的操作。所以对齐之后，模型能力层面是没有本质提升的，更多的是在方便人类使用的层面获得了提升。这部分从应用和工程角度是需要而且极为重要的，但没有额外的数学信息。\n其中只有一个话题值得探索，即为什么对齐的操作选择了强化学习而不是继续用传统的模式识别的方法训练？\n坊间的笑谈是，当时 OpenAI 负责对齐的团队恰好手边有现成的 RL 的算法，所以就用它搞出了 RLHF。\n网上关于这个问题有一些解释，大体上就是表达 RL 的调整效率是高于传统的模式识别的。这部分内容我还没有仔细的研究，就先不胡扯了。\n证明细节请看：·while循环 ，源自 Unentscheidbarkeit des Halteproblems: WHILE-Programm, Vorlesung 10 in BUK von RWTH Aachen\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://blog.uglyboy.cn/posts/2023/11/09/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E6%95%B0%E5%AD%A6%E7%90%86%E8%A7%A3/","summary":"大语言模型的基本逻辑 大语言模型的本质是一个 N-GRAM 模型，即： 定义： 假设 $w_1, w_2,\\dots, w_{N}$ 是一个单词序列。我们可以按如下公式计算单词序列的概率： $$ p(w_{1},w_{2},\\dots,w_{N})=\\prod^N_{i=1}p(w_{i}|w_{1},w_{2},\\dots,w_{i}) $$ 该模型是一","title":"大语言模型的数学理解"},{"content":"大模型是有穷自动机 非确定型有穷自动机（NFA）的定义 非确定型有穷自动机是一个 5 元数组 $Q,\\Sigma,\\delta,q_0,F$，其中\n$Q$ 是一个有穷集合，称为状态集。 $\\Sigma$ 是一个有穷集合，称为字母表。 $\\delta:Q\\times\\Sigma_\\varepsilon\\rightarrow \\mathcal{P}(Q)$ 是转移函数。 $q_0\\in Q$ 是起始状态。 $F \\subseteq Q$ 是接受状态集。 大模型是 NFA 的证明 令 $q_0 =\\varepsilon$ 为初始状态，大语言模型的预测函数记为\n$$ \\phi:{s_0s_1s_2\u0026hellip;s_{n-1}}\\rightarrow s_n,s_i \\in \\Sigma $$\n取 $\\delta$ 为：\n$$ \\begin{equation} \\delta(q,\\sigma) = \\left \\{ \\begin{array}{ll} q \\circ\\sigma \u0026amp; \\sigma \\neq \\varepsilon \\\\ q\\circ\\phi(q) \u0026amp; \\sigma = \\varepsilon \\end{array} \\right. \\end{equation} $$\n也就是将 $Q$ 设置为已经拥有的上文，连续预测下一个字符（若当前是输入过程，则只需要简单的叠加到状态集，不需要预测的过程）。这描述了大语言模型下的“Next Token Prediction” 范式。也就是说这个范式下的一切模型（无论是 Transformer 还是 其他的什么算子进行这种模式的预测），都跳不出这个基本的范式。\n即当前的大模型无论如何提升自己的能力，其计算能力也不过是一个有穷自动机。\n也就是说，类似于 $\\{0^n\\#1^n\\}$ 这个模式是无法被有穷自动机学习和预测出来的。换句话说，大模型的智能在这个例子上直接会被锁死，注定达不成所谓的**“AGI”**。\n以这个例子泛化来说，我们仅通过构造正负样本和机器学习做概率预测的方式，永远也无法对上面的模式做完美的判定。这个结论正是上面的推理想表达的意思。\n这件事可以拿 ChatGPT 来测试，对于 0#1，00#11，000#111，\u0026hellip;，这个序列，让 ChatGPT 续写，它可以继续写下去且不出错（但这只是假象），而且也会明确的说出这个序列是 $\\{0^n\\#1^n\\}$ 这个模式的产物。但当你要求它输出 n=100 时的输出，或者你拿 n=100 时的输入让 ChatGPT 判定时，它就会出错了。\n直接得到的重要启示是：\n除了大模型，我们还需要新的范式来解决 AGI 问题。仅靠提升模型规模，注定有很多事情做不到。\n额外的说明 有穷自动机是做不出基础四则运算的计算器 1 的。这也意味着大模型的推理能力是不存在的。\n我们认为的推理能力，不过是在有限状态空间下的穷举，例如上文中的 $\\{0^n\\#1^n\\}$ 这个例子。更大的模型可以通过训练模拟出更长的匹配，但是从“压缩比”的角度看，终究是没有能掌握这个规律，而是通过空间换时间的方式将更多的答案在训练的过程中记住。\n所以可能又回到了最初的问题——大模型是不是必须要足够大？继续增加大模型的规模还可以进一步提升泛化性，在类似这样的原本有穷自动机解决不了的问题上缓存更多的答案，“假装”大模型是可以解决它的。但这不是我们想要的答案。\nAgent + LLM 可以成为完备图灵机 While 循环的图灵完备性 编程语言 WHILE 语义 (Semnatik):\n一个 while 程序 $P$ ,通过传递 $k$ 个参数,返回一个结果, 即 $f:\\mathbb{N}^k\\rightarrow\\mathbb{N}$ 其他未定义的参数可以在程序里被调用,但是必须设定为 $0$ WHILE 程序的结果在结束结束后通过 $x_0$ 传达 对于一个 WHILE 程序,有三种运行模式: 变量赋值: $x_i=x_j+c,c\\in{0,1,−1}$ $P_1$;$P_2$ ( $P_1$,$P_2$ 是两个任意程序程序),先运行 $P_1$ ,再运行 $P_2$ WHILE $x_i \\neq 0$ DO $P$ END 意思是, $P$ 程序将一直被运行,直到 $x_i$ 等于 0 定理：编程语言 WHILE 是图灵完备的\n证明: 我们将受限 RAM(Registermaschine)(只有 LOAD,STORE,CLOAD,CADD,CSUB 功能的 RAM) 中的每一步都用 WHILE 程序来代替计算 2，由于受限 RAM 是图灵完备的,所以 WHILE 也是图灵完备的。\n需要注意的是，循环中 ${x_i}$ 的个数对其是否是图灵完备的有影响。具体来说，任意图灵机可以被拥有 $8$ 个变量的 WHILE 程序模拟计算。\n这里的大部分变量其实是用来操控 RAM 或者用来操控图灵机的。真实使用时，不需要这么多的掣肘。\nAgent 的基本范式 Agent 的基本范式恰好就是一个 While 程序，其 Python 描述如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 @dataclass class ReAct(ABC): thought: Optional[str] = None action: Optional[str] = None def __post_init__(self): self.obs = self.run() # 获取执行 Action 的结果 @abstractmethod def run(self) -\u0026gt; str: \u0026#34;\u0026#34;\u0026#34; 执行Action \u0026#34;\u0026#34;\u0026#34; pass @classmethod @abstractmethod def parse(cls, text: str) -\u0026gt; \u0026#34;ReAct\u0026#34;: \u0026#34;\u0026#34;\u0026#34; 从大模型返回的文本解析成 ReAct 的实例 \u0026#34;\u0026#34;\u0026#34; pass @property @abstractmethod def done(self) -\u0026gt; bool: \u0026#34;\u0026#34;\u0026#34; 终止条件 \u0026#34;\u0026#34;\u0026#34; pass @abstractmethod def __str__(self) -\u0026gt; str: \u0026#34;\u0026#34;\u0026#34; 从 ReAct 中抽取信息形成新的 Prompt \u0026#34;\u0026#34;\u0026#34; pass act = ReAct() acts = [] while not act.done: acts.append(act) prompt = get_prompt(acts) act: ReAct = ReAct.parse(llm.call(prompt)) # 调用大模型，并将 response 解析成 ReAct 的实例 其中，存储和变量有两种选择：可以保存在函数 get_prompt 中（这意味着更多的人工控制设定），也可以保存在 ReAct 中（这意味着让大模型在上下文中自行决定保存哪些信息）。\n所以，Agent 的基本范式是图灵完备的。\n典型的几个 Agent 流程：\nReAct 获得反思推理能力 BabyAGI 基础的计划任务 Agent Reflexion 长期记忆和短期记忆（短期记忆就符合上述流程） AutoGPT 第一个全能 Agent 都可以转化到上述的范式中，进而获得更强大的计算能力（通用图灵机）。\nAgent 的重要意义其实是帮助 LLM 获得图灵完备性。当然，现在的 Agent 所缺乏的是自适应能力，还强依赖于 Prompt Engineering，不能自适应，不能进化，也没有利用上足够多的人类知识。\n突破的方向——可训练的 Agent 如果想获得更强的计算能力，需要提升的不仅仅是 LLM，而是结合了 Agent 后的整体系统。所以微调（fine tuning）和对齐（Alignment）更应该在整合了一个可学习的 Agent 之后进行。\n另外，基础的预训练模型或许并不需要特别的大（当然，越大性能越好的结论不变，但与其记更多的数据不如记更多的规律），而需要把更多的训练工作后置到集成了 Agent 之后进行，这样才有可能将有穷自动机无法识别的模式学习出来。\nAgent 的 While 程序模式，其实也恰好符合一个强化学习的学习过程，这里确实是可以做很多工作的。\n这是通往 AGI 之路吗 到今天为止，其实我们也没有一个关于智能的合理定义。\n学会了人的技能就算是智能了吗？会不会千百万年后的未来人回头看，会觉得人类太傻，并不具有智能呢？所以大模型学习人这件事是不是就是最好的选择？\n但至少今天人能够完成的一切，都没有可以超出图灵机范式的计算能力，所以图灵机的计算能力可以当作今天人类的极限。\nAGI 可以定义为:\n无需人类的介入，实现任意的图灵机能力。\n如果以这个定义来看，那么当下的 Agent + LLM 在理论上已经可以到达人类能够触达的一切天空了。\n有穷计算机无法模拟括号的匹配和乘除法的运算优先级。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n证明细节请看：·while循环，源自 Unentscheidbarkeit des Halteproblems: WHILE-Programm, Vorlesung 10 in BUK von RWTH Aachen\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://blog.uglyboy.cn/posts/2023/10/30/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E7%9A%84%E8%AE%A1%E7%AE%97%E8%83%BD%E5%8A%9B/","summary":"大模型是有穷自动机 非确定型有穷自动机（NFA）的定义 非确定型有穷自动机是一个 5 元数组 $Q,\\Sigma,\\delta,q_0,F$，其中 $Q$ 是","title":"大语言模型的计算能力"},{"content":"算数编码才是压缩的本质 一直以来，大家对于大模型的理解都接受了“压缩即是智慧”这个思想，这个想法源自 Compression for AGI - Jack Rae | Stanford MLSys #76\n里面核心模式只有一个：\n假定我有一个程序 f，我将 f 的代码传输给另一端； 我有一个序列需要传输，我通过 f 对逐个字符出现的概率进行了预测； 我根据算数编码，将结果编码后，传输给了另一端； 最后传输的信息量最小。 这不过是算数编码的定义好不好！！！ 哪里有什么神奇的地方。。。\n如果非说细节，也不过就是说明了为什么不用传输参数，将大模型的训练跟编码合到了一起而已。这完全证明不了大模型为什么有效果，以及为什么更大的模型效果更好。说出来的道理仅仅是：概率预测得越准，使用算数编码的压缩率越高。这件事结合算数编码的定义，不就是显然的问题吗？\n而且它原始的流程中，也没有能体现出“Next Token Prediction”的优越性和必要性。\n如果序列很小，那么压缩效率的核心是 f 的代码量。此时使用 lambda:x=x 达到的效果最好。 如果序列很大，那么传参也不会是压缩算法优劣的核心差别。那么其他模式训练出来的能对文本做良好概率预测的模型都可以达到好的压缩效果。 如果序列中等，我们需要的是是否存在一个方法，一次传输了多个算数编码和多个残差，能否通过这些信息还原出初始编码？针对这个问题，我们单独开一章来分析 是否只能用 NTP 做压缩？ 由自然归纳法，如果一次传输两个编码和两个残差，能还原出原始信息，那么，一次传输 $n$ 个算数编码和 $n$ 个残差就一定可以还原出原始编码。\n假设我们使用的算法的过程是先用除第一个字符以外的所有字符来预测第一个字符的概率，同时梯度下降；然后再用除第二个字符以外的其他字符预测第二个字符的概率，同时梯度下降。这样可以得到两个算数编码和两个残差，应该如何用这些信息还原初始的字符呢？\n方法和不确定型自动机的原理类似，或者用更土的办法来理解算法：\n我们用词表中的所有字符，重试这个过程，看哪个字符可以匹配上。虽然计算效率相比原版的 $\\mathcal{O}(1)$，这个方法的复杂度是 $\\mathcal{O}(n^2)$，但至少从压缩率的角度来看，我们对算法的要求没有计算速度方面的考量，更不用提这个算法一定是可以被优化的。\n以此推广，也就是对于任何模式的文本预测算法，都可以用同样的方法进行信息解压缩。于是不同方法之间在压缩率方面的差距还是会回归到对概率预测的精度上。甚至理论上看，使用了更多上下文的算法，应当可以比只做 \u0026ldquo;Next Token Prediction\u0026rdquo; 的算法精度更高。\n其他的无效解读 至于残差究竟是不是用信息熵，其实对这个压缩算法没有什么核心的影响，无论哪种残差该反向传播依旧按原本的方式传播，无所谓其物理意义。因为所有的意义都只体现在传递的残差能否还原原来的编码。残差能对应上什么物理意义的各种解释其实对压缩率和计算都没有帮助。\n结论 所以那个演讲其实不过是个披着数学魔术的神奇表演，本质上不过是说：大模型谁的性能好，谁就是更好的大模型——典型的废话文学新版本了。\n","permalink":"https://blog.uglyboy.cn/posts/2023/10/25/%E6%89%80%E8%B0%93%E5%8E%8B%E7%BC%A9%E5%8D%B3%E6%98%AF%E6%99%BA%E6%85%A7%E6%AF%AB%E6%97%A0%E6%84%8F%E4%B9%89/","summary":"算数编码才是压缩的本质 一直以来，大家对于大模型的理解都接受了“压缩即是智慧”这个思想，这个想法源自 Compression for AGI - Jack Rae | Stanford MLSys #76 里面核心模式只有一个：","title":"所谓“压缩即是智慧”毫无意义"},{"content":"基本安装 搭建站点 1 hugo new site \u0026lt;name of site\u0026gt; -f yml 初始化 Git 仓库 1 2 git init git branch -m main # 兼容 Github 的设置 安装主题 1 git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 若是已经安装过主题的，需要下面的命令激活\n1 git submodule update --init --recursive 本地调试 1 hugo server 添加新文章 1 hugo new posts/my-first-post.md 配置 配置 config.yml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 baseURL: \u0026#34;https://examplesite.com/\u0026#34; languageCode: zh-cn title: ExampleSite theme: PaperMod timeZone: Asia/Shanghai enableInlineShortcodes: true enableGitInfo: true enableRobotsTXT: true enableEmoji: true hasCJKLanguage: true outputs: home: [HTML, RSS, JSON] Params: title: ExampleSite description: \u0026#34;ExampleSite description\u0026#34; author: xxx homeInfoParams: Title: Hi there wave Content: Can be Info, links, about... socialIcons: # optional - name: rss url: /index.xml ShowFullTextinRSS: true ShowReadingTime: true ShowCodeCopyButtons: true DateFormat: \u0026#34;2006-01-02\u0026#34; # 日期格式化 menu: main: - identifier: home name: 主页 url: / weight: 10 - identifier: search name: 搜索 url: /search weight: 20 - identifier: tags name: 标签 url: /tags weight: 30 - identifier: archives name: 时间轴 url: /archives weight: 40 配置 content/archives.md 1 2 3 4 5 --- title: \u0026#34;时间轴\u0026#34; layout: \u0026#34;archives\u0026#34; summary: archives --- 配置 content/search.md 1 2 3 4 5 6 --- title: \u0026#34;搜索\u0026#34; # in any language you want layout: \u0026#34;search\u0026#34; # is necessary summary: \u0026#34;search\u0026#34; placeholder: \u0026#34;Typing something...\u0026#34; --- 增加 Latex 数学公式的支持 在 layouts/partials 路径下新建文件 extend_head.html：\n1 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} 和 math.html 文件：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 \u0026lt;script\u0026gt; MathJax = { tex: { inlineMath: [ [\u0026#34;$\u0026#34;, \u0026#34;$\u0026#34;], [\u0026#34;\\\\(\u0026#34;, \u0026#34;\\\\)\u0026#34;], ], displayMath: [ [\u0026#34;$$\u0026#34;, \u0026#34;$$\u0026#34;], [\u0026#34;\\\\[\u0026#34;, \u0026#34;\\\\]\u0026#34;], ], processEscapes: true, processEnvironments: true, }, options: { skipHtmlTags: [\u0026#34;script\u0026#34;, \u0026#34;noscript\u0026#34;, \u0026#34;style\u0026#34;, \u0026#34;textarea\u0026#34;, \u0026#34;pre\u0026#34;], }, }; window.addEventListener(\u0026#34;load\u0026#34;, (event) =\u0026gt; { document.querySelectorAll(\u0026#34;mjx-container\u0026#34;).forEach(function (x) { x.parentElement.classList += \u0026#34;has-jax\u0026#34;; }); }); \u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://polyfill.io/v3/polyfill.min.js?features=es6\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34; id=\u0026#34;MathJax-script\u0026#34; async src=\u0026#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-svg.js\u0026#34; \u0026gt;\u0026lt;/script\u0026gt; 利用 Github Actions 自动发布 编写 Github Actions 脚本 在 .github/workflows 下新建文件 build.yml：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 # This is a basic workflow to help you get started with Actions name: Auto Deploy Hugo # Controls when the workflow will run on: # Triggers the workflow on push or pull request events but only for the main branch push: branches: [ main ] pull_request: # A workflow run is made up of one or more jobs that can run sequentially or in parallel jobs: # This workflow contains a single job called \u0026#34;build\u0026#34; build: # The type of runner that the job will run on runs-on: ubuntu-latest # Steps represent a sequence of tasks that will be executed as part of the job steps: # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: latest - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: ${{ github.ref == \u0026#39;refs/heads/main\u0026#39; }} with: deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }} # secret 中设置好私钥 external_repository: your-repo/your-repo.github.io # Page 仓库 publish_branch: main # Page 仓库的分支 publish_dir: ./public # 静态网页路径 commit_message: ${{ github.event.head_commit.message }} 记得在 Page 仓库的设置中开启 Github Pages，选择 main 分支，用你的仓库名替换 your-repo/your-repo.github.io。\n生成私钥 1 ssh-keygen -t rsa -b 4096 -C \u0026#34;$(git config user.email)\u0026#34; -f gh-pages -N \u0026#34;\u0026#34; 你将得到两个文件：\ngh-pages.pub 是 Public Key gh-pages 是 Private Key 在 Github 中设置信息 在本项目目录下设置 Sectets 的 ACTIONS_DEPLOY_KEY 信息，填入 Private Key 在 Pages 项目下设置 Deploy Keys，填入 Public Key，记得选中 Allow write access 添加 public key Success 添加 private key Success ","permalink":"https://blog.uglyboy.cn/posts/2023/10/18/hugo-%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/","summary":"基本安装 搭建站点 1 hugo new site \u0026lt;name of site\u0026gt; -f yml 初始化 Git 仓库 1 2 git init git branch -m main # 兼容 Github 的设置 安装主题 1 git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 若是已经安装过主题的，需要下面的命令激活 1","title":"Hugo 搭建流程"},{"content":"Dataset Size 和 Loss 的关系 最大似然估计（MLE） 一切机器学习的本质都是最大似然估计：\n模型下的理想真实世界的概率分布：$p(x|\\theta)$\n我们不知道真实世界的分布，所以我们要用样本估计似然函数 $L(\\theta|x)$\n现在 $x$ 已知，$\\theta$ 未知，若对于两个参数 $\\theta_1$ 和 $\\theta_2$ 有\n$$ L(\\theta_1|x) = p(x|\\theta_1) \u0026gt; p(x|\\theta_2) = L(\\theta_2|x) $$\n那么意味着 $\\theta=\\theta_1$ 时，随机变量 $\\theta_1$ 生成 $x$ 的概率大于当参数 $\\theta=\\theta_2$ 时。这也正是似然的意义所在，若观测数据为 $x$，那么 $\\theta_1$ 是比 $\\theta_2$ 更有可能为分布函数的参数。\n在给定观测数据集 $X={x_n},n \\in \\mathbb{N}$ 时，真实世界最有可能的概率分布对应的参数 $\\hat\\theta$ 应该满足：\n$$ L(\\hat\\theta|x) = p(x|\\hat\\theta) \u0026gt; p(x|\\theta) = L(\\theta|x), \\theta \\in \\mathbb{\\Theta} 且 \\theta \\ne \\hat\\theta $$\n即：\n$$ \\hat\\theta = \\arg\\max\\limits_\\theta L(\\theta|x) $$\n求解最大似然函数：\n$$ \\frac{\\mathrm{d}}{\\mathrm{d}\\theta} L(\\theta|x) = 0 $$\n对这个方程数值求解的过程，对应的就是绝大部分机器学习算法中的梯度下降过程。\n在测试集上评估的结果，我们预想的误差应当包含两部分：\n似然函数 $L(\\theta|x)$ 对真实世界概率分布描述能力不足，带来的误差； 通过 $X$ 估计 $\\theta$ 时，样本本身的误差； 若假定我们可以通过梯度下降收敛（即上面最大似然函数的导数在 0 的一个很小的临域中），那么至少就是我们相信在观测数据集 $X$ 上，模型是正确的，那么评估的误差就更加明确的指向 $X$ 本身带来的误差。\nFisher 信息量 为了求解最大似然估计，我们常用的数值手段是：\n假定观测数据集 $X$ 的真实世界概率对应的概率密度函数是 $f(x_i;\\theta)$，定义似然函数：\n$$ L(X;\\theta) = \\prod \\limits^{n}_{i=1} f(x_i;\\theta) $$\n求解时，先对 $L(X|\\theta)$ 取对数，再求导，这个函数定义为 Score function：\n$$ S(X;\\theta) = \\sum \\limits^n_{i=1} \\frac{\\partial \\ln f(x_i;\\theta)}{\\partial\\theta} $$\n则 Fisher 信息量的定义就是这个 Score function 的二阶矩（second moment）\n$$ I(\\theta) = E[S(X;\\theta)^2] $$\nFisher 信息量最重要的意义是：通过中心极限定理，弱大数定律，依概率一致收敛，以及 Slutsky 定理，可以证明 MLE 的渐进分布是正态分布 1，即：\n$\\hat \\theta \\stackrel{P}{\\longrightarrow} \\theta_0$，其中 $\\theta_0$ 是参数的真实值； $\\sqrt{n}(\\hat\\theta - \\theta_0) \\stackrel{L}{\\longrightarrow} N(0,I^{-1}(\\theta))$ ; 数据量与误差的关系 花了大量篇幅描述了 最大似然 和 Fisher 信息量后，最终真正值得我们关注的结论却异常的简单：\n$$ L(D) \\propto D^{-0.5} $$\n这个结论同计算均值时，数据样本带来的误差是完全一样的。\n真实的机器学习条件下，我们的样本量的质量并不均匀，所以往往会优先使用更好的样本（小样本集不是大样本集的随机采样，而是精选），会导致观测数据集 $X$ 不能满足概率同分布，所以带来的结果是上述幂律关系中，实际的幂律值会小于 $0.5$。\n理论上来说，如果我们能做到样本集随机采样，那样这个幂律就会更加接近 $0.5$，而如果样本集不能随机采样，某种意义上说，能否保持这种幂律关系是值得怀疑的。所以对于 OpenAI 和 Google 的 Scaling Law 的论文，在样本量同 Loss 的关系上，Google 的结果是更可信的。\n哪怕依旧能维持幂律关系（维持幂律关系的数学基础是不存在的。。。），具体的数值也只能通过实际拟合来估计。因为这件事不是通用规律，只跟具体的训练数据集的分布有关，跟模型无关（前提条件是模型能在大数据下收敛，即满足大数定律、中心极限定律，并且模型可以拟合真实分布）。\nCompute 和 Loss 的关系 控制论和 PID 算法 梯度下降法的数值计算过程，某种视角下可以理解成就是控制论下的控制算法——我如何根据真实信息来控制我的预期值离目标值更近。\n直观而好用的方法就是 PID 算法：\n$$ u(t) = K_pe(t) + K_i\\int^t_0 e(\\tau)\\mathrm{d}\\tau + K_d\\frac{\\mathrm{d}e(t)}{\\mathrm{d}t} $$\n当然，我们的梯度下降法原没有 PID 算法如此之精密，实际流程大概率只使用了 P 的部分，也就是对误差做补偿。在深度学习中，被称为反向传播。\n单参数计算量与误差的关系 单目标的 PID（只省 P 过程了）算法，误差与计算量（迭代次数）之间的关系：\n$$ L(C) \\propto K_p^{C}=e^{\\lambda C} $$\n即，误差同计算量之间的关系是指数关系，不是幂律关系。\n这一点在 Sorscher et al. (2022) 中有所体现，它的结论是：至少对于某些任务，损失可以随着数据集 2 大小呈指数级增长，而不是作为幂律。\n总计算量与误差的关系 不同于优化问题中，我们会通过反复迭代的方式增加计算量，深度学习的计算量基本上是同模型规模和数据量正相关的。反过来意味着对单参数的优化迭代很少的固定步数就可以收敛，所以在通常数据量规模下，可以将单参数计算量带来的优化效果视作常数（都能优化到收敛）。\n单参数计算量带来的优化效果视为常数（不会随计算量、节点数、数据量变化而变化），意味着计算本身同误差之间没有直接关联，总计算量与误差之间的关联体现的是数据量与误差的关系和节点数（结构）与误差的关系。\n总计算量与数据量成正比，而数据量同优化效果之间的关联我们已经在前文完成了论述。下一步我们将分析节点数和误差之间的关系，或者其实更加精确的说，应当是在单参数误差不变的条件下，节点数的变化与总计算量之间的关系，是这个关系蕴含了总计算量与误差之间的关联。\nCompute 和 Parameters 的关系 分形维度 具有自相似性的结构就是分形。而我们的深度学习计算就是典型的分形结构——当模型规模扩大时，主流的扩大的方式就是增加层数 3，这带来的就是自相似性。\n而自相似性带来的重要性质就是，系统会具有分形维度，分形维度会使得系统规模扩大时，对应的全局属性并不是等比增加，而是幂律增加，幂律的指数就是其分形维度。\n生物学中有重要的 $\\frac{3}{4}$ 定律——生物随着重量的变大（原子数量的规模扩大），其相关的很多生物学特征，例如新陈代谢能力、血管长度、心跳、呼吸等等，并不与重量成正比，而是按照 $\\frac{3}{4}$ 的幂律进行增长。 一个直观的理解，随着生物体长度增长，其体重会以幂律 $3$ 进行提升，而腿部的横截面则是幂律 $2$ 增长。所以生物的规模变大，就会带来腿部承受的压力不断变大，所以老鼠体型的动物的腿都很细，但大象规模的动物，腿都很粗；蚂蚁可以举起自身体重百倍的物品，但人只能举起和体重相仿的物品。这些都是因为规模变化带来的非线性，要求生物的动力学模型必须发生变化，而不能与小规模时一样。 类似的，在城市规模同城市中加油站、小超市、医院之类的城市核心建设之间，也存在着幂律增长的关系——相关幂律大约是 $0.85$。\n对应的，深度学习模型中，在保证单参数误差不变的条件下，Parameters 规模的增加所需要的 Compute 计算量的增加不是等比的，而是幂律的，而且这个幂律应当是小于 $1$ 的。\n换句话说，计算量同损失之间的关系是伴生关系——计算量本身同损失是没有直接关联的。带来损失变化的根本原因不是计算不足，而是模型表达能力以及数据本身蕴含的信息带来的。\n但因为这里的结论中，计算量与参数数量也是幂律关系，由前文，数据同损失也是幂律关系，如果参数数量同损失同样是幂律关系的化，那么计算量与损失也可以用幂律关系来表示。\nParameters 与 Loss 之间的关系 这里要分析的是参数量增加为何能带来 Loss 的降低。这是因为 Parameters 的增加，可以提升模型的表达能力，可以更好的拟合目标函数。也就是说，一个模型距离真值的误差（Loss），除了因为 Dataset 自身的误差外，还有一部分是模型距离 Dataset 所描述的最大似然函数的误差。\n这部分要是详尽分析起来会很复杂，幸好已经有一些这方面的研究：Sharma et al. (2020) 和 Bahri et al. (2021) 都对这个问题进行了很好的分析，其结果也有对应的实验支撑。\n文章假定深度模型将数据映射到一个 $d$ 维数据流形上，增加的模型参数（无限数据的条件下）都会被模型用来将数据流形分割成更小的组件，然后模型将在数据流形的每个分量上进行独立的预测，以优化训练损失。\n这样自然的，如果我们想让子区域的大小缩小 $2$ 倍，就需要增加 $2^d$ 倍的数据量或模型参数。进而就是直观的结论：\n$$ L(P) \\propto P^{-\\frac{1}{d}} $$\n即 Loss 与 参数量之间是幂律关系，其幂律值小于 $1$（因为有 $d\u0026gt;1$）。\n总结 至此，关于 Scaling Law 的数学含义就已经基本都解释清楚了。\n更重要的问题是，有了相关的理论支撑后，我们能做什么？哪些事情做不了。\n基于多份数据融合的实验结果预测 这件事是不可行的。\n一切机器学习的基础都是最大似然估计，而最大似然估计的基础假设就是独立同分布。两组分布不同的数据融合，一定会破坏原有的分布，至于不同比例下融合后形成怎样的分布，具有怎样的特性，在两份数据的分布都已知的条件下，是可以计算的。但对于我们自己的机器学习任务，原本就是要去学习数据的分布，这就决定了，不可能在不了解数据分布的条件下，估计融合后的数据分布。\n类似的，多分不同分布的数据集怎么融合能更贴近测试集也是不可知的，只能试出来。由于测试集也不是真值，甚至测试集对真实世界的表达很可能还不如训练集，所以针对测试集做针对性调优是不值得的。\n这部分的定量分析，其实可以借鉴 OpenAI 关于 Scaling Laws 的经典文章 Kaplan et al. (2020) 中尝试的方法：\n迁移学习与测试效果的提升： 当我们在与训练集分布不同的文本上评估模型时，其结果与训练验证集上的结果强烈相关，损失函数中有一个大致恒定的偏移量。换句话说，转移到不同的分布会带来一定的固定惩罚，但除此之外，其提升程度大致与训练集上的表现一致。\n可以用类似这样的方法，通过多份不同分布的测试集效果打分情况，评估模型表现。\n当然，实操方面其实也不复杂，就是多看几个测试集的结果，记录下来。如果模型优化后，在各个测试集上的提升是基本一致的，那就说明这次改进不是因为数据分布变化带来的，而是因为模型能力带来的。\n判断最优的参数和模型数据量配比 这件事不是特别值得做。因为我们当前模型的优质数据不够多。所以提供的数据质量是不稳定的。小模型上得到的预测数据值，在大模型上操作时，肯定不能按预测量来操作，而是还需要进一步增加数据量。但是具体增加多少，因为我们对数据质量无法在训练前得到评估，所以是不可预测的。\n这件事值得做的条件是：我们已经用一份数据训练了一个很大的模型，然后我们可以通过抽样的方法构建小模型，用大模型预测小模型需要多少数据量，这件事是可行的。\n当然，如果只是一个预估值做参考，这件事倒是可以做一下。\n注：这件事值得做的数学理论基础是：我们需要找到样本的精度和模型训练的流型精度一致的对应比例。这件事的前提条件是：模型得到充分训练，且 Loss 与 样本、模型精度是同一个数量级（Loss 就是当前的精度）。如果这个精度不一致，loss 会被更大的精度所制约。带来的影响是会增加一定的无效计算量。\n理论上，这件事更应该用适合的停机算法来避免冗余的计算，而不是需要精准的预估精度。\n尝试用更小的模型达到更优的效果 这件事价值不是特别大。\n不需要知道具体的比例，我们也知道，哪怕对于小模型，喂更多的数据可以达到更好的效果。 小模型的表达能力是有限的，所以也不是喂更多的数据就一定可以提升效果。 于是哪怕做出了预估，也需要加好多限制条件，而实际应用场景也不多。\n其他？ 昨天看完后，原本想说 Scaling Law 是个显然的结果，其规律并不蕴含更深层次的信息。但后来仔细想了想，可能还是有很多细节值得仔细的表述一下，以免遗漏什么可能性，所以写了这个文档。\n总得来说，我对于 Scaling Law 并没有想到更深的应用场景，它所能表达的大概也只是：更多的数据、更大的模型（更多的模型参数）可以更好的拟合真实的概率分布。这件事对于机器学习来说，是自然的结论。这个规律几乎不涉及具体的模型形式——几乎只要是机器学习都符合这个规律。\n所以从第一性原理角度出发，它算是一个数学上给出定性的存在性定理：我们的机器学习是可以不断优化的。但它不蕴含如何能更好地做优化的信息。\n这个定理的前置条件和证明过程这里就不赘述了，需要的话自己查一下。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n大部分的训练，增加迭代次数的方式都伴随着提供更多的训练样本，若模型距离收敛所需要的迭代次数比较多，例如如果 学习律（本质上就是 PID 中的 $K_p$）比较小，模型距离理论上限比较远，这时误差项主要不是来源于数据自身的误差，而是来自梯度下降逼近的误差，那么这个指数关系就会比较显著，对应的表象就是误差同数据量之间是指数关系。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n还可以增加每层的神经元数量（宽度），这种增加模式就不属于分层。类似于 Scaling Law 的规律，这种扩大的方式（形状变化）对于结果的影响不显著。当然，这件事是值得做实验，试一试少层数多神经元和多层数少神经元（参数总数一致）训练的结果是否一致。盲猜会有显著性能差异。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://blog.uglyboy.cn/posts/2023/10/10/scaling-law-%E7%9A%84%E6%95%B0%E5%AD%A6%E8%A7%A3%E8%AF%BB/","summary":"Dataset Size 和 Loss 的关系 最大似然估计（MLE） 一切机器学习的本质都是最大似然估计： 模型下的理想真实世界的概率分布：$p(x|\\theta)$ 我们不知道","title":"Scaling Law 的数学解读"},{"content":" # 组织理论 \u0026gt; 组织背后的核心要素 --- - 员工没有主人翁意识，工作不积极，不加班； - 不同部门不能很好的协同合作，总是互相指责，甚至拆台； - 大家想法不统一，总也拧不成一股绳； - 团队氛围不好，大家都是精致的利己主义者； - 留不住好员工，优秀的人培养一阵子就要跳槽（创业）去了； --- #### 有哪些手段可以解决这些组织问题？ ----- - 提升管理能力（领导能力、战略决策能力等） - 调整组织架构、流程、制度（机制设计、利益分配） - 优化战略目标的设定和拆解（KPI 考核） - 组织文化建设（使命、愿景、价值观） --- #### 可这些“办法”总让人有些隔靴瘙痒 ----- - 各种方案分属不同的领域，为何能解决同一类问题？ - 这些问题好像也没办法被解决，只能被改进； - 难以定义一个组织“质量”指标，来衡量这些手段带来的改进程度 --- ### 组织的本质是共情 组织是一群有共情的人尝试进一步获取共情信息的团体 --- #### 考察一下这些组织 ----- - 定期逛街的闺蜜、一起网吧开黑的同学； - 孩子们的小团体； - 帮派、社团、集会、论坛、粉丝群； - 宗教、党派、学术圈； - 旅行团、学校、企业； --- ## 构建一个好组织 \u0026gt; 组织究竟是什么？ --- #### 如何构建好一个社群（BBS） ----- - 社群是解决共情需求的： - 找到一个社群的核心共情话题，吸引对之感兴趣的人来； - 鼓励大家多针对核心话题讨论聊天，提升共情的频次； - 设立版主，把更有共情感的话题置顶，同时删除无关话题； - 拉来更资深的内容创作者，提升核心话题的共情程度； --- #### 如何构建好一个社团 ----- - 社团是线下实体组织，在信息的传播上，比线上（社群）可控但效率低： - 社团一定要定期（高频）组织活动，在活动中也要尽量提升共情的频率；社团线下活动之余，还可以通过线上渠道提升共情频率； - 在社团成员间，可以通过形成非社团主题的共情，提升社团整体共情； - 社团好不好，看社团的组织能力；社团的组织能力，看社长的影响力； --- #### 如何构建好一个企业 ----- - 好的企业应当也是一个好的社团： - 公司的共情主题是什么？（使命愿景价值观） - 老板是不是企业中这个共情主题的 KOL？（领导力来源于认同） - 企业中做了哪些增加共情主题的工作吗？（企业文化） - 企业中非主题的员工共情多吗？（公司氛围） - *好公司的评判标准：员工能否感受到企业中的共情（非物质），进而感到很快乐？* --- #### 如何构建一个好的国家 ----- - 国家的共情是什么？ - 统一编码、内容、观点； - 怎样成为一个好的国家领导人？ - 领导人需要是国家共情的 KOL； - 经济未必能成就一个国家（晚清），或灭亡一个国家（新中国）；但文化可以。 --- #### 组织的“质量” ----- - 组织的本质是共情，组织“质量”的评估标准是组织（作为信息提供者）带来共情的能力： - 共情信息的频率； - 共情信息的共情程度； - 组织具有群体性，所以一定会存在 KOL： - KOL 才是组织实质的领导者； - KOL 给组织成员提供的共情水平决定了组织的下限； --- ## 组织实战检验 \u0026gt; 根据理论，开始实操 --- #### 作为一个组织的领导（企业 CEO），最重要的使命是什么？怎么检验？ --- #### 团队协同出问题/团队氛围不好/组织成员没有积极性，这是谁的责任？用什么办法调整（是否方法不当）？ --- - 考察一下自己团队的组织共情建设： - 核心组织共情（编码、共情、观点）有哪些？ - 共情频率如何？有什么组织保障？ - 对新员工（低共情员工）有哪些共情培养方式？ - 对有利/不利于共情的声音的处理方式？ --- ## 看几个案例 \u0026gt; 组织问题不再扑朔迷离 --- #### 组织成员贡献的意愿 ----- - 员工为什么愿意加班？为什么应当有主人翁意识？为什么工作中要有更强的主动性？ - 所谓工作态度的问题，可以归结成：组织成员有多强的贡献的意愿： - 贡献的意愿，意味着不满足功利动机（功利动机下不会贡献的）； - 获得足够的共情反馈，才能鼓励一个人用贡献的行为来获取更多的共情信息；另一方面，共情动机才促使一个人改变自己； - 回归到具体的人，共情之间没有本质的区别，可以是集体荣誉感，可以是事业感使命感，也可以只是职业精神，甚至“士为知己者死”； --- #### 成员间的信任和协同 ----- - 成员间的信任和协同，依赖的不过是成员间的共情程度； - 组织架构的调整，本质上调整的是小组织的范围，形成小团体的组织共情，以提升特定成员间的共情程度； - 开会、团建、轮岗、“联姻”等等方法都可以提升相关成员间的共情程度； - 组织中整体的组织共情越强，成员间的组织共情就越强； - 相互补位是很难依靠制度来保障的。因为补位的发生，往往意味着未预期的状况，这种状况大概率是没办法事前约定或被熟练执行的。 --- #### 老兵不死，只是凋零 ----- - 谁是最有组织共情，最能维护组织共情，最能贡献共情内容的人？在组织中呆的更久的人； - 组织未来的 KOL 也应当从组织中诞生； - 绩效考核已经衡量了老兵的功利价值，但允许老兵终老，在组织中贡献更多的共情价值吧，这种价值是钱买不到的 --- #### 不要用法律的方式对待道德 ----- - 形成共情的方式是给予可共情的信息，而不是功利的奖惩； - 用法律的方式对待道德，注定解决不了根本问题——共情是近期信息共情的均值，而不是某条信息的共情合格率； - 通过 KPI 考核组织成员，永远没办法提升组织共情，甚至会更加糟糕。 - 阿里的月饼事件就是一个典型的管理手段在共情方面的滥用，带来了长期的不良影响。 --- #### 从宗教看组织管理 - 从宗教组织中的现象来看： - 宗教信徒都有强烈贡献的意愿； - 宗教信徒间往往可以有很好的互信； - 宗教建立的是一种高频度高质量的共情渠道： - 定期做宗教信息（共情信息）的交流； - 在编码、内容、观点上都会形成极高的共情密度； ","permalink":"https://blog.uglyboy.cn/slides/2022/10/15/%E7%BB%84%E7%BB%87%E7%90%86%E8%AE%BA%E8%AE%B2%E4%B9%89/","summary":"# 组织理论 \u0026gt; 组织背后的核心要素 --- - 员工没有主人翁意识，工作不积极，不加班； - 不同部门不能很好的协同合作，总是互相指责，甚至拆台； - 大家想法不","title":"组织理论讲义"},{"content":" # 科学决策 \u0026gt; 如何做出正确的决策 --- #### 什么是决策 ----- - 想做的事情很多，但没有足够的资源全做，所以要进行优先级排序； - 决策的基本原则： - 找到主要矛盾，对方案做优先级排序； - 当主要矛盾退化为次要矛盾时，重新针对新的主要矛盾重复上述过程； --- - 北京簋街（著名的美食街）有一家麻辣小龙虾的店：通乐老店，经营多年，营收情况一直比较稳定（盈利）。请问它如果有 500w 的投资，想进一步的发展，你会采取怎样的策略？ - 研究特色小龙虾； - 开发小龙虾以外的特色美食； - 在簋街开分店（或扩大店面）； - 在簋街之外开分店； - 以上都做尝试； --- - 簋街的特色是麻辣小龙虾，绝大部分食客就是冲着麻辣小龙虾去的簋街； - 簋街最大的小龙虾品牌是胡大和仔仔，都有至少 5～6 家分店，而且每家分店在高峰期都会排很长的队； - 通乐老店的大众点评中高赞评价是：味道不错；相比于胡大和仔仔，最大的好处是不用排队，上菜快，停车方便； - 大众点评的高赞菜，除麻辣小龙虾外，主要是：麻辣板筋、馋嘴蛙、麻辣蜗牛等麻辣的特色料理。 --- #### 还有一些信息 ----- - 小龙虾具有季节性； - 簋街的地租明显高于簋街外临近区域的租金； - 预制菜和直播（吃播）是当下年轻人中流行的方式； - 簋街有一家“很久以前羊肉串”也非常的火，每天排队的人也很多； --- #### 启示 ----- - 决策需要充分且必要的信息。 - 决策是一门科学： - 不同的决策者能够根据具体情况（信息充分时），得出相同或相似的结论。 - 如果出现不同的决策，首先要看信息是否对齐且充分和必要，再看是否运用了科学的态度进行决策。 --- ## 决策所需要的信息 \u0026gt; 市场和份额 --- #### 市场视角的演进 ----- ```mermaid flowchart LR A[产品视角] B[客户视角] C[竞争视角] D[市场视角] A --\u0026gt; B B --\u0026gt; C C --\u0026gt; D ``` --- ### 定义市场 ----- 市场刻画了客户视角 --- #### 顾客的需求定义了市场 ----- - 特定需求（顾客）的可替代性产品（生产者）的集合，构成一个市场 - 市场不是随意定义出来的，是由（顾客的）需求确定的； - 一个市场中的可替代性产品之间都是竞争关系； - 一个产品可以同时处于多个市场当中； --- #### 错误决策的常见原因一：错判了市场 ----- - “无代码”是否是一个市场？ - 商汤、旷世所在的“人工智能赛道”处在什么市场中？ - 索引科技处于什么市场中？主要的竞争对手究竟是谁？ --- ### 市场份额 ----- 市场份额刻画了产品和竞争视角 --- #### 用市场份额衡量产品能力 ----- - 自身的全部产品能力都体现在当前的市场份额中； - 竞争对手的产品能力也类似，都体现在他们的市场份额中； - 业务方向的决策，要根据与最大的竞争对手（很容易从市场份额中得到判断）之间的优势和劣势，做出选择； - 基于自身不同的市场份额，得到的决策也不同。 --- #### 错误决策的常见原因二：不从份额看问题 ----- - 阿里一个项目能进“双十一”，就能拿到好的数据结果，能说明什么问题？ - 业务增长不如大盘，其实就意味着落后于竞争者了。 - 有正向收益不能证明事情做对了，收益负向也不能说明事情做错了，需要从份额的视角看问题。 --- ## 科学决策 \u0026gt; 相投投入，如何获得更大的市场份额 --- #### 业务方向的科学决策 ----- - 业务方向的选择，是在各种优势和劣势中做出判断——优先发展哪一项优势，或优先补足哪一项劣势； - 在竞争环境中，会更容易做出业务方向的判断（两点确定直线）： - 有特定的竞争对手，容易在对比中找到主要优势和劣势； - 决策是做判断：巩固主要优势还是补足明显劣势； --- #### 错误决策的常见原因三：不看比较优势做决策 ----- - “同样的资源，为什么要给到你？” - 不是有价值的项目就值得做： - 要看投入产出比，而不只是产出； - 需要将所有有价值的项目进行优先级排序，进而决策优先做什么； --- #### 错误决策的常见原因四：无视定位做决策 ----- - 海底捞和巴奴毛肚火锅，战略打法一定是不同的； - 大企业的经验在初创企业中不适用；初创企业的经验同样也带不到大企业当 中： - 企业不同的阶段，市场定位不同，科学的决策自然也不同； - 凭手感做决策，你的经验可能跟当前发展阶段不匹配； --- ## 商战 \u0026gt; 基本竞争策略 --- #### 基本竞争策略 ----- - 市场领先者的策略： - 以自己为假想敌，攻击自己； - 针对追赶者的策略，做防御（follow 对手的策略）； - 追赶者的策略： - 在领先者的优势中找弱势，作为主攻方向； - 小角色（无法与对手进行相同投入的竞争）的策略： - 避开大家伙，聚焦小市场，获得相同投入下的优势； --- ### 错误的决策 ----- 导致我们做出错误决策的常见原因 --- #### 常见原因 ----- 1. 错判了市场； 2. 不从份额看问题； 3. 不看比较优势做决策； 4. 无视定位做决策； ","permalink":"https://blog.uglyboy.cn/slides/2022/04/27/%E7%A7%91%E5%AD%A6%E5%86%B3%E7%AD%96%E8%AE%B2%E4%B9%89/","summary":"# 科学决策 \u0026gt; 如何做出正确的决策 --- #### 什么是决策 ----- - 想做的事情很多，但没有足够的资源全做，所以要进行优先级排序； - 决策的基本原则： - 找到主要矛盾","title":"科学决策讲义"},{"content":" 原本是打算不再在这里写技术类博客了，结果最近的一个小成果确实没啥合适的地方存放，所以还是留在这里吧。\n自从开始使用树莓派，忧虑的一个重要问题就是：万一我的硬盘坏了可怎么办？通常的方案是硬盘组磁盘列阵，例如 raid1，raid5，raid10。可惜这套方案价格太高，不符合我用树莓派做 NAS 的风格。所以还是追求一套通常且通用的数据备份方案。\n其间尝试了一些手段，例如：rclone，Duplicati，rsync，自己写 shell 脚本等等，但是如何构建一个完善的数据备份方案还是比较复杂的，需要考虑包括备份的可靠性，备份文件的大小（冗余程度），备份的版本管理，按不同时效留档等很多的要素。\n最终，终于遇到了 automation ，并依此打造了一套完善的备份方案。\n备份方案的基本原则 备份数据要保证本地非源数据的硬盘保存一份，云端保存一份； 云端备份需要有数据加密机制； 备份数据需要有类似 git 的版本管理机制，保证冗余数据不被重复存储，且按版本标签可方便的管理； 云端保存需要支持各种云端数据源； 本地需要有旧版本文件清理机制； 可以对不同的数据源进行不同的备份机制设定； 自动化管理备份，无需过多的人工干预和介入； 数据备份方案的基本组件 rclone 最早我是使用 rclone + shell 进行备份的，但是这只能解决云端备份和支持数据源的部分，而且设定异常的复杂。根本原因是在于，rclone 其实是一款同步数据应用，而不是数据备份应用。\n但现在有了一个良好的开端：可以将数据同步到任何云端网盘中了。\nrestic 这是一款类似于 rclone 的软件，但是不同的是，restic 是专注于备份的软件，支持加密传输，增量备份，快照记录等等，而且还可以同 rclone 联动，利用 rclone 支持多种云端的能力，将数据备份到各种网盘中。\n另外，restic 也可以非常便捷的还原任何一个版本的数据，总得来说，是一个很简单便捷的备份工具。但它是一个命令行工具，也就是说，并不是一个服务，无法提供自动备份的功能（定时备份），而且每一项操作都需要运行相关命令加参数。\n如此一来，关于备份这件事，就只剩下自动化版本管理这个问题需要解决了。\nautorestic autorestic 是 restic 的一个「包装器」，通过自动调用 restic 的方法，加上了配置文件、定时执行（伪）等功能。将命令行程序扩展成了一个基于固定配置可重复运行的应用。\n相关的命令说明还是需要自己看一下官方的文档。\n但 autorestic 依然是一个命令行，不是服务，虽然提供了配置文件的方式可重复操作，但依然无法实现定时自动备份功能\ncrontab autorestic 的官方文档推荐的方式即配合 crontab 每 5 分钟执行一次的方式 将 autorestic 配置成一个伪服务，进而提供定时自动备份功能。\ndocker 最后，终极的解决方案，是需要将这些工具组合起来，形成一套完整的工具链。于是将对应的工具打包进 docker image，就可以便捷的部署和使用对应的自动化备份方案了。\n2023-12-18 更新 之前一直没有能自动进行 forget 操作，导致备份的数据越来越多。现在已经解决了这个问题，通过在 crontab 中添加 forget 操作，可以自动清理过期的备份数据了。 之前的景象的 hostname 每次都是随机生成的，导致每次都会重新初始化，现在已经解决了这个问题，通过在 docker-compose 中添加 hostname，可以保证每次都是同一个 hostname 了。 最终的数据自动化备份解决方案 我通过 Github 的自动化流程，构建了实现上述 autorestic 服务的 镜像 ，使用说明如下：\nFeatures Often it is usefully to trigger backups automatically. So in this image, it would be trigger the command every 5min.\nInstall Create an initial config file (autorestic.yml) such as: 1 2 3 4 5 locations: my-location: from: /data to: my-backend cron: \u0026#39;0 3 * * 0\u0026#39; # Every Sunday at 3:00 You can read full docs to configure it.\nCreate an empty file (autorestic.lock.yml) run [[docker-compose]] as below: 1 2 3 4 5 6 7 8 9 10 11 12 13 version: \u0026#34;3\u0026#34; services: autorestic: image: guixi/autorestic container_name: autorestic restart: unless-stopped hostname: autorestic volumes: - /etc/localtime:/etc/localtime:ro - $(pwd)/autorestic.yml:/root/.autorestic.yml:ro - $(pwd)/autorestic.lock.yml:/root/.autorestic.lock.yml - ~/.config/rclone/rclone.conf:/root/.config/rclone/rclone.conf:ro #optional - my-volume:/data Usage you can use autorestic to show all buckups such as\n1 docker exec -it autorestic autorestic exec -av -- snapshots and also use restic directly such as\n1 docker exec -it autorestic restic License MIT © Uglyboy\n","permalink":"https://blog.uglyboy.cn/posts/2022/02/22/autorestic/","summary":"原本是打算不再在这里写技术类博客了，结果最近的一个小成果确实没啥合适的地方存放，所以还是留在这里吧。 自从开始使用树莓派，忧虑的一个重要问题就","title":"Autorestic"},{"content":"组织的基本构成 非正式组织 组织是可以自然产生和存在的，但往往短期存在的组织方式，会被人们用“合作”这一说法取代。\n假如有两个司机都要通过一条狭窄的山路，但路被一块巨石挡住了，至少两个人才搬得动。可以预想，前面的司机一定得把车停下来，等第二个人来，以解除力量上的限制。第二个司机同样也需要这样的合作。\n只要合作是“有效率1”的，那么合作就天然存在持续的可能性。如果存在一个适合的自由市场，这种合作就可以通过交易的方式继续延续。\n但天然就有效率的合作方式 2，往往意味着标准化的能力模型，和可替代的合作方 3。这样的合作模式就如同现在的劳动市场招工，进而可以形成一段时间内合作的组织。\n以交易形成的合作方式，自然会非常容易以交易的形式被终结。例如当其中一个合作者找到了另一个更有效率的合作方时，就会终止与原有合作者的交易，转向新的合作方。例如跳槽就是典型的更换合作者的方式之一，类似的，当今的职业运动场上的各类交易，都充满着这种变化。\n正式组织 上一节中的合作方式也可以形成组织，但仅以交易形成的组织依然被笔者归类到了非正式组织这一概念中，原因是这种合作有效率的组织模式依然缺少了一些通常人们想象中的组织应蕴含的一些灵魂。例如我们总是觉得组织是需要有组织文化的，组织是一定程度稳定的，组织是需要长效的，等等。所以在本章中笔者依然先以这样的名词来分别对待这两类组织，进而产出清楚组织的核心要点，后续的章节中，则会回避这种主观性很强的定义。\n生活中还有很常见的一类组织，大家搭伙一起做事情，却几乎不考虑效率，例如经常一起组团逛街的小伙伴，一起追星、聊八卦的小圈子，一起旅行的驴友等等。从这些组织的存在来看，效率并不是组织的必要条件，这也是为什么笔者不把恰当形式“合作”等同于正式组织的本质原因。\n回到非正式组织的案例，从非正式向正式过渡的过程，一个核心变化是：向持续性转变。而以这个标准来考察上面提到的这类非功利组织，会发现依然是其之所以成为组织的核心要点。\n所以组织的本质是“长效性”，而不是效率。\n长效性的经济学特点 产业组织理论中认为，企业（组织）的价值是将交易内部化，进而降低了交易成本。\n为什么交易内部化就可以降低交易成本呢？甚至在一些大公司呆过的人会更有体会，内部交易反而会走向双寡头交易，相比于自由市场，交易成本甚至会提升。但更多的时候，我们还是觉得交易内部化才能解决更多的效率问题。\n类似的，产业组织理论中也描述了企业扩张的路径：横向一体化和纵向一体化，其中纵向一体化就是希望上下游的产业都收归于组织内部，进而获得更好的效率。背后的原因，是企业内部才能获得更定制化的解决方案，进而获得效率的提升。或者用长效性来解读的话，就是稳定的长效性合作存在，才会带来针对性的改进，进而形成更好的社会分工，于是提升了效率，变相降低了交易成本。\n交易内部化，本质上是指组织的长效性，带来了组织内分工的针对性改变。这个结论也揭示了组织的核心特点：\n从最终表现来说，组织是追求长效性的合作方式； 从执行层面的特点来说，组织有能力在组织内驱动组织成员为之进行改变； 有了上面的第二点，就比较容易理解为什么大部分的组织的组织形式并不是制定一个自由市场让大家都能很低的交易成本的方式进行交易。因为对于自由市场中的角色，追求价值最大化是他们的目标，最优解决方案是找到更匹配当下自身产品特点的需求进行交易，而不是为了某种特定的目标改变自己的产品。尤其是当一个组织陷入困境时，需要组织中的人站出来拯救这个组织，而不是组织中的人都去寻找一个能获得更多利益的组织。这件事的发生，不是基于利益和效率的。\n换成另一个视角，更能让我们直观的体会到什么是组织（长效性）：\n组织成员愿意为一个“组织”而主动（不是被迫）改变的，这才是真正的组织。\n回到非正式组织的话题，如果为了完成某个商业目标，你雇佣了很多的人，通过经济利益达成了目标，这种组织，只是形式上的组织（合同），并不是真正的组织。这样的组织就会缺乏长效性，任何不稳定的扰动产生，都会使得合同失效。\n一个好的组织的案例，可以参考《海贼王》中三年之约，路飞的伙伴们为了未来能在伟大航路的后半段走得更远，都好好利用这三年的时间锻炼和提升自己。甚至更主观的一种感觉，当你视其他人为伙伴（而非雇员）时，那么你们这就是一个真实的组织了。\n所以真实的组织中，不会有明确的边界，大家都会互相补位，去学习自己不擅长的事情，彼此改变以获得更好的配合。\n再回归到第一节中提到的标准化能力模型这个案例，标准化的能力模型的产生：是先有了社会分工，才会逐渐形成每个分工的能力模型，然后才会进一步形成相同能力模型下的自由市场，标准能力成为了可替代性的部分。这部分的案例，后面的章节中讲到流程部分时也还会再次讨论。\n长效性与效率 从前文的推演中，刻意区别了：长效性不代表效率。但是长效性在真实世界中，很多时候也都会带来对效率的正向影响。当人们追求长效性对效率的正向影响时，这种行为被成为“长期主义”。\n最简单的长期主义的理解：人们需要通过学习来提升自己的认知水平，进而才有可能完成一些更高深的事情。所以很多有门槛的事情，是需要长期主义的坚持，最终“守得云开见月明”。所以生活中我们可以听到很多长期主义带来的共情的案例：谁谁谁坚持怎样的事情坚持了很久，最终得到回报。例如“卞和献璧”的故事：“吾非悲刖也，悲夫宝玉而题之以石，贞士而名之以诳，此吾所以悲也。”\n长期主义似乎是人类共同的一个共情点，一种生来的追求。\n但长期主义本真并不意味着效率。例如最近的新闻，一个考生为了上清华大学，已经复读和重考了 12 年。\n正确方向的长期主义，最终可以带来效率的提升。但错误方向的长期主义，最终只能是向着相反的方向越走越远，这种长期主义，可以称为之固执、偏执等等另一类人们并不喜欢的品质特点。\n幸好人们是可以通过历史的经验学习和进化的，所以对于长效如何能成长为长期主义，积累了一定的经验和认知，让长期主义的可靠性更强。但反过来，在组织这件事情上，尤其要留意长效性同长期主义的区别，组织是天然追求长效性的，但这并不意味着长期主义。\n比较典型的案例，宗教是有非常强的长效性的，但是宗教的长效性并不能像我们理解的那样，称之为长期主义。类似的，中国传统文明也是有非常强的长效性，但是在特定时期，这种长效性反而变成了进步的阻力，不仅没能形成长期主义，反而变成了固步自封，所以才需要打破传统文明中阻碍效率的共情点，寻找可以兼顾效率的共情，或者新的值得坚持的长期主义。\n长效性的本质：共情 长效性时组织的最终表现，是果而不是因。这一节要研究的，就是：究竟是什么因素，带来了长效性？\n回归到组织的成员的视角，什么会驱动一个人形成长效？\n人的两类基本动机：功利动机和共情动机。其中功利动机是有目的的，于是更好的解决方案是如何能更有效的解决其目的。这类的解决方案，不会形成长效性，因为如果发现更好的解决方案，一定会抛弃原有解决方案。而共情的解决方案，是人基于已有的共识，去寻找新的共识的过程，这个过程本身就是长效的。长效性的本质，应当是 gong\u0026rsquo;qing。\n更具体的，我们透过共情来考察组织的形成，以及组织执行层面带来的特点：\n大家愿不愿意合伙干事情，很大的因素不是能力，而是“是否知根知底”，或者“彼此相互认同”。如果都用共情来考虑的话，会很直观的概括成：彼此有共情；而反过来，如果一群人彼此有共情，则它们也很容易基于共情一起交流信息（创造新共情），这种形式是长效的，所以自然就会形成组织（例如一起逛街、一起八卦、一起旅行）。\n另一个角度来看，共情是具有很强的对个体的改变能力的：\n人是有意愿因为共情而影响功利动机的选择的； 影响功利动机的改变，最终需要带来更好的共情体验； 案例 1：婚姻和爱情 爱情的出发点，大概率是人的动物性：荷尔蒙带来的冲动，吸引两个人彼此靠近。但荷尔蒙应当是典型的功利动机，带来的结果就是，理论上爱情应当不被所谓的伴侣所约束，是自由的；以及恋爱中的人不时会形成的灵魂拷问：“你是不是我的百分百女孩（男孩）？4”\n但当爱情中的男女，超越了荷尔蒙，进而追求共情带来的快乐时，彼此一起经历过的事，形成的两个人才懂的编码，以及共同的价值观，就成为了他们最宝贵的财富。而这个过程中，双方会愿意改变自己，以获得更好的共情体验，当有了这种动力并最终形成了相当程度的共情后，他们两个人就真正成为了一个组织，走向了婚姻，组成了家庭。\n所以能长久的爱情，是彼此愿意为对方改变，并且这种改变或妥协可以带来快乐的状态。这也是社会发展，总是能从动物性逐步走向稳定的家庭关系的原因之一。\n而当今社会，越来越多的人更加自我，认为要找到一个无限包容自己的人，这样的选择是典型的功利动机，这样的人最终很容易就会发生类似于出轨，觉得厌烦现在的伴侣，追求新鲜和刺激等等的行为。但这种选择的结局也已经注定：他很难获得一个长效的组织，获得共情的体验。也就是有些很自我的人常抱怨的：为什么找不到一个懂我的人。\n案例 2：组织中的加班文化 当大家聊起 996，聊起企业的加班文化时，会深恶痛绝，觉得反人性，甚至举出很多企业的“无良”做法：提供晚餐、提供 9 点的班车、提供晚上的健身设施等等。但真正回归到自己身上时，往往加班的最直接原因是：周围的同事都没有走。是共情的因素导致了因此人们改变了自己的行为，为了更好的融入这个组织。\n回归到组织长效性的角度来聊加班文化，加班本身如果不具有长效性的话，那么这样的组织动作也是没有实质的长期价值的。具体来讲，重要的不是加班与否，而是加班的人是否因此而感觉到更快乐。\n例如大部分的创业企业，都要面临加班的问题。但是大家觉得是在为了自己的梦想奋斗，而且这种改变带来了更好的共情（离梦想更近），那么加班就不那么痛苦了。类似的，很多新员工在第一次参加双十一时，有种特别的荣誉感，并不会因此觉得痛苦，而是获得了更多的共情，这样的加班就是长效的，就是合适的。但如果大家对于加班这个话题已经变成了第一段中描述的那种心情，虽然还是共情带来的加班的结果，但这样的加班已经在损伤这种共情了，这就是对组织有伤害的事情了。\n业务组织的三个管理维度 有共情就可以形成组织，婚姻是组织，家庭是组织，小团队也是组织。这类的组织更偏向于自组织形式——不需要很明显的组织力就会产生的组织。还有一类组织，例如商业组织（企业、工厂），职能组织（政府、奥运会），有时甚至是以具体价值为目的 5 而存在的组织。\n这样的组织，共情点或着共识点中，一定离不开具体价值，所以产生价值的能力会显著影响组织的共情体验，进而这样的组织是需要追求效率的。这种组织我们称为业务组织。\n针对业务组织，因为效率是其重要的共情点，所以这样的组织会非常具象的形成三个管理维度：\n面向过去，将过去的有效率的手段有效沉淀并应用于当下的，是流程管理； 面向现在，针对组织中各个角色信息不对称的情况，更好的调整整体的资源分配模式的，是制度管理； 面向未来，希望组织中的每个人都为了组织（共识）进行一些更有益的改变的，是组织文化管理； 当然，针对到实操的对象时，往往三个维度会有重叠，典型的例子：对于企业中的最基本个体，员工，对他的管理，既要求其遵守流程，保证基本的价值贡献；又要求其在企业的制度下，可以更有效的发挥他的多方面能力，物尽其用；同时又会从组织文化的维度，希望他愿意为了企业的目标不断改善自我，更好的实现企业的目标。\n流程管理 流程管理是最传统的企业管理手段，而且是非常可量化（效果）的组织手段，例如节约了多少人力成本，提升了多少产能等等。而流程管理本身，是历史上的成体系的任务分工：每个工种的专业化，信息环节的高效化等等，最终共同作用的结果。\n所以通常来说，一个领域中流程管理的方法是可以被沉淀，被大规模复制的。甚至可以部分跨行业进行复制。在组织管理者的维度来看，可以简单的通过交易的方式，直接获取更有效率的流程管理经验在组织中大规模复制；\n制度管理 制度管理有别于流程管理的重要点在于，制度管理试图解决的不是历史上曾经遇到过的已知问题，而是需要面向未来发展的过程中，待解决的问题。所以制度要解决的是很多信息不对称的问题（每个人都没有办法快速获得全局的变化信息），以及在这种条件下，大家行为的激励相容问题。\n制度管理的最终目标依然是效率，但针对具体情况的不同，所需要的具体执行方式也不同。所以不同于流程管理，制度管理方面需要匹配组织自身的信息分布情况，以及因为制度本身是需要一定强制力的，但这种强制力是源于组织（也就是共情），所以具体制度在执行层面上也还需要契合组织的共情点，或者说组织的价值观。\n这两点构成了：不同的组织会有不同的管理制度，而往往外来的制度无法非常有效的解决自己组织的问题。\n组织文化管理 组织文化管理这部分是当今最被误解的部分。\n首先，组织文化不是解决效率问题的工具。如果尝试解决效率，要么是流程，要么是制度，所以有部分人对于组织文化的理解往往会等同于企业制度，认为文化是制度的衍生品，这种想法是错误的，甚至是相反的。是制度需要依照文化进行调整，而不是文化因制度而被塑造。\n其次，组织文化解决的是组织的共识，解决的是组织中的人改变的意愿，更进一步，组织文化才真正解决组织的长效性问题，组织文化（共情）才是组织能否长期生存的最关键问题。一个没有效率的组织，只要组织文化还有活力，不一定哪天就会诞生一个合适的人帮助组织解决效率问题；但反过来一个有效率的组织，缺乏组织文化，那么任何扰动（例如增速变缓）都会导致组织中的人才的流失，进而丧失组织效率方面的竞争力，最终组织垮塌。\n通常的组织管理类书籍，如果不能将组织文化部分的目标和制度部分的目标进行区别，以及无法正确的理解共情对功利的单向影响，其讨论中就会存在着一些难以逻辑自洽的部分。例如总也说不清制度（例如组织的结构）对组织文化的影响，以及组织文化这件事到底怎么带来效率？当组织文化和效率存在冲突的时候，应当如何选择？\n本文后续的内容，将更加专注地在组织文化方面进行更进一步的讨论，来理解怎样的组织文化才能带来更好的长效性，以及带来对效率的正向影响。\n组织文化 更好的共情 前面花了大量的篇幅得到了结论：组织最本质的形成的驱动力是共情。有了共情基础，就可以自发的形成组织。\n但形成组织，并不意味着这就是一个好的组织，高效的组织。甚至还存在着套用组织框架，但本质只是雇佣关系（很弱的共情）的非自然组织。\n从长效性出发，可以用组织成员为组织改变的意愿，也就是贡献的意愿来衡量组织的好坏。于是基于 \u0026ldquo;共情理论\u0026rdquo; 也就非常容易的得到结论：更好的共情可以带来更好的组织成员贡献的意愿。\n这里需要进一步将共情理论中的要点跟组织结合，拆解出：更具体的，哪些因素可以带来更好的共情。\n组织需要有共识 首先，组织的共情基础，是组织中的这一群人有相同的共情（共识）。同时，这个共同的共识，也是组织成员产生贡献的意愿的方向。\n如果一个人同组织的整体共识不相容，那么他其实只是组织的雇员，当有更好的利益机会存在时，他很自然就会离开组织。同时，在没有利益刺激的条件下，他也没有任何为组织贡献的意愿。如果他加班，大概率只是为了更好的绩效，而不是为了组织而改变自我。一切行为都是可以用价钱来衡量和影响的。\n进一步来讲，如果组织存在一些有一定自由度，涉及到选择，且不容易被量化的工作，这样的雇员会找到一种个人利益最大化的方式来工作，例如在更有自由度的工作中偷懒，或者谋私利。这件事就是传统经济学中一直较难讨论清楚的，职业经理人的激励相融的机制设计问题。尤其是，这样的工作，在目标已经很明确的项目中，还可以用共同利益来解决，但对于目标不仅仅是功利结果的项目，非常容易带来跟原本组织不一致的共识。这也是很多案例中，外来的和尚没能拯救企业，很多伟大的企业需要自己培养起来的领导者带领企业前进的原因。\n对于业务组织来说，业务方向必须是组织的共识之一，因为需要组织成员为业务目标贡献。所以对于业务组织而言，所谓的战略必须是大部分组织成员可以达成共识的方向，否则如果只是领导拍板的方向，在执行层面上也一定会遇到各种不认同，各种挑战，反而会带来大量的沟通成本和效率的降低，以及在需要执行者的贡献意愿帮助业务时，得不到助力。而且这个问题不是依靠组织架构、制度设计能解决的问题。\n极端情况，如果领导者认为正确的战略方向和组织的共识是不同的，那么宁可选择一个和组织共识更相融的不那么正确的方向，也不能强行推进一个无法达成共识的方向。关于这一点，在后文 \u0026quot; 人设不能垮 \u0026quot; 部分还会进一步阐述。\n组织的共情，只要有共情，就能带来好的效果。例如，聚焦到组织中的小组织——某个具体的业务部门，有明确的业务目标，这样的小部门里，只要部门的同事之间的共情非常的好，哪怕都是基于内容的共情（曾经一起扛过枪，一起参加了团建，或者只是互相聊得来），对部门贡献的意愿就会非常的强。这一点也重新验证了共情本身是不区分究竟是编码的共情，还是内容的共情，抑或是观点的共情。\n但扩大到组织维度，尤其是很多大公司，甚至国家这种超级大组织，基于内容的共情往往就有些力不从心——太容易被新的内容覆盖，导致内部共情出现分歧，影响共情效率。所以构建共情的编码，和基于观点的共情，可以带来更好的效果。\n上升到国家维度，共同的语言就是最最重要的共情编码；而价值观，就是基于观点维度的共情。\n在阿里，通过花名文化，武侠文化，其实构筑了很好的共情编码；以及后续的阿里价值观的搭建，也是非常契合于共情的观点的。阿里主要的问题，是组织没有能将这种编码和观点维持成组织的共情。当人员也会发生变化时，共情是有偏移的可能性的，这也是在《社交与传播》的研究中探讨的，关于社区较难扩大的原因。\n更进一步来聊阿里的一些具体的做法，招聘时，寻找有阿里味的人的做法是契合和恰当的。但这件事其实并没有那么的重要，更重要的是，新加入阿里的人，如何逐渐让他们都具有阿里味，以及大家都对于阿里的价值观有共情。当这种共情需要用制度来约束时，已经不再是共情了，类似的做法只会让阿里在共情这件事上进一步下滑。\n就现在的阿里来说，大家对阿里的共情可能只剩下基于内容的共情了。这样的企业，可能只有创始人重新回归，才能带来曾经的共情的回归和重现？当然，马老师自己大概也立不住人设了。\n基于内容的共情可能带来共情的分化 对于很多的创业公司，合伙人往往是曾经的同事。同事彼此聚集在大组织的组织共情下，逐步又会形成小团体的共情，而且小团体的共情在内容共情的维度上随着时间的推进会越来越强（当然也会有边际效应）。所以这种情况就可能带来小团体的共情强过大组织的共情，小团体内部的人员会对小团体有更强的组织感。\n组织内部希望杜绝小团体主义，但小团体的形成是无法避免的——毕竟小团体的这群人才有可能产生越来越多的内容共情。所以对于组织而言，尤为重要的就是在共情的编码和观点层面做建设。\n当然，我们也看到一些组织为了避免小团体，对于各种部门经常进行拆解、重组，对部门负责人进行轮换管理。但这样的作法一方面本身在组织共情方面就是减分的操作，另一方面，如果小团体已经形成一定的良好的共情，这种拆解治标不治本，甚至会让小团体的共情对组织更加抵触，进一步激发小团体的共情同组织共情的分裂。\n更高的共情的频率 像阿里这样的企业，曾经都形成过很好的组织共情，但依然在扩张和追逐利益的过程中，丢失了优质的组织共情。所以对于组织而言，如何维持共情也是十分重要的环节。\n有了共情理论，这件事变得不再那么虚无缥缈——在组织成员的主要信息渠道里，不断提升组织共情消息的共情效率即可。简单说，就是更高的共情频率。\n按渠道来区分，大体可以分为三类：\n组织自己控制的信息渠道下，提供更多的组织共情（企业价值观）的信息； 组织内部的人际传播中，激发更多的符合组织共情的信息出现和传播； 组织外部的社会，对于组织的信息反馈中，是否能提供符合组织共情的信息； 这里拿两个具体的例子来加深理解：\n组织中进行的评优活动，其实是很好的提升组织共情频率的活动，其目标不是为了奖励绩效高的员工（这种利益激励，通过制度和绩效考核就可以完整覆盖了），而是通过这样的形式，带来组织共情的更好的传播：\n评优活动，可以让更多的符合组织共情的信息（事件）出现，创造更多的信息； 评优活动本身的宣传，就是企业在自己控制的信息渠道下，提供更多的组织共情； 评优活动中需要群众参与的部分，就是激发群众更好的人际传播组织共情的方式。 所以对于组织的评优活动本身，奖励和公正等因素不是最重要的，最重要的是组织共情的传播。所以如果恰当的时机，扩大评优的获奖数量，是更合适的做法。当然，这个过程也需要慎重，因为如果存在不符合组织共情的事件被当作组织共情传播，或者未来其中有人人设崩塌，这件事带来的危害性就极大了。\n如果一个组织的组织共情具有外部性，带来的是对外部社会的价值。那么外部社会对组织的信息反馈就会不断的贡献符合组织共情的信息。这样的组织，哪怕内部并没有做很多提升组织共情效率的工作，也可能具有很强的组织共情效率。\n例如一些公益组织。\n另一方面，有很多高速发展的企业，给社会或者被企业的客户带来了巨大的真实价值。他们的组织成员可以很容易的从外部获得组织共情，所以往往对于高速发展的企业，组织共情问题可以很好的被掩盖，因为外部传播部分解决了这个问题。但这种状况不是长效可持续的——当组织发展速度变缓，或者业务模式成为了常态，外部反馈的组织共情的效率就会急速的下降，组织的成员就会产生巨大的心理反差，会觉得组织变了，不再是曾经的那个组织了。\n这也是想说明，组织文化的建设不能等，尤其不能因为组织的高速发展、问题不体现就忽视。这样的话，在组织放慢脚步时，问题会被更突出的爆发出来，造成严重的影响。\n其中，对于激发组织成员贡献组织共情的信息，理论上来说应当是最有价值的事情之一。所以如果一个公司的员工在脉脉上经常聊的是在组织共情带来的快乐，那这样的组织大概率是非常有长效性的，组织内的员工贡献的意愿会尤其强烈；反过来，如果脉脉上吐槽的都是组织共情的表里不一，那这个组织其实已经病入膏肓了。\n最终组织成员认同的是组织共情，甚至大家会用组织共情来指代组织；但做组织相关工作的人千万不可以将组织成员认同的主体等同于组织自身，组织自身有可能成为组织共情 ，但没有必然性。只有做到了相当程度的组织共情，将组织自身发展成了共情编码后，这种等同关系才能初步建立。\n人设不能垮，哪怕影响效率 从共情理论出发，一个重要的启示就是，人设不能垮。这一点无论是放到明星身上，放到社交类 APP 上，还是线下商业实体、品牌、IP 等等，都无一不应验。而现在，它又出现在了组织文化方面。\n这里说的人设就是组织共情。组织共情包含组织的价值观、组织的战略方向、组织的业务目标，以及组织的历史，组织中人和人的羁绊（彼此共同的经历）、组织的黑话等等。这些共同组成了组织共情，形成了组织的人设，这些一切构成了让组织成员为之贡献的动机。\n所以为了这种动机，已经形成的人设不能垮塌，更具体来说就是需要有前后的一致性，不能说改就改。哪怕调整，也要沿着组织共情的精神进行改良和调整，不能破而后立。\n回到阿里的案例，月饼事件就是阿里人设崩塌的典型案例，虽然阿里的做法是试图保人设，哪怕牺牲效率。但全程没有任何共情的信息传递，只是流程式地说违反了价值观，而且价值观的衡量也不应该是规则式的，更应当是道德式的。这部分下一章会讨论。\n但重点是，月饼事件让大部分阿里人（和外面的人）不再相信阿里的价值观，后面组织内就快速滋生了各种没有组织共识的现象，大家都开始用利益的方式来指导行为，所谓的组织共情只剩下空壳了。在这种情况下，不是去重新梳理和引导新的组织共识，而是用强制的手段，用制度来约束共识，只会让组织成员愈发没有组织共识，对组织的价值观感到困惑。\n所以阿里根上的问题是人设垮塌了，这种情况挽救起来就非常困难了。\n当人设和组织目标有冲突，必须二选一时，对组织而言，人设才是必须要保的部分。\n谷歌曾经的价值观是“不作恶”，所以当谷歌被爆出和美国军方合作，利用人工智能执行军事行为时，哪怕有再大的经济利益，这种行为都是对人设的极大颠覆。对组织而言就是危险的。\n暴雪的人设是：“暴雪出品，必出精品”，这种人设意味着消费者可以对暴雪跳票的行为和高售价等都有非常大的包容性，但是绝对无法容忍暴雪尝试出一款追求潮流的，平庸的作品。当然，这种人设很难保持，也是暴雪今天面临困境的重要原因。\n但与之同时，很多暴雪出来的员工，依然坚持着暴雪的组织共情，他们的作品也同样得到了消费者的包容和认可。所以换个角度说，暴雪这家公司虽然已经不太成了，甚至丢掉了原本的组织共情，但只要原来的这些人还坚持着这种组织共情，其实这个组织就还活着，只是换了种形式，换了个名称而已。\n组织从来都不是某个资本下的框架，也不是特定的几个人，而是由组织共情聚拢的一群人，这群人可能会变，但只要组织共情没有变，这个组织就依然存在着。写到这里突然让我很激动的想喊一句九州世界里跨越了无数个时代依然存在的组织——“天驱”的口号：铁甲依然在！\n组织共情，经历无数演化后，可能会留下很多故事（内容的共情），但最终最精髓的部分，一定会凝汇成共情的编码，以及共情的观点，可以超脱于时代流传，哪怕曾经的共情的人们都不在了，共同信仰的人们也可以穿越时空产生共情，让组织延续。这大概就是组织传承中常用的说法：“后继有人”吧。\n法律与道德 法律要追寻的是每一次的正确执行；道德追寻的是整体的共情效率；所以社会并不要求每个人都是道德上的完人，当道德和利益冲突的时候，并不是必须道德优先的，而是在一个良好的平衡下，寻找更大概率可以实现道德的途径。\n法律是国家这个组织的制度管理手段；道德是国家这个组织的组织文化管理。类似的道理，对于任何一个组织都是成立的。\n当组织有具体的业务目标时，需要规矩（制度管理）来保证效率。所以组织的规矩就是规矩，是不可以被打破的。但是回到组织共情，它不是一个考核标准，不是一个可以判断一切行为的准则。它尝试平衡的是每个人做事后，获得共情的体验，这件事本身就会因人而异，不应该用统一标准衡量。另一方面，它并不是业务结果导向的，而是共情结果导向的，所以可以理解成，组织共情是主观的，不存在完美的客观标准。当然，组织共情也是一直在变化的，这更加增加了客观衡量的难度。\n回归到具体问题来说，如果我们希望组织共情能够更好的影响行为（某冲程度上也可以表述成，提高组织成员的贡献意愿），那最重要的点，还是当用户的行为产生后，是否获得了更多的共情反馈，而不是用行为规范准则进行强制的约束。\n所以，如果一个组织的价值观开始用绩效的方式考核，这个组织的组织共情估计离破灭就不远了。这也是阿里加速崩塌的原因之一。\n如果把组织共情用“价值观”这个说法来描述，那价值观是动机，是行为，但未必能带来结果。但无论其是否带来结果，只要是契合企业价值观的行为发生，就值得被给与认可和更多共情的反馈\n给功利以物质奖励，给共情以共情奖励 游戏化理论中已经有过论述，错误的激励会改变动机。所以针对组织管理中的制度管理部分和组织文化管理部分，解决的是不同的问题，也应当对不同的行为进行不同的奖励。\n所以对于组织共情方面表现优秀的人，应当给予他更多的共情奖励，例如更多的荣誉，更多的事迹宣传，更多的与其他人进行价值观方面交流的机会。但是这件事和他带来的物质结果是需要区别对待的，不应当因此给他更好的绩效，更多的奖金，更多的物质福利。\n当你用奖金的方式激励敬业，那最终加班的人只会为了加班费加班，在没有加班费的时候，绝对不会再来加班的。\n而且，对于组织共情方面优秀的人而言，物质的奖励有时甚至会让他们觉得变味儿，觉得你在用钱侮辱他们的情怀。很多组织中都有道德楷模，他们需要的是被认可，而不是试图通过道德楷模的做法牟利，否则，他们就不会选择走道德楷模这条路。\n进一步，回到“贡献的意愿”这个维度，我们每个人都可能在某个特定的节点上产生贡献的意愿，这个时候，这种意愿背后蕴含的往往是不在意物质方面的得失，更在意的是自我的精神满足。\n鸿星尔克的“野性消费”事件，就是消费者对于鸿星尔克长期坚持的行为的共情反馈，而鸿星尔克的后续行为也非常的恰当，不是打折回馈消费者（利益刺激），而是通过直播间的主播劝消费者要理性消费，从消费者视角出发给与共情的反馈。\n组织共情不需要惩罚 组织共情中的奖励，一方面是为了给与更多的共情，激发员工贡献的意愿；另一方面也是通过奖励来宣传组织共情，形成更高的共情频率；\n反过来，组织共情如果需要惩罚，惩罚的是什么？或者这种惩罚能带来什么共情效率的提升吗？\n对于组织而言，组织共情是提供给组织成员的，所以不存在组织成员在组织共情方面做得不好，只存在组织没有能给组织成员提供好的组织共情，亦或者这个成员跟组织原本就没有共情。所以如果组织共情需要惩罚，那被惩罚的主体也应该是组织自身，而不是任何组织中的一员。这也回归到了本章节的对比：法律同道德，法律是要有惩罚的，但道德没有。\n具体员工身上确实也有可能出现对于不符合组织共情的事情，或者把这称之为创造了不符合组织共情的信息。这种信息本身就不应该频繁出现在组织成员的信息体系中，会降低组织共情的频率。所以对于这样的信息，应当尽量避免其转播，或者创造逆向传播（传播这样的信息是不对的）。所以总得来说，惩罚这种动作本身可能还会带来不恰当的信息传播降低共情，组织共情维度并不需要惩罚。\n如果真的遇到无法与组织共情的员工，那么直接好聚好散就可以了（这只能说不适合，没有对错），也没有必要进行惩罚。\n当组织共情足够强大时，无法共情的人其实在这里存在着，就相当于一直接受着酷刑了。类似于道德标准对人的道德批判，效果是远大于所谓的物质惩罚的。\n组织共情是需要培养的 组织尝试找出契合组织共情的员工，这件事是合理的。但对于组织而言，更重要的是让新员工逐渐成长和改变，成为契合组织共情的员工。这种促使人成长的能力，是组织共情中最重要的能力。\n手段上，共情理论已经有了很多的解法：可以通过编码、内容的共情，逐渐形成观点的共情。因为组织中的伙伴彼此都是共事的关系，所以在内容的共情方面会很容易积累（例如多搞点团建，内容的共情就会非常丰富），之后如果组织原本就有良好的组织共情，新员工就会从老员工那里获得组织共情（观点）方面的影响，逐渐就会成长为具有相同组织共情的老员工。\n足球俱乐部的球迷就具有类似的特点——一个球迷会极大的影响自己的圈子都成为这个俱乐部的球迷，甚至让自己的后代也都持续的喜欢同一个俱乐部。\n总结一下：组织的共情对于加入组织的人来说，并不是天然就会形成的，而是需要经历一个成长的过程。这一点也是前文中提到的，往往企业的优秀接班人是成长于企业内部，而不是外来者，就是这样的原因。\n组织的领导者 共情理论中推演过，任何一群有群体共情的人，都会自发产生群体的意见领袖。也就是彼此的共情关系会从网状结构自发过渡到星状结构，并且这种星状结构，以及星点的 KOL ，都是稳定的。将这样的结论带入到组织中来，星状结构的星点，自然就是组织的领导者。\n这一点也很有意思——世界上形形色色的自发形成的组织（团体），几乎从来都没有平权的，甚至是分权的，都是明显的星状结构。这一点背后是由共情的特性决定的，跟集权、政治、管理效率等等都没有直接的关系。\n因为组织的结构最终一定会成为一个星状结构，这件事也决定了，组织的领导者，对于组织共情、组织的长效性等等各方面，起着决定性的因素。而在组织效率、组织能力等方面，反而并不完全依赖组织的领导者。也许一个效率能力方面比较弱的领导，其带领的组织并不能快速发展成一个引人注目的业务组织，但只要领导有足够的组织共情能力，这个组织可以跨越时间的壁垒，用时间来慢慢积累所需要的业务技能，最终或许会在业务深度上，抛开其他的追求效率的组织，成为最后的赢家（这件事就是前面《长效性与效率》章节中描述的事情）。在外界看来，也许这是长期主义的胜利，也有可能是这个组织领导者不得已的选择。\n领导者核心能力是共情 一些企业招聘管培生时，往往有一个重要的环节，叫做群面，就是让一群应聘者在一起准备同一个问题，然后通过大家讨论的表现，最终来判断谁更有领导力。关于领导力，其实就是在一群笔记都不熟悉的人坐在一起时，看谁更能跟群体中的每一个人形成良好的共情，然后推动集体共情的形成。这件事，并不完全依赖这个人的业务水平，他可以推动大家沿着同一个共情去贡献新共情，然后由他自己作为信息交流的枢纽，带动群体共情。\n类似的，任何一个组织的领导，最核心的就是塑造和持续维护共情的能力。极端情况甚至这个领导都不需要拥有自己产生共情的能力，只要能发挥好星点的传导作用，就可以很好的维持这个组织的长效性，和贡献的意愿。\n当然，如果这个领导者拥有产生共情的能力，甚至他自己就能成为共情，那么这个组织的组织共情就更容易维护。\n很多的组织（尤其是小组织），其组织的领导者就是组织的共情——员工并不是因为信某个理念而聚集在一起，而是因为信某个人而聚集在一起。这样的组织在初期会很顺利——因为领导者就是共情本身，领导者的想法就会化为组织的想法，组织的执行力会非常的强；但当组织发展到一定程度，领导者自身能力就会显著成为组织的瓶颈，并且比较难调整，例如引入外部技术或思想，如果不能变成领导者自己可以理解的内容，就无法被组织所接受，组织的上界就会被领导者所束缚。\n但如果领导者可以将组织共情升华，上升为某种组织共情的观点，不再是领导者自身（编码），那么组织就会有更好的宽容度，尝试与组织共情的观点有契合点的方法，不再拘泥于领导者自身的理解和认识。\n马老师是个非常好的组织领导者，其长处就是在于组织共情方面。而关于组织效率的问题，是可以通过其他的种种方式来解决的。但老逍直到今天，大概都还不能成为阿里巴巴的共情 KOL，所以马老师”退位“后，某种意义上，组织是缺少领导者的。哪怕从制度维度，从效率维度，老逍都做得很好，但是这件事并不是非得在组织领导者这个位置上完成的。\n至于快手，所谓的双合伙人模式，其实就是彻头彻尾的失败。哪怕曾经的效率方面可以实现组织的前进，但是最终依然会败倒在组织无法形成合适的 KOL，进一步完全无法形成恰当的组织共情上。\n反过来，现在很多企业中，部门的领导是由业绩更好的员工来担任。这件事有一点点的契合度——能为业务企业带来更好的业务的人，更可能拥有比较好的企业共情，但这件事并没有任何的确定性，而且很多业绩好的人，没不具备合适的共情能力，甚至作为组织领导者的共情能力，也不是通过培养就可以形成的。这就会导致大部分的企业在中层管理者的环节会出现问题。\n通过业绩来选择管理者的制度，在管理类的组织是天然契合的。例如政府、例如管理层的人员的晋升变迁。但这件事对于强业务导向的部门是不合适的。\n过去中国的国企是通过双轨的方式进行相关的管理，来解决业务部门业务决策需要业务性强的人，但组织管理需要真正的组织领导者的问题：部门的领导是业务领导，但同时会配备党政的书记进行组织共情管理。这种结构下，熟悉中国体制的人都知道，真正的一号位是书记，而不是部门负责人。\n这种模式，不仅仅是加强党对企业的领导，更多的是通过一套相对成熟的组织共情体系，帮助这些企业解决长效性的问题。\n所以反过来，这些国企哪怕一段时间内的效率可能比不上社会上的私企，但是企业的稳定性、韧性是更强的。当然，谈到国企的问题，无法避免的会牵扯太多其他的因素进来，可能就不是很容易说清楚背后的原理了。所以这个话题也不再深究。\n领导者的共情能力 领导者的核心能力是共情。进一步，领导者之间也有”能力“的差别，所以这一节会通过共情理论，来梳理一下领导者的共情能力，会在哪些环节体现，以及如何进一步发挥领导者的共情能力。\n维护领导者地位 维护领导者地位，目的不是为了权力，而是为了避免组织共情的分裂。所以如果一个领导者的领导力不足，组织内就会自发出现新的星点，并且带着这个组织的很多人沿着新的组织共情前进，逐渐的就会与原有的组织分道扬镳。所以如何维护好领导者地位首先就是领导者必须要解决的基本问题。\n回归到 KOL 形成的方式和演化的路径来说，领导者需要是所有组织成员基于组织共情最优秀的共情渠道。把这个描述细化，就拆解成如下三个核心点：\n领导者需要深刻的了解和理解组织的组织共情； 领导者可以通过种种手段创造出组织共情的新信息（哪怕是转述）； 对于任何一个组织成员而言，领导者需要有更合适的渠道跟组织成员进行高频率的共情，并且要保证共情效率是组织中最高的； 从结果来说，愿意跟每一个员工聊天的领导，一定是更好的组织共情的领导；但有时业务领导可能无法有足够的时间跟组织中的每一个人构成足够高频的一一链接，那么就需要用一些其他的方式来扩展自己同组织成员沟通的渠道，提升共情效率。例如国家领导人可以通过”语录“、”选集“、”讲话“等方式，跟全国的人民进行共情；政府和企业会有领导人办公室，以领导者的身份，帮助领导者同更多的人建立共情。\n特朗普的 twitter 执政，其实也是十分有效的手段：他自己与某一个组织成员的共情，通过 twitter ，就变成了与组织所有成员的共情。\n大多的业务领导者，是通过上述的第一点——对组织共情有更深的理解和了解，进而可以产生更契合组织共情的内容的方式，来提升自身在组织中的共情效率的。换句话说，是通过共情质量提升共情效率。但伴随而来的，就是很多业务领导者对于频率的忽视，甚至是傲慢——”只有我最懂组织共情“。\n但组织共情本身就是组织中所有人共同形成和营造出来的结果，虽然组织领导者（KOL）有一定的能力影响组织共情，但是当组织领导者脱离客观的共情，自以为是的构想新共情，那他很快就不具备组织领导者的信息中心地位，起不到应有的作用了。\n换句话说，其实组织领导者需要是一个好的学习者，认真的学习组织共情的变化，并能够同新的组织共情产生共鸣，这样才能更好的维护领导者地位。\n当某个明星的粉丝圈子逐渐形成了一些圈子文化，圈子内部黑话（编码）时，如果明星也能跟粉丝互动时，使用这种编码，会带来粉丝对明星的更剧烈的共情，为组织奉献的意愿也会更强。类似的情况其实放到企业里也是一样的。\n发挥领导者作用 这里重点时两方面作用：\n提升组织共情效率； 对于业务组织而言，引导更有业务价值的新组织共情； 其中的第一点其实在上面好多个章节中都反复探讨过了，无论是组织共情自身的需要，还是领导者维护领导者地位的需要，都会自然带来更好的组织共情效率，提升组织的长效性。\n而第二点，则是业务组织特有的需求——当组织的目标时追求业务目标时，这个目标除了共情（感性部分）以外，必须辅以理性的部分，因为业务问题是有更明确的对错，更明显的效率差异的。纯基于业务讨论，或许可以找到非常理性的业务新方向，但是这种业务新方向如何变成组织共情的一部分，让组织成员都有贡献的意愿，帮助完成更合理的业务新方向，这需要的不是科学的解释，而是需要组织领导者（KOL）进行共情的引导。\n这种引导几乎只能依靠组织领导者完成（这是 KOL 的拓扑结构决定的），否则，那其实意味着名义上的组织领导者并不是组织真正的 KOL。\n组织的领导者，需要基于已有的共情点，去延伸出新的共情点，并通过自己的影响力，让组织的每一个人都相信新共情，最终通过人际传播，强化新共情。\n如果一个部门的领导，一个组织的领导，还需要借助很多其他的力量才能说服自己组织内部，统一思想，那么要么他想说的事情几乎跟组织共情不相容，这样的事情到了执行层面也会出问题；要么这个领导其实就没有 KOL 的影响力，这样的组织很难在领导这里形成组织共情，或者说组织共识，无论什么样的决策，都会受到大家的挑战的。\n这里顺便可以聊一下组织基因的问题。看过很多的组织，我们会形成一种认识：组织的基因不同，做不同事情的结果就会不一样。逻辑上，明明大家都是相信科学的，都试图用更效率的方式解决问题，可为什么会受一个叫做”组织基因“的非理性因素影响，导致结果发生变化呢？从组织共情来看，就是符合组织共情的方向，会显著降低沟通成本，不容易形成沟通中信息传递的失真，最终就可以更顺利的将理性部分发挥出来；但不符合组织共情的方向，后验的理解会显著收到组织共情这种先验的影响，最终和所谓理性的解决方案形成巨大的差异。\n所以对于组织决策而言，不存在绝对理性正确的选择，必须寻找基于组织共情下的理性解决方案。否则，就只能重建组织了。\n只有组织的领导者有可能调整组织共情；同时组织领导者调整组织共情的能力也不是无穷无尽的。\n当然，组织的组织共情自身也是一直在演化的，而且这种演化也会收到例如流程、制度等管理维度的影响。但总得来说，这种演化是属于复杂系统的，是不完全可控的（尤其相比与组织领导者的影响力来说）。\n曾经笔者尝试从制度的角度去推演组织共情的演化，最终倒在了复杂系统上。\n是否存在完全不依赖领导者，只需要有合适的制度，便能长效繁荣的组织？现在看来，只要是组织，就会出现领导者，就会更大程度的受领导者影响，而不是自演化的影响。\n也许在未来的某一天，复杂系统的科学解读更加完善，并且可以拿来推演制度带来的组织共情变迁，届时可以尝试一种全新的制度——要求组织没有领导者的制度，并且这种制度可以更好的带来组织自演化和效率的提升。但在今时今日，还看不到这样的方式的逻辑自洽性。\n领导者的接班人问题 领导者的接班人问题，是每个组织幸福并痛苦的烦恼。因为如果一个组织涉及接班人问题，一定意味着组织的长效性已经得到了验证和保证；但另一方面，接班人则意味着一定程度上需要打破原有的组织的组织共情。\n因为组织的共情结构，决定了组织领导者的星状结构，进而也决定了想要顺利的从组织中的一个星状结构，平滑的过渡为另一个星为核心的星状结构是不自然的。所以大部分组织的接班人过渡都可能成为组织崩塌或者分裂的根源。\n这里我们依然考察自然的组织可能发生的情况：当组织拥有很好的组织共情，并且组织中有一个恰当合适的组织中心（领导者）时，这个组织的结构是稳定的。如果此时将组织中的中心点（领导者）拿掉，只要组织共情在一段时间内没有变化，那么新的无中心的组织，依然会自发的构建成网状结构后，重新进化为星状结构。当然，新的星状结构的中心点与被拿掉的中心点相比，可能在刚形成的一小段时间里，共情能力是不如原有中心点的，但随着新的组织中心进一步演化，终究是可以成长为具有高度共情能力的中心。\n于是乎，合理的组织领导者接班人计划的全部要点就自然浮现了：\n原有的中心点退位（并且不要再试图发挥共情作用了）； 新的潜在中心点需要是在平均共情能力上，相较于其他节点，有更强的能力；或者说，他要更懂得更理解这个组织的组织共情；不能脱离原有共情发展新共情（至少在还没能成为组织真正的共情节点前，不要做这样的尝试）； 新的潜在的中心点，可以直接被放在更靠近中心的位置，便于其更高频的与其他节点共情，加速其成为新的中心节点的进程； 不要有其他的潜在中心节点竞争，否则可能会导致组织分化。 把相关的问题梳理成更实操的表述：\n老领导需要退位，而且要退的彻底； 接班人需要被很好的培养，需要是非常认同组织共情的人； 需要一定的制度确保接班人可以快速承担原有的共情职责（但不需要快速承担效率职责）； 明确的接班人对于接班人过渡很重要。 中国传统文化的礼，其中比较重要的部分就是通过流程来规范化接班人问题，包括接班人的教育，接班人的选择，接班人的过渡，以及接班人和效率之间的取舍问题。\n国家的皇帝承担的是国家的组织共情，所以对皇帝的要求，最重要的是合乎礼，而不是治理能力；而国家的治理这件事情，是通过朝堂，通过制度的方式实现的。皇帝不需要是执行方面最有效率的人，甚至不需要用效率来考量皇帝；皇帝需要的是聚拢包括朝堂，包括全国人民的意志，让每个人都有为国贡献的意愿，然后百官各司其职，在合适的制度下，每个人都能为国家的发展贡献自己的力量。\n案例 如何看待老员工 如果只有效率的维度，如何处理企业的老员工总是无解的难题——很多行业，老员工无可避免的会走向效率的下降，进而就会成为马云所描述的”老白兔“：做人好，但是却不干活的人。从效率出发，这样的人一定是不值得存在于组织里的，于是互联网行业就会出现”35 岁危机“。\n但是，对于一个组织而言，不够效率的人就是没有价值的人吗？上一章的讨论，可以看到，领导者自己甚至都可以是没有”业务效率“的人（但领导者必须是最高共情效率的人），那为什么组织里其他位置就不能容纳不够业务效率的人？\n于是进一步的深究，老员工，一定不是指年纪老，或者经验丰富（这其实是指效率更高了），而是指在一个企业中积累了更多共情素材的人。尤其是具有良好组织共情的企业，老员工应当是经历了更多组织共情，更懂组织共情的人，他们反过来也是能供给更高质量的组织共情的人。\n所以对于老员工，第一种适合的发展路径就是成为部门的领导者，因为他们更契合大组织的组织共情，可以更有效的将小组织共情同大组织共情相结合。但是不是每个人都有成为领导者的潜质和能力，所以如果不能发展成部门领导者的老员工，他们在非领导岗位依然可以贡献组织共情，但这样的效果会小很多。所以解决方案分两个路径：\n让老员工的比例提升，从而让更多的老员工可以覆盖更多的新员工，老带新的方式提升共情效率； 让老员工的具体共情信息得到组织维度的传播，老员工成为组织共情的信息提供者和创造者； 而因为老员工的价值是在共情维度上，结合前文的内容，给功利以物质奖励，给共情以共情奖励，所以老员工的业务价值依然用业务效率指标来衡量，只要可以保证老员工依然可以生存于组织中（对于业务价值小的老员工，给予其高于其他企业给与的业务价值薪资即可，但并不需要特别高），但给予其更多的机会去表达和输出自己对组织共情的理解和认知，一方面是在组织共情维度上的资历的认可，另一方面是理应获得其他人的尊重和尊敬（这两点都是给与老员工的共情奖励）。\n以部队为例，老兵是部队最宝贵的财富！这句话不单单指老兵的经验，更多的是老兵在信念上的坚定，和老兵对新兵的影响。所以太多的案例中，大家都愿意以老兵为荣：“Old soldiers never die,they just fade away”，老兵不死，只是凋零。\n所以如何处理老员工，不是一个制度、效率的问题，而是一个组织共情的问题。它代表了组织共情中，人们相信什么。如果更有组织共情的人都被组织所抛弃，那么凭什么让大家相信组织的共情呢？\n合作的结果可以给每个合作者都带来增量价值。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n这样的合作方式不是社会发展中最先出现的组织形式，而是随着最早的组织出现后，进一步进化形成的组织形式。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n存在可替代的合作方，这里才形成一个适合的自由市场。当然，这个市场依然有可能是垄断的，不效率的。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n村上春树《遇上百分百女孩》\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n解决功利动机的组织\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://blog.uglyboy.cn/posts/2021/11/11/%E7%BB%84%E7%BB%87%E7%90%86%E8%AE%BA/","summary":"组织的基本构成 非正式组织 组织是可以自然产生和存在的，但往往短期存在的组织方式，会被人们用“合作”这一说法取代。 假如有两个司机都要通过一条狭窄","title":"组织理论"},{"content":" 前几日，在朋友圈看到前同事分享某大厂高管在 XX 创业营上开了一课《如何制定战略》，内容里有“使命、愿景、价值观”、还有“一颗心，一张图，一场仗”等行业黑话，而这两个话题凑一起，竟成了“从战略到执行的方法论”了。\n什么是战略？战略到底是一门玄学还是一门科学？回想在老东家经历过的各个时期的“战略”，心有戚戚焉。\n所以今天咱们就来硬核拆解一下：究竟什么是战略。\n大而无当的“战略” 先讲三个关于战略的小故事：\n当初老东家收编某视频巨头时，后者的市场份额跌至第三，于是许多本部的精兵强将前去支援。\n当时便面临着一个战略问题：在不差钱的情况下，如何重新夺回市场份额第一的宝座？\n就我参与阶段的了解，给出的答案是非常有该厂特色的解决方案：\n技术上提升用户体验，将 crash 率、秒播率、带宽压缩率等等各项指标都做到行业领先； 通过个性化算法优化匹配效率； 这个战略有一个宏大（但我记不住）的项目名称。一年之后，各项指标都在大家 996 的奋斗下达成了，项目也召开了一个隆重的表彰大会，获奖的团队笑脸盈盈。\n故事的结果大家都知道。\n它的市场份额，相比于前两家竞对，又跌了不少。\n之后不久，恰赶上了“猫狗大战”最激烈的那两年，于是老东家内部酝酿出一个核心战略，具体名称不重要，我姑且简单粗暴地称之为“打狗棒”。所有部门都在这个大战略下指定各自的战略，于是可以看到各个行业关于“打狗棒”的战略方案。\n但令人意外的是，这个战略似乎只在 PPT 里彰显存在感。我们难以找到它在业务执行层面的体现。也就是说，有它没它，业务都在沿着既定的方向走。\n去年，跟快递公司有一些业务合作。某通的几个同学经常问我：菜鸟又出了什么什么战略，这个背后有什么思考？\n这个问题让我想起了刚到菜鸟时，跟菜鸟的同学聊天，大家都在感慨：每年都在谈战略，甚至一年一个战略，但真心没啥战略。\n这三个小故事可以让我们对大厂“祛魅”：哪怕是大公司，哪怕是高管，也不一定能制定出正确的战略，甚至，以个人经验来看，他们中真的懂战略的，不多。\n正因如此，“打工人”才常常有一种误解：一说“战略”，就是大而无当、虚头巴脑、不知所云。与其关心高层的“战略”，不如关心关心业务的 KPI，毕竟这才真正关乎自己的钱包。\n这里的三个故事，其实并不是想抨击大公司病或者揭露所谓的高管内幕。更明确地说，没有想表达对高管不敬的意味（认真脸）。\n高管的定义是高级管理者，是能够协同一个部门可能上百号人共同实现某个业务目标的领航人。但是，在战略这件事情上，执行能力强并不一定总能导向正确的方向，甚至会更容易形成偏见——我们擅长的部分就是最值得做的事情。\n这可能也是老人们时常会谈，“将才”和“帅才”的区别吧。\n战略是一门科学 公司的战略，几乎都是领导们开会商量出来的。\n是不是战略就应该由领导来决定呢？从权力的角度出发，是的。但从逻辑的角度来看，这样的战略决策会导致一个主观性极强的决定。就好像你爱吃甜，我爱吃辣一样，无所谓对错。\n可是回到战略执行层面来看，这种做法会出现这样或那样的情况：执行后发现和想象的不一样只能重新规划的；换了领导于是调整战略的；也有执行了一阵子终于松口承认战略决策失误的……\n如果战略就是这样一个既不可靠又不能延续的东西，那何必还要考虑什么“战略”呢？\n战略不是收入证明，不是只有高管或者大公司才配谈战略，也不存在说大公司的战略就一定是对的、好的，或者高管看问题就一定高瞻远瞩，高屋建瓴；战略也不是玄学，不应该有那么多的拍脑袋，“我觉得”，或者所谓的经验之谈。\n毛主席说：“战略问题是研究（战争）全局的规律性的东西。”战略应当是一门科学，它背后是有规律的，是可被描述和验证的。\n在《营销的黑暗森林法则》一文中我做了一个铺垫：一定时期内，企业的竞争背后是一个零和游戏，企业发展是以抢占其他企业市场份额实现。\n从而可以相对容易地理解战略的定义：\n战略是指在相同投入的条件下，能够获得更大的市场份额的业务方向。\n这个定义和我们直觉上对战略的理解是基本一致的，但是，其中有几个很核心的要点，却往往会被人们所忽视。\n“你搞清楚自己的定位没有？” （段子）“灵魂六问”：\n配钥匙师傅：你配吗？\n算命先生：你算什么东西？\n食堂阿姨：你要饭吗？\n快递小哥：你是什么东西？\n上海垃圾分拣阿姨：你是什么垃圾？\n最有文化的还是网约车司机：你搞清楚自己的定位没有？\n关于战略，最核心的一个要点就是要看清自己所处的市场。不同的市场定位，战略打法会截然不同。\n例如北京市和平里地区的餐饮市场，同全北京的餐饮市场，不同的内涵与外延形成的战略打法自然不同，最终达成的效果也会很不一样。\n尤其是，不能自欺欺人地杜撰一个自以为是的市场。\n前段时间拜访了一家“无代码”的企业，企业的业务同学侃侃而谈“无代码”的美好前景，以及，“在‘无代码’的市场中，我们没有对手”。\n可是，“无代码”这个概念自己就是一个市场吗？难不成发明一个不放鸡蛋的煎饼果子，就可以独霸“无鸡蛋煎饼果子市场”吗？哦，似乎说来也对，只是这样的“市场”很难说有什么价值。\n正经地说，市场需要一个科学的定义以便于我们理解：具有需求可替代性的产品的集合，才构成同一个市场。\n市场的范畴可小可大，例如火锅市场必然也可以延展到饮食市场。这个范畴的选择，需要根据企业自身的发展情况来抉择——不断成长的企业必然是不断扩大自己所在市场范畴的企业，让自己的产品可以在更大的范畴里解占据更多的市场份额，解决更多的用户需求。\n“同样的资源，为什么要给到你？” 战略的价值衡量不是简单地拿结果说话，而要看投入产出比。\n曾经参加的很多项目决策会，项目方会卖力地说：“我的项目具有什么什么价值，只要资源到位就好”。但上位决策者考虑问题的方式是：相同的资源，给到这个项目还是其他项目，哪一个能够获得更大的价值。\n有价值的事情很多，但不代表有价值就值得（当下）做。或者说，战略决策，某种意义上讲就是对各种选择进行优先级排序。\n资源要优化配置的道理已是老生常谈，但放到自己身上，可能就成了“灯下黑”。\n所以脱离投入产出比谈业务价值，就是耍流氓。\n“大盘涨了，你的市场份额涨了吗？” 战略中值得在意的不是绝对价值，而是市场份额。\n在一个不断发展的市场中，赚钱了，证明不了你的本事，也许你就是风口上的猪呢。至少你的增长速度要超过大盘的增长，才是真的增长。换句话说，就是需要有市场份额的提升。\n所以谈战略的时候，份额才是真实的价值。\n淘宝内部很多项目都要赶着双十一上线，接着双十一的流量大爆发，就可以容易地拿到一个很好看的数字。但是这样的结果能证明项目的价值吗？谈战略时，自欺欺人真心没什么意思。\n尤为重要的一点是，企业自身当下的市场份额对如何选择战略方向起着决定性作用。\n小企业自然需要立足于发展，而大企业则需要考虑扩张自己的势力范围。企业在不同阶段一定需要截然不同的战略选择。这也是很多成功的创业者，企业做大，就难以更进一步；而很多大厂的高管进入了初创企业也种种水土不服。\n遗憾的是，很多优秀的企业都会将自己曾经的成功经验教条般地搬到新的阶段，造成战略方向的失误。这可能就是大部分企业最难的地方——让体验过成功的团队否定现状，这一定是很不愉快的感受。所以对未能跨过这一步的“成功过”的企业，只能对他们的曾经表示“respect”，然后摇一摇头，用前同事的话来美化一下这种失败——“优秀是卓越最大的敌人”。\n结语 战略是一门科学，而不是什么形而上的东西。所以战略不是高管或大厂的专属，而是值得每个人去思考和掌握的方法。\n作为一门学科，给出“战略”的定义，正是开启科学发展方向的基础——有了定义，我们才知道战略不能空谈，必须要在看清自身所处的市场、自身的市场份额、自身的投入情况的条件下，去考虑各个业务方向的投入产出比。\n这句话，也是今天想分享给大家的道理。\n至于怎样制定战略？我还有一个关于“竞争策略”的研究，相对深入地分析了这个问题，以后有机会可以继续庖丁解牛。\n","permalink":"https://blog.uglyboy.cn/posts/2021/07/15/%E5%BA%96%E4%B8%81%E8%A7%A3%E7%89%9B%E7%A9%B6%E7%AB%9F%E4%BB%80%E4%B9%88%E6%98%AF%E6%88%98%E7%95%A5/","summary":"前几日，在朋友圈看到前同事分享某大厂高管在 XX 创业营上开了一课《如何制定战略》，内容里有“使命、愿景、价值观”、还有“一颗心，一张图，一场仗”","title":"庖丁解牛|究竟什么是“战略”？"},{"content":" 宇宙就是一座黑暗森林，每个文明都是带枪的猎人，像幽灵般潜行于林间，轻轻拨开挡路的树枝，竭力不让脚步发出一点儿声音，连呼吸都小心翼翼……他必须小心，因为林中到处都有与他一样潜行的猎人。如果他发现了别的生命，不管是不是猎人，不管是天使还是魔鬼，不管是娇嫩的婴儿还是步履蹒跚的老人，能做的只有一件事：开枪消灭之！\n在这片森林中，他人就是地狱，就是永恒的威胁，任何暴露自己存在的生命都将很快被消灭。这就是宇宙文明的图景，这就是对费米悖论的解释。\n——刘慈欣 《黑暗森林》\n营销社会学 《三体》是大部分技术人都喜欢的作品，至少也是技术人彰显自己文艺的重要共情素材——它用一种很理科的方式推演了一个理论：宇宙社会学，并以此延伸出了一个荡气回肠的故事。对于技术人（理科生）而言，这种快感大概也只有《生活大爆炸（The Big Bang Theory）》可以相提并论了。\n宇宙社会学基本公理：\n生存是文明的第一需求； 文明不断增长和扩张，但宇宙中物质总量基本保持不变； 从这两条基本的假设出发，加上 \u0026ldquo;猜疑链\u0026rdquo; 和 \u0026ldquo;技术爆炸\u0026rdquo; 的概念，就可以得到黑暗森林法则（即本文引言），进而构建出罗辑这样的执剑人角色，让明明处于绝对劣势的地球得以和三体星人平等共生 62 年。\n有意思的是，出现在科幻小说中的宇宙社会学基本公理，正是从现实生活中归纳和升华出来的假设，放到熟悉的领域中，也依然有效：\n企业社会学基本公理：\n发展是企业的第一需求； 企业不断尝试增长和扩张，但全社会的总需求在一定时期内是基本保持不变的，或者说全社会可支配收入的总额是基本保持不变的； 直接的结论是：企业的发展是以抢占其他企业的市场份额实现的1\n而营销，是帮助企业抢占其他企业份额的具体手段的总称，所以当行业发展到一定阶段，营销就会成为企业间最激烈竞争的战场。\n营销是如此的重要，以至于企业生产了一个产品后，愿意将其中的大部分利润让利给营销者，帮助自己抢占更大的市场份额。从而出现了大量的形形色色的营销型企业，包括：品牌商、代理商、渠道商、电商平台、直播带货、广告行业、门店销售等等。\n而这些营销型的企业也依然适用上面的企业社会学基本公理，这里将之单独提炼成营销社会学基本公理：\n营销社会学基本公理:\n赚取更多的营销费用是营销型企业的第一需求； 在一定时期内，社会的总营销费用是保持不变的； 有了营销社会学的基本公理，很容易就能理解这样的推论：所有营销型企业之间都是互相竞争和取代的关系；营销型企业之间比较的是（一定时期内）帮助生产型企业抢占更大市场份额的能力。\n最好的时代 最坏的时代 通常技术的发展都是渐进式的，甚至哪怕是《三体》中在一个比较长的时间周期里，可能出现的“技术爆炸”，描述的也是技术线性推进过程中，在时间轴上的爆发。\n或者说，技术的发展大体上都是有脉络的，是旧的技术不断积累和沉淀，为新的技术打下的良好的地基。\n关于技术如何演进这件事，推荐一本书——来自圣塔菲研究所的布莱恩·阿瑟撰写的《技术的本质》\n技术的渐进式发展，直接影响生产型企业也呈现渐进式发展——生产效率总是以一种相对稳定的方式进行提升，所以大多数情况下，同一时期内一个行业里的生产效率总是相近的，生产型企业之间的能力差异更多的是在资本层面（规模型经济）、管理层面，或者营销层面。\n不过，这个规律放到营销这件事情上则大为不同了。\n是的，营销的发展并不是营销手段的渐进提升，而是近乎完全不同的营销手段之间的更替的过程，这里把这种趋势称为“突变演进”。\n例如，营销的重心从最早的报纸广告，快速演进到电视广告、综艺植入，再到互联网广告、新媒体营销；在渠道的营销层面，则是从层层代理商，到大型连锁超市，再到依赖电商平台，以及最近两年正大火的直播电商。\n虽然营销领域在“突变演进”下也有一定的积累沉淀，而且在“突变”的间隔里，营销型企业也是以经验的积累努力提升营销效率，但纵观全局，起主导作用的营销手段依然都是“突变演进”的方式进化的——新的营销方式总能对旧有的营销方式形成绝对的优势。\n幸或不幸，媒体行业、广告行业以及大部分的互联网企业，都属于营销型企业（赚的是生产型企业的营销费用）。所以这些行业里“眼见他起高楼，眼见他宴宾客，眼见他楼塌了”，都是时代的眼泪。纸媒转型成了新媒体，传统广告让位于互联网广告；互联网领域，谷歌百度一时风头正盛，到了移动互联网时代又让位给了 Facebook、微信；亚马逊和淘宝看似屹立不倒，抢的是线下传统渠道的营销费用；而短视频的崛起，让曾经的任何巨头都不敢轻视……这样的故事仍在这些领域中续写着。\n这是最好的时代，也是最坏的时代。\n营销的“突变演进”，带来了传统行业突变的可能性。一个企业（生产型）被另一个企业打败，可能不是因为它的技术能力不足，而是没能跟进到最新最“先进”的营销手段，导致不小心在历史舞台上落幕。\n我自己非常有感触的一件事情：我心中洽洽瓜子一直是第一名的休闲零嘴，也是大学期间常年的必备零食。但最近几年，要么是买了各路的网红零食，什么三只松鼠、良品铺子，要么是逛了周边的网红蛋糕店，买脏脏包、奶茶，甚至在网易严选之类的平台上屯糕点零食啥的，竟然都没机会想起来买一袋洽洽瓜子。\n打败恰恰瓜子的未必是更好吃的瓜子，或者更好吃的零食，只不过在流淌的时间里，不经意间被人遗忘，再回想起来时，已经成为了情怀。就好像儿时的北冰洋、熊猫雪糕、大大泡泡糖。\n在这样的时代里，我们可以亲眼见证：两岁的完美日记打败了 112 年的巴黎欧莱雅和 73 年的雅诗兰黛；五岁的元气森林超过了不可一世的可口可乐和百事可乐；比旺旺年轻十几岁的三只松鼠线上市场占有率为 11.2%，而旺旺则不足 1%……\n营销的黑暗森林法则 营销型企业唯一的价值在于其营销水平能帮助客户（生产型企业）比其他的营销者抢占到更多的市场份额，不论手段。\n曾经的各地晚报上的广告段子再火，也挡不住纸媒的衰落；一个广告代理商哪怕把百度凤巢、淘宝直通车等优化到极点，但直播带货兴起之时，企业还是会把营销费用都网红，转向直播带货，减少广告平台的投入。\n那直播带货会是终局吗？我们可以笑一笑，五年之后再来看这个话题。\n营销世界的黑暗森林法则就是：没有“正确”的营销，只有更好的营销。\n曾几何时，当大家拿着营销学的红宝书——科特勒的《营销管理》，学习宝洁的品牌战略，搭建和完善线下的供应商体系时，悄然崛起的并不是另一个宝洁，而是跟着电商平台一起成长起来的阿芙精油、韩都衣舍、三只松鼠、御泥坊、芳草集。\n它们没有做曾经认为最正确的营销：打传统媒体广告、树立传统的品牌战略、构建完整的供应商体系，但相比传统营销，线上营销玩法是更好的营销，所以它们最终获得了更多的市场份额。\n近些年，线上营销成为了主流，哪怕是传统的品牌商也都纷纷转型线上，都知道要新媒体营销， 三微一抖2，烧车钻展等等，但反倒是热闹的搞起线下营销的喜茶、瑞幸、泡泡玛特们脱颖而出。\n甚至还有像拼多多这种，硬生生从不能做电商的社交流量上，搞出了一套“社交电商”的玩法，成为国内电商的第三极；vivo 和 oppo 则重金砸各类网络热门综艺节目，以异军突起之姿，顺利替代了“中华酷联”，已经将苹果挤出中国手机市场的前三；而已经有些由盛转衰的海底捞，则是靠着极致的服务成为餐饮行业的龙头。\n这里似乎总在发生着“不讲武德”“乱拳打死老师傅”的故事——品牌们不停地学习新的营销玩法，但还是无可避免地被更新的一拨人挥舞着你没见过也看不懂的武器伤害着。\n营销世界（营销型企业间的竞争）里，大厂们也都在焦虑着：因为短视频，腾讯在焦虑；因为拼多多，淘宝在焦虑；百度倒是可以佛了，正在焦虑的已经换成了今日头条和抖音。年轻的美团和拼多多也在焦虑，他们都急火火地进军了社区团购业务——他们是看明白了社区团购将是下一代的营销？未必。但是万一是呢？\n年长者不得不杞人忧天，年轻者则做着异想天开一夜成名的梦。所以在营销的世界里，和《三体》中一片寂静的黑暗森林不同，这里的每个参与者都是一个发光体，并试图闪耀出更耀眼的光芒，沟通一片异常耀眼的黑暗森林，而且还将继续闪耀下去。\n最后，也送给每个想在这片森林里闪耀的读者朋友一个问题：你正在为之奋斗的，是“正确”的营销，还是“更好”的营销？\n严谨地说，这种情况发生在产能不是瓶颈，供给大于需求时，这是当下大部分行业的现状。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n三微一抖是指：微信、微博、微淘，以及抖音\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://blog.uglyboy.cn/posts/2021/07/01/%E9%BB%91%E6%9A%97%E6%A3%AE%E6%9E%97%E6%B3%95%E5%88%99%E5%92%8C%E8%90%A5%E9%94%80/","summary":"宇宙就是一座黑暗森林，每个文明都是带枪的猎人，像幽灵般潜行于林间，轻轻拨开挡路的树枝，竭力不让脚步发出一点儿声音，连呼吸都小心翼翼……他必须","title":"黑暗森林法则和营销"},{"content":" # 共情理论 \u0026gt; 传统经济学未能描述的人类行为方式 --- ### 女生找男生修电脑，应不应该很快修好？ --- \u0026gt; 面对问题，直男们的第一反应就是寻找解决方案并将问题解决，这本来是很合逻辑的事情。 \u0026gt; \u0026gt; 但女生找你诉苦，并不是去问你应该怎么办的，不是为了找你寻求解决方案，其实是想得到你的支持与共情。 ——知乎《经常被女生说成是直男，该怎么办？》 --- \u0026lt;split even gap=\u0026#34;1\u0026#34;\u0026gt; ### 功利动机 ### 共情动机 \u0026lt;/split\u0026gt; \u0026lt;split even gap=\u0026#34;1\u0026#34;\u0026gt; - 指为了达成某一目的，而产生的获取明确指向性信息的行为。 - 衣食住行 - 解决刚需的购物行为 - 搜索、咨询、知识付费 * 指没有明确目的，但为了获得情感链接与情感体验，打发无聊，而产生的获取信息的行为。 * 与朋友闲聊 * 刷知乎、B 站、抖音、猜你喜欢 * 看综艺、电视剧 \u0026lt;/split\u0026gt; --- ### 共情动机可以影响功利动机 - 用户会因为看《青春有你》从而购买“蒙牛”牛奶；但不会因为购买了“蒙牛”牛奶而去看《青春有你》； - 中国人谈生意有酒桌文化：“酒品见人品”，酒桌的表现对谈生意有影响； - 在互联网的“效果广告”出现前，广告最有效的载体（媒体）都是解决用户共情需求的——报纸、歌舞剧、电影、电视等； **断言：未来的营销市场，会和过去一样，赢得共情的玩家赢得功利市场** --- ### 两种动机的不同解法 #### `功利动机`\u0026lt;!-- .element: class=\u0026#34;fragment\u0026#34; data-fragment-index=\u0026#34;1\u0026#34; --\u0026gt; - 解决用户的明确需求，帮助用户快速达成目标或获取目标信息；\u0026lt;!-- .element: class=\u0026#34;fragment\u0026#34; data-fragment-index=\u0026#34;1\u0026#34; --\u0026gt; #### `共情动机`\u0026lt;!-- .element: class=\u0026#34;fragment\u0026#34; data-fragment-index=\u0026#34;2\u0026#34; --\u0026gt; - 源源不断地提供可以与用户共情的信息；\u0026lt;!-- .element: class=\u0026#34;fragment\u0026#34; data-fragment-index=\u0026#34;2\u0026#34; --\u0026gt; - 用户在获取信息前是不知道信息能否与自己共情的，所以用户需要的是可评判的信息源；\u0026lt;!-- .element: class=\u0026#34;fragment\u0026#34; data-fragment-index=\u0026#34;2\u0026#34; --\u0026gt; --- ### 你会选择从哪里获取信息？ - 对信息源的评判标准，最重要的是： - 人设（信息的共情程度）； - 信息的频率； - 新信息； - 一个人通常有多个信息源 - 人会因为信息源*共情能力*的变化，调整从之获取信息的频率； --- ### 信息的三要素 - 信息的编码 (Coding) - 信息的内容 (Message) - 信息的观点 (Key Point) \u0026gt; 三者都可以形成共情，没有高下之分。相比之下，编码和内容通常贡献更多的共情点。 --- #### 如何改变一个人的观点？ ----- - 人与一条信息发生共情时，就会倾向于接受这个信息的观点 - 《奇葩说》征服你的是观点吗？是逻辑吗？是一段感人的音乐和一个你感同身受的故事（信息的编码和内容共情）； - 骗子的套路都是与你共情，然后就会形成信任； - 宗教传销的要义皆尽于此。 --- ### 测试一下你对共情的理解 --- ###### 解决问题优先判断共情动机是否在起主要作用 ----- #### 奢侈品品牌应当如何营销？ - 奢侈品的品牌，自然是主要解决用户的共情需求的； - 人设\u0026lt;!-- .element: class=\u0026#34;fragment\u0026#34; data-fragment-index=\u0026#34;1\u0026#34; --\u0026gt; - 频率\u0026lt;!-- .element: class=\u0026#34;fragment\u0026#34; data-fragment-index=\u0026#34;1\u0026#34; --\u0026gt; - 上新\u0026lt;!-- .element: class=\u0026#34;fragment\u0026#34; data-fragment-index=\u0026#34;1\u0026#34; --\u0026gt; --- ###### 提升信息的共情程度 ----- #### 有什么办法可以进一步提升爱情（婚姻）的质量？ - 人设和频率基本上是固定的，所以只能通过信息内容来提升共情程度； - 编码\u0026lt;!-- .element: class=\u0026#34;fragment\u0026#34; data-fragment-index=\u0026#34;1\u0026#34; --\u0026gt; - 内容\u0026lt;!-- .element: class=\u0026#34;fragment\u0026#34; data-fragment-index=\u0026#34;1\u0026#34; --\u0026gt; - 观点\u0026lt;!-- .element: class=\u0026#34;fragment\u0026#34; data-fragment-index=\u0026#34;1\u0026#34; --\u0026gt; --- ###### 说服一个人，靠的不是逻辑，而是共情 ----- #### 当你在给孩子讲道理时，孩子却在搞怪，怎么办？ - “从前有个孩子不听话，后来他死了……”——《麦兜的故事》 - 小红书是如何卖奢侈品包包的 \u0026gt; 这个包很贵！但我的男朋友很爱我买给了我；你的男朋友爱你吗？你也值得拥有这个包包！ --- ###### 理解共情动机对功利动机的影响 ----- #### 见投资人或客户时，究竟要讲什么故事才有效？ --- ###### 共情理论在商业中的复杂应用 ----- #### 私域营销应该怎么做？看哪些指标？ --- ## 几个共情的案例 --- ###### 共情案例之编码共情 ----- #### 编码共情的价值 - 一个人在异国他乡，遇到一个懂得他母语的人，他一定会特别愿意与这个人聊天，哪怕仅仅是编码共情； - 拼多多、蜜雪冰城的传播曲都是改编自耳熟能详的音乐旋律，通过音乐的编码共情，让用户更容易接受信息内容； - 如果一个人说的一个梗恰好你知道，两个人会相视一笑，显著提升共情体验； --- ###### 对于信息源而言，新也是尤为重要的一个要素 ----- #### 保持新鲜感也是共情的重要因素 - 用户需要的是新的共情的信息，而不仅仅是共情的信息： - 老梗重复次数多了，就不共情的； - 如果只是共情，翻资料查档案馆就可以了；但大家都选择去看最新的节目。 - 新的信息，重要的是体验和感受，而不是信息究竟有多新； - 下拉刷新、知乎日报就能给人“新”的感受； - 你平时跟人沟通时是不是时常能带来新的话题呢？你的父辈们呢？ --- ###### 共情案例之友情 ----- #### 友情是什么？ - “朋友”是某个信息源： - “朋友”往往常见于同学、同事这类拥有共同经历的人，因为彼此在信息的编码和内容上有明显的共情点； - 朋友间信息交流的频率降低，友情自然就淡掉了（回忆一下人人网如何帮我们重拾友情）； - 聊得来的朋友，会更频繁的聊天； --- ###### 共情的网络效应 ----- #### 共情的网络效应 - 共情具有群体性； - 具有共同共情点的人们，彼此之间都会形成共情，从而形成群体。 - 群体中会自发出现地位稳固的**意见领袖**； - 群体中总会有更容易与他人形成社交关系的人； - 群体共情会从网状结构变成星状结构； --- ###### 共情案例之这些都是共情 ----- #### 这些都是共情在起作用 - 塑造品牌就是在打造一个共情编码。换句话说，品牌是共情，不要用功利动机的视角来理解它； - 爽文、流行电视剧、热门梗（脱口秀）都是可以与更多人共情的信息；他们部分找到了构建共情信息的方法论； --- ###### 共情案例之这些都是共情 ----- #### 这些都是共情在起作用 - 直播间的主播、短视频的 up 主、微博大 V、公众号等等都是共情体系下的 KOL。他们擅长的是成为很多人的优质信息提供者。不要忘记 KOL 也需要粉丝的帮助； - 当一个 APP 追求用户时长时，它就进入了共情的大市场竞争中。高效的功利解决方案带不来用户时长。（一个找对象的 APP，究竟是否应该快速找到对象？） --- ###### 共情案例之提升共情的小技巧 ----- #### 这些都可以帮我们更好的共情 - 买杂志或者看热门电视剧，我们总是要看最新的。因为最新的才能带来更好的共情体验。 - 这也是为什么共情解决方案的 APP 都是下拉刷新（你又有 XX 条新消息）； - ZARA、SheIn、喜茶、瑞幸的成功都离不开上新； --- ###### 共情案例之提升共情的小技巧 ----- #### 这些都可以帮我们更好的共情 - 认识新朋友时，我们总会问对方哪里人，以便快速寻找到共情的内容，形成共情； - 如果你不确定是否能创造与对方共情的信息，可以尝试重复或认同对方的信息来提升共情，因为对方自己与自己总是能共情的。 - 这一点对应的现象：社交媒体的交互都有点赞，但没有踩。 ","permalink":"https://blog.uglyboy.cn/slides/2018/11/20/%E5%85%B1%E6%83%85%E7%90%86%E8%AE%BA%E8%AE%B2%E4%B9%89/","summary":"# 共情理论 \u0026gt; 传统经济学未能描述的人类行为方式 --- ### 女生找男生修电脑，应不应该很快修好？ --- \u0026gt; 面对问题，直男们的第一反应就是寻找解决方案并将问题解","title":"共情理论讲义"},{"content":" 本文是笔者近年的一项研究，主要在探究人类社会在经济行为以外的时间里，进行行为的动机，也就是文中提到的 共情。通过这项研究，基本解释了生活中大部分经济行为之外的现象背后的原理，也提供了一种新的创造价值的有效路径。\n当然，本文的结论也可以用很多其他理论来解释，但从第一性原理出发，从一个基点扩展到整个社交和传播领域，会更好的让我们理解现象背后的道理。\n社交的本质 共情社交\u0026amp;功利社交 一般来说，社交在本质上可以分为两种，一种是“共情社交”，一种是“功利社交”。\n这里给出一个功利社交的粗浅定义：以结果为导向的社交行为。共情社交一般偏向于“随便逛逛”，无聊解闷，八卦等非结果导向的行为。当然两者的界限并不是特别的严格，很多共情社交也会慢慢走向功利社交，例如一些人在社区里的行为，最早是为了交流，慢慢变成为了谋求社区中更高的地位和话语权，这就是从共情社交走向了功利社交。\n在一个大的范围内来看，商品交易本质上就是一种社交——参与交易的人需要进入到社会中进行信息交互，最终寻求到自己需要的商品信息，并与其他人进行沟通，达成最终的共识，形成商品的交换。\n本质上来说，商品交易应该算作是“功利社交”。\n功利社交是以客观需求为导向的，基本上都是一般的经济学规律易于解释的，从而有时不包含在狭义的“社交”范畴之内。但哪怕狭义的“社交”中，也无法完全剔除“功利社交”的影响，例如通常所谓的网络上流行的“色情”、“暴力”所形成的社交，本质上也是“功利社交”。\n老外们的社交有不少都是单纯的功利社交，所以时常会出现电影中的桥段：“Just a business”（只是个生意）。但是中国的功利社交则往往伴生着共情社交，甚至共情社交是功利社交的基础，于是诞生了饭桌文化，“买卖不成仁义在” 等现象。\n共情社交和功利社交并不能完全的切分。但有了这样的概念，会让我们更容易理解一些社交现象：\n以微博为例，内容发布者（大 V）以功利社交为主，粉丝以共情社交为主；而豆瓣上，发布者以共情社交为主，浏览者的行为一部分是功利社交（看评分，找好看的内容），一部分是共情社交（看完剧之后，看看别人的评论，寻求认同）；\n抖音和快手本质上是有差别的：抖音的发布者往往是以功利社交为主，浏览者是共情社交；而快手的发布者往往是一共情社交为主（非头部的内容生产者），浏览者也是共情社交。这个结论也同两者的定位相关。\n浏览维基百科的人是功利社交，但为维基百科撰写词条的人，则有不少都是共情社交。\n淘宝上的社交产品，甚至乃至阿里系的社交产品，都是针对功利社交的产品。钉钉之于微信，就是典型的例子。\n相比之下，共情社交则处于鄙视链的上游，以马斯洛的需求理论来说，“功利社交”更多的是解决生理（第一层次）和安全（第二层次）方面的需求，而“共情社交”则是解决情感和认同（第三层次）、尊重（第四层次）方面的需求。\n本文也主要致力于研究共情社交方面的核心要素。\n共情社交的目的 以马斯洛的需求理论来看，共情社交的目的就是获得情感认同和尊重。为了更好的从一个客观角度来描述这件事，我们认为一切情感或认同等等的行为都是信息传递和交互的过程，于是上面描述的共情社交所带来的过程可以描述为：“获得内部信息和外部信息的一致性”或者说“与外部信息形成共识”。\n我们参与社交活动，除了完成特定的需求（目的）外，都是期望与外界信息达成一致的，例如我们心中有一些观点，希望看到和我们观点一致的分析或肯定，又或者是我们期望发出我们的声音，让别人表达对我们的观点的认同。\n从进化的角度来说，形成越多的认同（群体意见达成一致），就可以形成合力，形成更大的能量。所以进化过程中是期望生物体之间可以达成共识的。如《人类简史》中描述的，人类了不起的进步就是源于共同的想象——一个巨大的共识的诞生。\n共情社交的过程是个体“与外部信息形成共识”的过程，但是形成共识并不是共情社交的目的。\n例如我们买了一件很喜欢的时尚服饰，如果我们看到有明星也穿着这件服饰，这事我们会获得共情社交中的认同感；但是如果我们是看到一个不是很潮的人或者是跳广场舞的大妈也穿着这件服饰，我们就会觉得失去了那种认同感，怀疑自己是不是出现了什么差错。\n所以，人们参与到社交活动的目的（动机），本质上并不简简单单是获得更多的认同，因为上面这个例子中，我们得到了更多的认同，只不过我们觉得这种认同带来的是认同感的丧失——我们期待被我们期待的人所认同。用一种更加理性的方式来解释：人们参与到共情社交中的动因是提升获得认同的可能性，但不是认同本身。\n上面的例子，我们认为我们同明星是有更大可能形成认同的，所以当发生了“我们喜欢同一件衣服”的事件后，我们发生认同的可能性变得更大；而我们认为我们同广场舞大妈本质上是小概率能形成认同的（我们不认同广场舞大妈的品味），所以当我们与她们发生了“我们喜欢同一件衣服”的事件后，我们与我们可能形成认同的人群之间获得认同的可能性变小了。这里需要额外做一点解释：并不是我们与广场舞大妈发生一切共识我们都会产生不好的感觉，背后最核心的是我们（主体）内在的认知同外部达成共识的可能性是否变大。\n主体的认知和外部共识 基于上文的描述，获得更多达成共识的可能性是人参与社交的主要目的，那么如果外部已经存在一个很多人认可的共识，我们接受这个共识所能获得的达成共识的可能性自然就会非常的高。是不是我们不断的接受已经达成的最大的共识（区块链技术），就能获得更好的社交体验呢？很不幸，答案确实是这个样子的，很多人都倾向于接受外部已经形成的共识。但是任何一个人（个体），都是存在其个体对事物的天然认知的。所以最终决定一个人的认知的，是主体的认知和外部共识共同作用的结果。\n一件事情，如果主体的自我认知形成的结论和外部共识一致性非常的高，那么主体就更容易倾向于接受这种共识；反过来如果自我认知形成的结论和外部共识的差异性非常大，那么主体就会排斥接受这种共识。\n例如上文中广场舞大妈的例子，主体自身形成的关于“品味”的认知和大妈们通常的共识差异是非常大的，所以主体就会排斥接受大妈们的共识；而相关认知同明星们通常的共识差异是小的，主体就会倾向于接受明星们的共识。\n不同主体认知的人们会自发的形成差异性的群体，倾向于接受彼此之间的共识（因为未来彼此之间继续形成共识的可能性大），排斥接受其他群体的共识（因为未来彼此之间继续形成共识的可能性小）。\n达成共识的相关要素 达成共识是一个信息传播的过程，关于传播后文我们再进一步研究，这里先从信息传播这个层面上来拆解达成共识的相关要素和重要程度。信息传播的要素是：介质（编码）、信息（内容），所以这些也是达成共识的相关要素，并且达成共识还需要一点是：信息的一致性（主体认知同外部信息的一致性）。这就得到了达成共识的三个核心要素：信息的编码（表达形式）、信息本身、信息的观点。三个要素的重要性依次提升。\n信息的编码 信息的编码一致的时候，才有可能达成共识。所以信息的编码一致是一个非常基础的，能带来“达成共识可能性”的要素。具体举例就是，如果两个人会同一种语言，他们就会更愿意互相交流（出国后，在语言不通的环境里遇到一个可以交流的人）。甚至一些其他的信息交流方式，例如音乐、舞蹈，甚至一些抽象的信息编码模式，例如一起踢足球、打篮球等等。\n如果一个人掌握的一种编码方式已经很容易与外界形成共识，那么信息编码就不再是重要因素，但反过来时，则会是非常重要的要素。例如一个人在一个外界都在用同一种信息编码方式的环境下，是有极大的倾向掌握这种编码方式。\n抖音、初期的微信等都是这种信息编码的方式。大家使用这种编码方式的目的，都是为了获得更多的达成共识的可能性。从而编码方式本身就具有了极强的传播性（内增长）。\n信息的内容 如果一个人掌握的信息的内容同外部信息的内容有更大的重叠性，那么他与外部获得共识的可能性就会更大。例如一个人在外遇到同乡，可以聊起家乡彼此共同的回忆，就会更愿意相互交流，以期待形成更多的认同。所以共同的信息内容是比编码更上一层的达成共识的相关要素。\n一般来说，亲友、同乡、同学、熟人等等就是具备有更多的共同信息的人，所以彼此之间就更容易形成社交关系。而基于爱好或话题形成的社群，也是聚集了一群掌握了共同信息的人群，彼此之间更容易形成共识。这就是熟人社交和社群能够发挥作用的基础。\n通常来说，大家都愿意看热门的电视剧，因为这样的话，跟其他人沟通的时候就会比较容易有话题可聊，这就是人们为了获得更大的形成共识的可能性，而主动获得更多的外部大家都掌握的信息。类似的，潮流、热点等等，都是基于人们试图获得共同的信息内容所形成的。\n信息观点的一致 共识中最重要的一点，就是观点的一致性。例如某个名人，或许所有人都知道他（编码、内容一致），但不同的人会对他怀有不同的观点，如果观点不一致，那么就无法形成共识。所以就像上一节的例子，广场舞大妈和明星有相同的编码和内容，但是因为他们的观点不同，就会形成不同的共识，导致最终的共识无法形成。\n而观点是达成共识的相关要素中，最主要的与主体认知有关的，也是最难改变的。\n每个人的成长经历不同，所形成的观点就会千差万别，观点上达成一致的可能性就会变小，而且哪怕能达成一致，其个体的差异也是非常大的。例如同样一个明星，有些人喜欢，有些人讨厌，有些人无感；哪怕是喜欢他的人当中，其原因也是各异的，有些人仅仅是觉得长相比较好、有些人觉得他的成长中的努力感动了自己、有些人觉得他声音甜美等等。\n主体观点强的人倾向于表达自己的观点，获得别人的认同；主体观点弱的人倾向于寻找自己认同的观点，从而达成共识，甚至有时会抛弃自己的观点，以外部共识的观点来替代自己的主体观点。\n幸好本文试图研究和解释的并不是为何大家会在某一个观点上形成了一致，而是怎样的方式能让这种的共识未来可以继续形成更多的共识的可能性。\n例如，大家喜欢某个明星的原因千差万别，关注的要点可能也有各种不同。但是我们考虑粉丝在微博上 follow 某个明星这个社交动作时，是否 follow 这个明星其实都不影响（通常来说）粉丝本身对明星的喜爱程度，但是粉丝却都愿意做出这个动作，背后的原因是：无论基于怎样的动机，follow 之后都可以获得更多明星的消息，从而获得更多达成共识的可能性。\n传统观点中的社交要素 传统社交主要涉及到的要素是：关系、内容、互动；一般涉及到的诉求分为：打发时间、炫耀、获得刺激。本文将试图用 “社交是为了增加达成共识的可能性” 这个观点出发，对上述一些传统社交的要素做一定的解读：\n关系、内容、互动 关系 传统社交中的关系要素，主要是提升了“增加达成共识可能性”的三个要素中的编码和内容。\n编码方面，因为是常见社交关系，自然是可以沟通的，而且也有一致的沟通编码方式，例如俚语、暗号等等。\n而内容方面，则是因为共同生活的关系，势必会积累很多共同的内容从而形成内容方面的优势。\n有时我们有找老同学（旧社交关系）聊天的渴望，也是因为老同学具备了一定程度的编码方面的一致性及共同的内容。而有时真的跟老同学聊起来了，有时又和想象的不一样，或许是编码方面的不统一（不同地方形成了不同的语言习惯之类的），也或许是内容的观点方面的不统一（内容上一般找老同学，就是要聚焦相同内容的）。而乐趣之一就是补齐内容方面的不统一（八卦以前同学现在的状况），未来获得更大的达成共识的可能性。\n关系是一种确定性的“达成共识可能性高”的通道，或者说，任何全新的社交模式形成后，最终一定会伴随着新的“关系”的出现，以便于未来继续达成新的共识。\n内容 首先需要解释一下什么是内容。这一节的内容并不是前文中所述的内容——信息的主体；而是包装信息的形式——信息的载体。就是说这一节提到的内容，即包含前文所说的编码方式，也包含前文所说的信息的内容，甚至还包含信息的观点。\n内容是如何促进社交的呢？首先，并不是所有内容都有助于社交；只有具有特定特点的内容才有助于社交：\n内容形式容易被更多的人接受，甚至是当前流行的形式（信息的编码方式）； 内容本身同更多人的已有知识有尽可能多的重叠，或者是热门话题，大家都渴望了解（信息的内容）； 内容的观点和尽可能多的人的内在主观认识是一致的（信息的观点） 内容对于社交的主要作用是跨期的可积累性——关系这种通道效率虽然高，但是很多时候并不能保证通畅（很难说想找人聊天时就一定有人会来），所以通过信息的载体，让不能实现实时的信息交互时，依然可以提供“达成共识”的通道，而且因为通道是被选择过的，依然有较高的达成共识的可能性。\n好的文章、杂志、社区中的帖子等等，都是提供了更高可能性的“达成共识”的通道——内容。而杂志、社区本身就是对可能性的一种背书，从而让容易达成共识的人在这里可以保证“可能性”一直比较高。\n内容的观点非常的重要，也是人们选择阅读内容的重要考量因素之一。观点是否能和尽量多的人的内在主观认识一致是内容是否容易被接受的重要因素（内容与内容比）。\n小红书上的内容都有套路。例如内容推荐的大多是非常贵的包包或者珠宝，但这种推荐未必能跟大多数人的主观认知形成共识（不同人的喜好不同等等），所以内容最终表达出的观点并不是“这么贵的包包非常好”，而是“这么贵的包包，我的男朋友还是给我买了”。\n用大家容易产生共识的：男朋友愿意为我付出，替代包包是否好，从而内容的接受度就会提升很多，因为这样的内容更容易与读者形成共识。反过来读者在小红书（背书）上阅读内容就更容易达成共识，这里的内容就是一个高“达成共识的可能性”的通路，更好的解决用户的社交诉求。\n互动 类似与上文的内容，并不是互动都会带来更好的社交体验——“提升达成共识的可能性”。如果我们来到了一个和我们共识较少的场所，哪怕有更多的互动，也都像《消愁》中描述的那样：“各色的脸上各色的妆，没人记得你的模样”，也就是“越长大越孤单”。\n功利社交中互动非常的多，但很多时候并不会让人（所有人）快乐，它的互动更像是一种交换——让一部分人快乐，而另一部分人从这个过程中获得机会，未来获得某些利益。\n回到共情社交这个话题，看一看互动是如何促进共情社交的。互动最重要的要点是给予反馈，因为强制性的反馈，使得 达成共识\\无法达成共识 的过程加快。如果原本就存在基于关系或者内容的高“达成共识可能性”的通路，那么互动就可以提升参与者感受到的“达成共识的可能性”（单位时间内达成共识的量变多了）。所以，在已经形成良好氛围的共情社交环境下，互动的提升可以提升社交的效果。\n进一步的，参与者如果找到了一个适合他的社交环境，自我认知与外部很容易达成共识，那么它主动表达自我就可以增加达成共识的可能性。良好的社交环境下，表达自我是参与者天然的诉求，互动本质上也是社交自然的产物。\n另外，互动的形式上是可以控制的，如果能约束互动的结果只可能“达成共识”，不能表达“无法达成共识”，那么不需要外在的好的社交环境这个约束，互动本身就会提升“达成共识的可能性”\n快手首先利用游戏化的手段，激励普通观看者喜欢“点赞”（双击 666）这个行为，然后发布者无论发布怎样的内容都会非常容易的获得“点赞”这种认可和共识。从而激励了内容发布者更愿意表达自我。\n而一些社交应用中采用了“顶”和“踩”两种交互模式时，内容发布者如果被踩，就会极大的打击其发布的积极性。所以主流的社交应用大部分都是只有点赞，没有“踩”的。\n或者也可以对观看者保留“踩”，但对发布者不予以反馈相关信息，保证其积极性。\n打发时间、炫耀、获得刺激 获得刺激 理论上说，这应该算作 “功利社交” 的动因，获得刺激的方式不仅仅限于社交，暴力的游戏、音影作品都可以获得这种感觉，所以个人理解，这并不算社交中人们最重要的诉求；\n打发时间 和获得刺激类似，这一点也不是只有社交才可以解决。只不过社交的方式是更好的解决这件事情的方法之一。\n因为有空闲，所以人们希望在空闲当中获得乐趣，方法之一是类似于游戏化的方式，通过一些方式让身体分泌多巴胺（社交的快乐应该也是分泌多巴胺）。按照游戏化的理论，反馈是重要的机制，所以往往获得快乐需要更大的消耗；而社交中“提升达成共识的可能性”这件事，往往仅仅需要信息的交互就可以完成，可以更低的成本获得快乐（不一定是最性价比的，但是最低价的），所以打发时间的重要表现形式就成为了社交。\n换句话说，我们打发时间刷朋友圈或者逛论坛的时候，希望的就是获得更多认同的可能性。愿意看而不愿意互动不是因为性价比，而仅仅是因为成本（懒）。所以提升互动，更重要的方式应当是降低互动成本，而不是提升收益（提升收益有帮助，但主要是把参与者从共情社交引导向了功利社交）。\n炫耀 炫耀是最契合本文描述的理论的。人们炫耀是因为觉得值得炫耀，觉得值得炫耀是因为预期可以获得更多的认同。如果未能获得足够的认同，就需要做解释弥补以达到期望。如果还是不能获得认同，就会对社交（或者某种特定的信息编码方式）失望，进而从这种方式中流失掉。\n因为有主体认知的存在，不同人炫耀的方式是不同的。有的更倾向于以获得更多认同而调整主体认知；有的则倾向于为主体认知找更多认同。\n其中第二类，为主体认知找认同的人，一般就是我们所说的思想独立的人。他们更倾向于主动表达，或者主动寻找能与主体认知产生共识的信息或信息渠道。这是因为对于这类人而言，获得更大的“达成共识的可能性”必须通过更主动的方式去实现，而且会常常产生“知音难求”的感觉。\n而第一类人，更容易出现所谓的善于社交的人，因为他们更善于获取“获得更多认同的信息”使之成为自己的“信息观点”，从而可以与更多的人达成共识。\n当然，当下的社会，或者说当下的社交应用中，有很多已经不是基于情感的炫耀了，而是转变为“功利社交”的“炫耀”，看重的不是“炫耀”带来的情感刺激，而是寻求更实际的利益因素。\n淘宝的买家秀，基本上都不是为了“炫耀”，而更多的是图商家的反现；而商家期望消费者秀出来，也不是为了情感上的认同，而是期待所谓的“真实评价”能带来更好的成交转化和流量。\n更准确的说，当开始用利益刺激互动率时，社交就会从共情社交走向功利社交，用户在这里就不再能获得“提升达成共识的可能性”的快乐。\n社交的性质 有了上文的各种解释，可以将“提升达成共识的可能性”作为非“功利社交”的唯一驱动力了，本节将基于这个观点，分析社交中一些的性质。\n社交是基于“人”完成的 通常说有人就有社交，社交不能脱离人存在。这里的“人”，并不是真实的人，而是指具有人格化的信息交互对象。类似于前面提到的“关系”，单纯的某一条信息是不能实现所谓的“提升达成共识的可能性”，最多就是带来一些共识，但不会有进一步的可能性了。所以在不考虑“功利社交”的情况下，知识付费是一个伪命题。\n“提升可能性”意味着这个信息主体会持续带来新的信息或者能与之进行交互，而要求达成共识则意味着信息主体的信息编码逻辑是与我们一致的，而且信息的内容和观点在长时间内是保持一致的。也就是说我们需要的是一个可持续交流的有观点的对象，这就是“人”的定义。\n能达到上述定义的一些例子：\n人 宠物（虽然同宠物交流的信息编码和人的不同，但满足的性质是一致的） 帐号（作者、导演、明星等各种信息产生的主体） 杂志、应用 集会、党派 当我们阅读了一个和自己观点很一致的文章之后，我们期待的是去找寻作者其他的文章（以达成更多可能的共识），寻找信息主体而不是信息本身。所以大多数的社交过程都是通过信息检索和筛选人的过程，使得我们在看待社交的时候，往往觉得社交的本质是人或者人与人之间的关系。\n一个典型的例子就是追星：人们通过信息熟悉了一个人之后，渴望进一步了解这个人未来的信息，更多的信息，以达成更多共识的可能性。所以我们看到有“追星”的现象，相对而言很少有所谓的追物的现象（也不是完全没有，要么是把物人格化，例如追小说，追电视剧，要么是功利化，例如收藏）。\n人格化主体的选择 当我们将人格化主体这个概念抽象出来之后，我们会发现，社交并都不是一个人与一群人达成共识的过程，而是一个人的主体认知同外在的一个人格化概念达成共识的过程。最终每个人真正需要达成共识的人格化主体并不会很多。\n能以一个人撑起一个人格化主体的，就是我们通常说的主要的社交关系，否则我们都是与一个群体（同学、同事、同一个组织的伙伴等）或者一个符号（兴趣、明星、帐号、应用）达成的共识。一个人达成共识的人格化主体越少，他的信息或者观点就会越“偏激”，或者说偏离大众。\n人人网、facebook、微信等等，最先建立的都是以单个人为主体的社交关系，此时的社交体验是最好的。后来我们不能以群体或者符号的方式与其他人格化主体建立链接，而必须一单个人为单位建立链接，既削弱了原本的单个人的社交关系，由不能很好的服务人格化主体的社交关系，所以此类应用都会在一定时间后就从共情社交走向了功利社交，或者一些人把这些工具整体（微信朋友圈是看同学、同事近况的地方；聊天是维系与单个人连接的方式）当作了某种人格化主体。\n微信的群相对于原本的聊天更好的解决了人格化主体的社交关系，但社交是一个人的事情，不是一群人的事情，每个人对群组的定义其实是不同的。\n当然，微信后来的解决办法是引入新的人格化主体——公众号，来弥补社交体验的下降。但总得来说，社交中应当还有很多市场可以尝试：例如重塑以人为单位的社交方式，或者构建更适合的与人格化主体社交的方式。\n所以从社交的本质来看，社交并不是一群人的事情，而是一个人的事情。只不过一群人的社交通常可以带来更大的好处和便利性（更多达成共识的可能性），马上我们就会探索到这一点。\n社交关系的建立和选择，其实就是主体认知选择外在的人格化主体的过程。选择的依据，就是“未来达成共识的可能性”作为评判标准。达成共识可能性高的人格化主体，我们会保持跟这类主体的关系，以保证未来持续的高可能性；达成共识可能性低的，我们就会避免与其保持关系（共情社交中是这个样子的，功利社交有时会不得不维持关系）。\n前文提到的广场舞大妈的例子，因为我们与明星达成共识可能性高，与大妈达成共识的可能性小，所以我们倾向于保持同明星的联系，避免同大妈的联系。当我们的一个选择与大妈的观点达成了共识，意味着我们同明星的共识变少，所以我们会不开心；而是否能与大妈达成共识，并不在我们 Top 的人格化主体选择中，所以共识也不能增加我们整体达成共识的可能性。\n社交中的行为准则，一方面是与高共识的人格化主体保持联系，以获得未来共识的可能性；另一方面是会倾向于做一些能增加与各种高共识的人格化主体达成共识的可能性的行为。\n八卦爱好者们喜欢打听八卦的原因是，获得的这个新的信息更容易与他的其他人格化主体达成共识，从而提升了与其他人格化主体达成共识的可能性。所以如果一个人社交中主要的人格化主体们都达成了某个共识，这个人就会更倾向于接受这个共识。这一点后面的群体效应中会进一步阐述。\n因为我们会进行社交关系的选择，这就意味着社交关系会发生更替。例如曾经容易达成共识的人，感觉到与其达成共识的可能性降低了，我们就会寻找其他高共识的人格化主体。给予前文中达成共识的相关要素：编码、内容、观点，很容易就能得出结论：曾经的同学、同事之间的关系会逐渐疏远，除非能一直保持联系，或者观点上一直都能达成共识。最后一种社交关系（观点共识）相对而言在时间维度上更加稳定。\n社交恐惧症是新时期出现的现象——很多人更愿意在网络上交流，而不愿意在真实社会中面对面交流。本质原因是网络社交中，我们通过了一些手段（例如更容易点赞，更难表达否定观点），让用户觉得相关的渠道（人格化主体）达成共识的可能性更高，于是在渠道选择中，实体社交排在了更靠后的位置，于是就会出现社交恐惧症——放弃了真实生活中的社交关系和行为，以维持自己整体的达成共识的高可能性。\n社交中必须创造“新”的共识 还是因为“可能性变大”这一点，社交中必须有新的东西出现，否则哪怕达成的共识非常的多，也无法带来“可能性变大”这一特性。\n所以阅读 wiki 百科 并不是共情社交行为，但参与 wiki 百科 的编写创作的过程是共情社交行为。类似的，大部分的学习行动都不是社交行为，但不代表不能通过社交行为进行学习。\n新共识包含两件事：一是新的信息（至少感觉是新的）、二是信息观点一致。而更多的可能性意味着“新的达成共识”的信息越多，效果越好。所以社交中重要的衡量要素是“共识的增速”，或者说“新共识的数量”。这就解释了 wiki 为何给人的感觉不是一种社交行为。\n更多新信息 结合上文中人格化主体的概念，如果对应的人格化主体需要保持“新共识的数量”，产出信息的能力和传递信息的能力必须足够。所以如果人格化主体是一个与你通路顺畅的信息源，效果好于通路不顺畅的信息源；如果人格化主体的产出新信息能力强，效果好于低产的主体。\n基于这样的观点，很容易就能产生如下这种自然的结论：\n网络时代是社交的重要温床（信息通路顺畅）； 异地恋很难；身边的朋友效果更好； 如果人格化主体是一群人，效果好于一个人（产出新信息的能力强）； 愿意闹绯闻的明星比专心演戏的明星更容易吸引人。 更多共识 主体的人感知能否达成更多的共识（提高达成更多共识的可能性），判断标准并不是达成共识的总数量，而是单位努力下，达成共识的数量。说白了就是达成共识的效率。\n例如一个不能被很好检索的图书馆，哪怕其可能达成的共识非常的多，但是带来的感觉就是：达成共识的可能性很低；反过来，如果一个更小的图书馆，但是有便捷的检索，就会让人觉得达成共识的可能性很高。\n所以达成共识的效率也是社交中非常重要的要素。解决效率问题有两个主流的途径：\n基于人的偏好把更可能达成的共识展示给对应的人； 基于人的已有共识产出新的共识。 其中第一种是当下抖音、快手采用的方式，但相比于第二种，未必有本质的优势；第二种，基于人已有的共识产出新的共识，就是社群、社区、论坛的模式，既通过已有的共识吸引具有相似共识的人聚集，又可以通过已有的共识不断的产出新的共识。\n社区的命门之一就是生命周期，或者更确切的说，是规模问题。\n首先分析一下社区这种社交形式的优点：先通过少数人（可能是一伙有紧密关系的人）或者少数内容烘托氛围，背书社区这个人格化主体在基于共识创造新信息的能力，其中的共识就是社区的内核（主题）。由此，人格化主体形成，与之有共识的人就会聚集在这个社区，而且会形成网络效应，更多的人贡献共识，提升创造新信息的能力，进一步又吸引了更多的人来。绝大部分的论坛都是这种模式的写照。\n随着规模的扩大，共识的范畴也会扩大，原本基于信息内容的观点的共识，慢慢发展出更多的基于内容的共识（最早我们是为了共同的目标走在一起，后来怀念的确实共同战斗的岁月），同时产出的优质共识还会吸引一批怀着功利社交目的而来的人，他们会进一步增加社区成员的复杂性，最终就会出现共识的偏移。共识偏移的过程一般来说应当是信息范畴扩大的过程，越来越多的人进入导致不同人达成的共识的总范围变大，但是对于但个人而言，却意味着单位努力下获得的共识变少了，因为总信息变多了，检索效率下降了。当效率降低到一定程度时，社区给人的感受就变成了“获得更多共识的可能性在降低”，那么这个用户就会舍弃这个社交渠道，而且往往最先流失的会是最初形成优质共识的那批用户。\n这样的过程几乎是不可逆的，甚至是注定要发生的。所以这也是各种社区都需要坛主、吧主进行管理的原因之一；甚至有些社区还需要邀请制来控制社区的规模，以此来延长社区的生命周期。\n社交中的群体效应 前文提到了，社交是一个人的内在与外部发生交互的过程，也就是说社交应当是一件很个人的事件，为何又会出现群体效应呢？\n主要的原因是每个人的社交对象都不单一，会有多个与其内在认知发生交互的人格化主体，而多个人格化主体都需要与内在认知形成互动以达成更多的共识，那么就会影响内在认知。换句话说，一个人的内在认知最终是与一些人格化主体达成共识的，如果这些人格化主体已经形成了某些共识，那么这种共识就会极大的影响这个人的内在认知，甚至影响这个人未来对新的人格化主体的选择。\n原本所谓的“形成更多共识的可能性”就会天然形成关系，将有共同性的人聚集在一起，他们又会进一步强化彼此之间的共识，形成群体的共识。所以自然的社交就会发展出一种群体效应，同时这种群体效应也会自然的影响到这个个群体中的每一个人。也就是“三人成虎”这个典故所昭示的道理。\n意见领袖 如果一个群体中，某一个人相比之下更容易与这个群体中的其他人达成共识，那么对于其他人而言，与这个人的交流就可以更好的提升“达成共识的可能性”，于是群体中更多人的选择是与这个人交流，从而导致这个人会获得更多的信息（而且是有一定群体共识基础的信息），从而提升新信息的数量，进而让自己与其他人相比达成共识的可能性更大。最终群体性的共识将几乎由这个人把控：每个人比较优先的信息来源都是从这个人这里获得的，同时如果这个人可以影响其中的一部分人，那么就会因为群体效应影响更多的人，乃至影响整个群体共识。\n这样的人就是意见领袖（KOL），其影响力是比其他人大非常多的。前面描述的过程是指，意见领袖通常来说都是非常稳固的，但形成意见领袖的途径有很多，也许是意见领袖自己的人格魅力，也许是外力要求所有人必须将信息与意见领袖交换，也许真的只是人与人的差异导致意见领袖更加擅长与人交流或者搜罗信息（小群体中的八卦之王）。\n当然，因为意见领袖是有可能自发形成的，所以意见领袖的地位也不是牢不可破的。基于前面的描述，有两个直接的途径可以销毁一个意见领袖：\n一段时间内使意见领袖无法产生新信息； 降低意见领袖信息达成共识的效率，例如使其产生一个与大家共识都完全不一致的信息； 一般来说，明星都可以算作是意见领袖的一种，所以上面描述的两点也是抹杀明星的最直接手段：封杀、丑闻（人设崩塌）。\n关于意见领袖的一些要点，在传播一章中有单独的论述。\n传播 传播和社交本质上是共生体：他们都是在描述人同信息之间的交互关系。唯一的区别在于：社交所针对的主体是人，而传播所针对的主体是信息：传播的就是如何让信息与更多的人达成共识。\n一般的传播研究会分为三个部分：大众传播、人际传播和人内传播。人内传播描述的就是内在认知同外在人格化主体达成共识的过程；人际传播，主要是上文中描述的社交的群体效应。传播学中关于人际传播一个非常重要的性质就是二级传播理论：由媒介到意见领袖再到受众的传播方式。各种信息一定是通过意见领袖的筛选，再到达每个人的。\n人际传播中，并不是说只有意见领袖再获取外部信息，再次传递给其他人。而是意见领袖所带领的一群人中，所有人都在获取外部信息，但在这群人中，任何信息都没有办法直接扩散到其他所有人，而是先传递到意见领袖这里，由意见领袖甄别是否能让这群人中更多的人达成共识，然后再完成意见领袖到大家的传播路径。这群人就是一个星状的网络结构，其中星节点就是意见领袖。\n大众传播 更多的是研究信息如何通过渠道在更多的人面前获得曝光的。曝光不代表能被认同（达成共识）。所以大众传播相对而言偏渠道性质，更反映传播的广度，人际传播相对而言更反映传播的深度（传播的效率），两者相结合，最终影响传播的效果。\n传播都是有目标人群的——即期望与目标人群对某一内容或观点达成共识。与社交不同，传播的目的不是维持一个“达成高共识可能性”的人格化主体（渠道），而是一个非常具体的共识（某一个信息被认可），所以传播的要点和社交就有了很多的不同。\n信息在传播中的要点 传播的主体是信息，目的是与目标人群对信息达成共识。而信息几乎是传播中最可控的要素，所以最值得探讨其要点。依旧从信息的三个要素出发：编码、内容、观点。\n信息的编码 首先是编码，为了让信息可以同目标人群达成共识，编码需要具备两个特点：\n编码与目标人群是一致的； 编码与触达到目标人群的通路是一致的； 第一点便于理解，尤其是那些可以直接触达到目标人群的传播方式（例如电视广告、互联网广告等），只需要保证编码与目标人群一致即可。当然编码也有选择的余地，例如是通过语言的方式、还是通过音乐的方式、是通过图文的方式、还是通过视频的方式。这些不是由传播者决定的，而是由目标人群决定的，他们更容易接受什么样的编码，就值得用什么样的编码。\n拼多多传播中的编码，就是改编的歌曲，即是大家熟知和可接受的形式，且易于二次传播，又体现了和其他信息在编码上的差异性，跳出了同编码下的内容竞争，更容易被目标人群差异化的对待。\n信息与目标人群达成一致 信息与目标人群达成一致，有两种情况：\n目标人群是与信息的内容达成一致 目标人群是与信息的观点达成一致 难易程度来说，与内容达成一致更容易，与观点达成一直更难；但从效果来说，内容的一致会被冲淡和覆盖，不一定长久，而观点的一致具有相对而言的可持续性。所以下面我们将针对这两种情况分别分析。\n内容的信息传播 如果只需要就信息的内容达成一致的话，那么信息只要可以触达到目标人群即可，知道了，便可以达成一致。例如绝大部分的广告（包括拼多多的），主要就是曝光广告的名称，当目标人群再次看到时，自然就会有非常大的达成共识的可能（因为不需要观点一致）。\n但一个人接收到的信息的内容是非常多的，他只会选择留下未来更容易达成共识的信息内容，或者有实际价值的信息（功利社交），所以通常情况下得到曝光的信息内容，其价值并不大。只有满足了这个人能够经常与这条信息内容达成共识，才会形成价值。也就是说，信息的内容需要经常被目标人群看到，内容达成一致需要屡次曝光，多渠道曝光，最好是铺天盖地的曝光。\n一般来说，《通知》就是一种需要对内容达成一致的传播需求，保证通知切实有效，最好的办法就是在目标人群生活的各个场景中都予以曝光，例如食堂的桌子上、卫生间的门上、工作空间的墙壁上等等，以保证多次曝光，目标人群就会提起足够的重视。\n当然，如果《通知》是包含利益因素的，那么目标人群会用功利社交的方式来对待，自己就会找办法来保证通知的触达率和效率的。\n一般来说，大多数政党的传播，是偏通告性质的，而且往往未必包含利益因素，就需要铺天盖地的方式进行宣传，例如我党当年用大喇叭做思想传播，即具有编码的优势，又保证了频繁曝光，所以效果拔群。但现在就缺少行而有效的传播手段，大家对党产生的共识就会越来越少。\n观点一致的信息传播 如果信息所蕴涵的观点天然就是和目标用户一致的，那么这件事情容易很多，只需要触达就可以了。例如一下兴趣群体或者小众网站，其目标人群就是能同自己达成共识的人群，那么也不需要铺天盖地的广告轰炸（内容达成共识的传播方式），只需要有触达即可。例如女权、同性恋、地下党等等。甚至为了追求触达的有效性，可以通过搜索引擎的广告方式，精准定位目标人群。\n“酒香不怕巷子深”描述的就是这种情况，酒香原本吸引的就是喜欢喝酒的人，目标用户就是可以达成共识的人，所以只要可以触达（酒的香气触达到喜欢喝酒的人），就可以达成好酒的共识，不需要看到华丽的店铺门面，或者门庭若市的场景。\n观点不一致的信息传播 但还有很多情况是信息所蕴涵的观点不那么容易同目标人群达成一致，或者说希望可以改变一部分人的内在认知，以达到同信息的观点一致的目的。这件事是传播中大家最希望做到的，因为传播的目的就是希望覆盖和影响更多的人。如果仅仅是与信息能达成一致的人达成一致，那传播的价值就非常的小，传不传播，都是能达成一致的。\n还是先从人内传播来看如何影响一个人的观点：如果与一个人发生关联的主要人格化主体都对某一个观点达成了共识（或者是都输入了某个信息，但信息蕴涵了同样的共识），那么这个人就容易接受这个观点，因为接受了这个观点，可以提升与多个人格化主体达成共识的可能性。\n这就得到了观点不一致时，信息传播所需要具备的条件：让与目标人群相关联的主要人格化主体都传播蕴涵某一观点的信息，最终就可以增加目标人群接受这个观点的可能性。\n所以针对观点不一致的信息传播，第一个要点是：信息的传播要覆盖目标人群的主要连接对象（就是说不仅仅需要触达，而且需要覆盖）。这样一个人才可能从多个不同的人格化主体中接收到蕴涵同一观点的信号。\n淘宝传播的困境：现在对于中国的大部分人而言，微信都是其社交中非常重要的人格化主体，甚至在微信上会有多个人格化主体（各种朋友关系现在更多是通过微信维护的）。但是淘宝的传播却很难通过这个人格化主体发出声音，从而淘宝的传播几乎不具有影响目标人群观点的能力，之具有内容传播的能力。这对于树立淘宝的品牌形象等都是巨大的挑战。\n所以现在很多人交流的人格化主体向抖音转移时，更应该把握这样的机会，通过抖音做观点的传播。\n拼多多利用微信完成了一个观点的传播：拼团。淘宝做拼团最大的挑战也许不是价格或者品质等问题，而是用户想到拼团，就只会想起拼多多。\n仅仅覆盖了目标人群的主要连接对象，不代表信息就能传达到目标人群。因为那些中间节点（目标人群的主要连接对象）只会接受与自己能达成共识的信息，且想目标人群只会传播容易与目标人群达成共识的信息。鉴于信息的观点和目标人群是不一致的，这就导致中间节点并不会倾向于把这样的信息传播给目标人群，所以这些蕴涵观点的信息必须还要具备两个特性：\n蕴涵观点的信息依然可以同中间节点达成共识； 蕴涵观点的信息依然可以同目标人群达成共识； 因为中间节点已经是目标人群的主要节点了，所以还好，不需要针对中间节点和目标人群分别形成共识，只需要一个目标人群可以认同的共识即可，然后通过多个中间节点与目标人群传播信息，就可以让目标人群也易于接受我们试图传播的观点了。\n解决手段也比较明显了：\n蕴涵观点的信息，其携带观点的内容是可以与目标人群达成共识的； 蕴涵观点的信息，其携带观点的信息中还有可以与目标人群达成共识的观点； 咪蒙的文章，大多是利用了内容与大多数人达成共识，进而携带观点来影响人的。类似的，蹭热点，也是传播中非常常见和有效的手段；\n而本文中开篇提到的，小红书的营销套路——则是用更普世的观点来携带其他观点，用“老公爱我”来携带“这个包值这么多钱”，或者用“她没我好”来携带“我也应该有这么贵的包”。\n人际传播 或许是受限于科技水平或什么原因，当下人类的社交活动，从信息传播的编码来看，主要是人和人的传播，甚至是同一种语言的人之间的传播；从信息传播的内容来看，主要会受限于血缘关系、地域等因素。\n所以哪怕信息的编码有不断的创新（Facebook、微信、抖音），内容更加泛化（全国热播的电视剧、全国连锁的商店、全国的淘宝等等），但是绝大部分情况下，一个人的交流主体还是会限定在一定的范围内，其中的人相互之间都会有连接（社交关系），从而形成了一个个群体。而在群体中，就会出现意见领袖。哪怕是新的社交编码，背后连接起来的，依然是这样的群体（会出现新的群体，但是范式没有差别）。\n于是绝大部分的信息传播，还是会形成二级传播，需要通过人际传播来传递信息。\n针对人际传播，我们再回顾上一章中信息传播的要点便会发现，在人际传播中，信息与目标人群达成一致变得非常的容易——只需要 KOL 保持一定频率的传播，就可以保证信息的传播效率，无论是期望内容达成共识还是观点达成共识。因为 KOL 可以同时影响到目标受众及其主要的社交主体，而消息还会在圈子内持续传播，所以信息的覆盖度和频次也会成倍的加强，达到各种预期的传播效果。\n当然 KOL 传播的内容也还是需要有一点约束的：即容易与其群体大多数人形成共识，或者说不会影响到 KOL 在群体社交中的影响力。例如明星代言需要与人设相匹配、社区的达人不要随意发广告等等。\n通过 KOL 进行传播就成了传播中异常有效的方式：\n各种政权或者政党，都会在其管辖的区域内设立管理机构，设定管理者，并营造成 KOL。例如我党的书记角色，相比于行政管理者未必有更大的实权，但是在特定时期却是最重要的 KOL。然后政权或者政党可以通过 KOL 来形成自己的传播。对于自发形成的社群，收编其 KOL ，以达到控制传播的效果。\n随着社会的发展，原先的 KOL 的传播能力或影响力逐渐下降，越来越多的出现自发形成的 KOL，配套而来的就需要更完善的对 KOL 的监管方案。\n所以 PGone 的事件出现后，这个 KOL（PGone） 立马就会遭到封杀，这样这个群体不多久就会形成新的 KOL。\nKOL 的要素 进一步来说，如果可以营造可控的 KOL 就意味着传播中拥有了一个稳定的传播通路，可以形成稳定的传播抓手。这里再梳理一下 KOL 的一些要素：\n粉丝 对 KOL 是共情社交，不要用利益刺激粉丝，导致粉丝从共情社交走向功利社交（low 一点说，就是 KOL 宁可向粉丝要钱，也千万不能给粉丝发钱）； KOL 要保持与粉丝之间的高的达成共识的可能性，也就是说 KOL 要保证新内容的量和质量； 粉丝之间具有社交的群体效应，所以 KOL 要保持与整体达成共识，也就是 KOL 需要有人设，这一点同上面的质量的含义是一致的； 为巩固 KOL 的地位，应更多的接纳源自粉丝的信息，即强化自己，又避免粉丝中自发形成新的 KOL（除非 KOL 自己就是这个群体的共识，例如明星）； 保证粉丝之间的交流，以此扩大 KOL 传播的信息的影响力。 人际交往 人际交往不过是社交行为的一个方面，理论上并没有什么更新的内容。但是如何做好人际交往，确实我们每个人都需要真实面对的事情，所以还是值得拿出来探讨的。\n首先需要理解一个概念：社交关系并不是相互的。例如一个人对你是共情社交，并不意味着你对他也必须是共情社交。所以哪怕我们是以功利的态度面对人际交往，也不代表我们无法收获真情（共情社交）。\n善于社交是长于共情社交 首先需要探讨的是共情社交和功利社交在人际交往中的价值。功利社交，别人是怀着目的性的，如果目的无法达成，就意味着社交关系的终结；一个人能解决其他人的某些特定需求，但是覆盖度是有上限的，往往总有些人对你一无所求。另外有所求，往往也意味着你需要给予他人利益，还需要考量具体的成本。\n而共情社交，别人是追求达成共识的可能性，换句话说追求的不是当下而是未来，这就意味着共情社交具有一定的长期性；另一方面，我们在共情社交中只需要交换信息，并不需要更具体的利益付出，也就是说是低成本的。最后，如果一个人有能力与各种人达成共识，那么对他来说，就非常容易获得社交关系。\n所以通常，善于社交的人一般都是在共情社交方面具有更强的能力，当然也不排出例外，例如电影《教父》中马龙 · 白兰度饰演的老教父，就是用功利社交维持的大量社交关系，获取自己共情社交上的满足。但这种情况只有少数人可以享受。\n大多数情况，善于社交的人都会让与其接触的各种人都感到舒服，感到被尊重，被认同；对于他们来说，功利社交只是扩大共情社交的渠道——别人找我办事，然后成为我的朋友，为我办事；而不是变成一笔交易，你为我付出多少，我就为你付出多少。当然，这里只是举例，并不是说所有善于社交的人都是怀着功利社交的目的的。\n人际交往中共情社交的要点 先从某个特定的人做起。如果我们试图让这个人对我们形成共情社交的关系，要点还是从信息交流出发，三个因素：编码、内容、观点。\n编码一致 首先是编码尽可能的一致，不要刻意展现自己以为的“高大上”，而是与目标贴近。\n除了特定环境下，通常我们都会对中文中夹杂着很多英文单词的人感到反感，觉得他们很装，本质上就是编码上无法达成共识；反过来如果一个老外突然说了一句中文，甚至是中文的方言，亲切感就倍生。例如“福圆爱”说着一口东北话时，很轻易就征服了中国广大人民。\n当我们在异国他乡时，遇到任何一个会说中文的人，不论是中国人还是外国人，都会倍感亲切。\n内容匹配 其次是内容尽可能的一致，多说对方熟悉的，了解的，认同的东西，少说对方不理解的东西。这一点很多时候会被人误解，觉得“我说一些你们不懂的事情，会显得我很厉害，你们就会更愿意听我说”。但能达到这样的效果，只有两种可能性：1. 你是 KOL，大家已经都愿意认同你的观点；2. 这是功利社交，大家就是为了听你说他们不知道的事情。\n马总说的道理大家都喜欢听，因为马总已经是 KOL 了。但如果一个谁都不认识的人大谈特谈“新零售战略”，只会让人觉得反感。类似的，明星的各种小故事我们都喜欢听、甚至我们身边已经是朋友的人，他们自己的故事我们也愿意听，但这是建立在已经形成了共情社交的基础上的。\n当然，如果你就是想了解新零售，也会愿意听他的说法。或者你相信他可以帮助你解决一些具体的问题。这个情况就是功利社交了。我们进行知识付费，或者参加学术论坛、讲座等等，都是基于功利社交的。\n所以如果单从内容角度来说，尽量是找和对方更有共同语言的事情来沟通，或者是你真的了解对方生活中的事情，或者就找一些社会热点、国家大事来聊。出租车司机、公园老大爷往往都是“国家大事”派的。\n这里需要额外强调两点：\n并不是内容必须是对方知道的，而是说内容必须是可以让对方认同的。例如街边拿身世故事乞讨的人，他们的内容是我们不知道的，但是往往是让我们容易认同的。 并不是内容上必须与对方一致，而是不能认为内容不一致是更好的策略。哪怕是 KOL ，也是先通过一致的内容和观点，达成了跟大多数人的共识后，才可以发表一些内容不一致的信息的； 很多社交大人都是非常善于观察的人，他们可以从别人的一举一动中洞察到对方的来历，从而准备好适合与之达成共识的内容。\n当然，也有很多的套路存在。例如见面聊天先问对方是哪里人，然后扯出当地自己了解的信息，这样就很大概率可以达成共识。如果能碰巧找到一个共同认识的人，一下子就创造了非常大的达成共识的可能性，从而大概率形成稳定的社交关系。这个要点就是社交网络中常用的“朋友的朋友”，或者“共同的好友”。\n观点的认同 关于编码的一致和内容的匹配都是容易理解的。但是对于真实的人际交往中，编码方面大家大多数都能达成一致；而内容的匹配则很难做到匹配上进行人际交往的所有的人——我们每个人掌握的信息总是有限的，寻求信息内容的共识并不是总能达成的。\n但是哪怕信息的内容不一致，并不完全影响观点的一致性。例如歌星的粉丝，也许有些人是因为其颜值喜欢这个明星的，也许有些人是因为歌声喜欢这个明星的，但他们的观点达成了一致：“我们喜欢这个歌星”，这就不妨碍他们彼此形成共情社交，互相交流更多的信息，从观点的一致进一步完成内容的一致性。\n前文说过，观点可以形成比内容更加持久的社交关系，持有相同观点的人更容易成为社交好友，但是了解一个人的观点往往比了解一个人知晓的内容更加复杂。所以除了类似于内容匹配中提到的，通过高超的洞察能力发现对方的观点外，更可行的办法是鼓励对方说出自己的观点，然后表达理解和认同。\n我们描述人际交往时，会用到两个词“盛气凌人”和“如沐春风”。盛气凌人，指得就是这个人对别人的观点都不认可，只认可自己的观点；如沐春风，则是愿意让人愿意表达出自己的观点，而对方还会与之附和，感到被理解被认同。\n社交达人的特点 语言通俗易懂，与大家打成一片； 善于找到大家共同的话题，促成大家达成共识（特定场合可能还会有一些荤段子之类的）； 有洞察能力，跟各种人都可以找到共同话题，可以引导群体边缘的人进入到群体的共识中来； 善于倾听，乐于对他人的观点表示认同或认可； 能带给整个群体丰富的新的共识，即对群体中很多的个体，都是能达成高共识可能性的人。 知识渊博的人未必就能成为社交达人，哪怕找他们问询的人很多，但他们也很可能成为“老学究”；\n八卦之王也未必能成为社交达人，虽然他们很容易找到大家的共同话题，促成大家达成共识，但也可能不善倾听，或不善带来更多共识，让人觉得只是个“嚼舌根子”的人。\n有钱有权，会提升成为社交达人的可能性，因为更容易通过功利社交构建社交关系，进而形成内容的匹配，以培养共情社交，降低社交难度（观点的认同）。\n社交关系中最常见的矛盾 最常见的矛盾，也是社交应用中常常犯的错误，就是当一方寻求共情社交的信息认同时，另一方却反馈的是功利社交中的利益。\n男女朋友间很常见这种情况，女生做出种种举动试图寻求男朋友的安慰或理解，但男朋友却反馈成非常物质的表达。\n类似的问题也常常出现在家庭教育中：家长往往会对孩子表达严厉的不认可，并强调“我这是为了你好”，这是一种典型的功利社交的态度来回应孩子。但孩子往往想要的不是这种“功利的好”，而是渴望得到共情社交中下，家长的认可。这种认可并不是某个确定的事情或观点，而是对未来形成认可的预期。孩子觉得未来家长也会经常认可自己，就会充满自信，快乐与家长交流；但孩子如果觉得未来家长给予的也更多的是打击，那么他们就会试图回避同家长的社交连接，造成家长和孩子间关系紧张。\n所以当遇到类似情况时，首先要判断对方寻求的是共情社交还是功利社交。如果是共情社交，那重要的不是判断事情的对错，或者寻找解决办法，而是需要找到各种能与对方达成共识的机会。例如朋友找你抱怨时，不需要表达对抱怨的事情的看法，拉着朋友一起吃大家都喜欢吃的好吃的就 OK 了。\n如果一个 APP 是“有温度”的，也就是愿意倾听用户的表达，并表达认可的，那么它就可以让用户觉得更温暖；反过来，如果一个 APP 一直持着“我是为你好”来服务用户，哪怕真的让用户得到了更多的利益价值，但用户也只会在“功利社交”中寻求特定需求的时候，想到使用这个 APP\nWeb2.0 时代，带来的最大的变革就是用户可以表达自己的观点，而 Web2.0 技术赋予了其他人认同的能力，从而让用户觉得自己在相关的 APP 上是被认可的，相关的 APP 便充满了温度。例如 博客、 微博（早期）、人人网等等。\n反过来，电商、搜索等工具性质的应用，却缺少让用户表达并获得认同的空间。淘宝中提供了旺旺，由商家来承接社交关系，出现了“亲”文化；百度则通过贴吧、百科、问答承接大家表达和获得认同的意愿。\n非互联网领域，海底捞是非常典型的运用共情社交提升价值感的案例，它让每个用户都感到被尊重被认同，所以海底捞不仅仅是一个火锅品牌，还是一个可社交的人格化主体（当然很多人不会把海底捞当作社交对象，主要是在于编码、频次等问题）。\n关于爱情 我们这里主要从共情社交的角度谈爱情，但不谈性、也不谈婚姻，虽然这两者都与爱情有着密切的联系，甚至这两者也能促进共情社交，达成很多的共识。\n爱情有多种因素共同促成，不同的爱情里，各种因素起到的作用大小各不相同，各因素也没有优劣之分。爱情的对象往往会发生在：一个可以极大提升个人共情社交的人。这个条件意味着如下的可能性：\n**这个人可以与我达成大量的共识。**青梅竹马是一种很容易发生爱情的方式，共同的经历也容易萌发爱情；而如果能跳脱基于信息内容的共识，上升到基于信息观点的共识，那么两个人就会觉得无论是否彼此都了解的东西，都会形成共识，这时候就是有所谓默契或者一见钟情的感觉。 **这个人可以创造大量我与其他渠道的共识。**一个人是公认的品格好的人、长得帅的人、有名望的人；或者是这个人可以创造很多让我与其他渠道达成共识的人，例如如果一个地区的人都具有某一特性，他们也希望找具有同样特性的人。 **这个人可以满足我的大量功利社交诉求，从而帮助到我完成更好的共情社交。**这种帮助可以是节约了工作时间，可以将更多的经历投入到共情社交；也可以是提供了很多共情社交的机会和便利。 这三点在任何一段爱情里都不是孤立存在的，也会共同发挥作用。例如一个女生跟一个男生有精神上的共鸣，这并不妨碍她也希望男生能送她一个可以在朋友们面前炫耀的包包；也不会因为女生希望男生更辛苦些赚钱养家，或者买房买车，就意味着女生只爱男生的钱。\n","permalink":"https://blog.uglyboy.cn/posts/2018/08/16/%E7%A4%BE%E4%BA%A4%E4%B8%8E%E4%BC%A0%E6%92%AD/","summary":"本文是笔者近年的一项研究，主要在探究人类社会在经济行为以外的时间里，进行行为的动机，也就是文中提到的 共情。通过这项研究，基本解释了生活中大部","title":"社交与传播"},{"content":" # 耐用品的价格 \u0026gt; 比特币火热的原因 --- 使用寿命长的商品一般都是耐用品 ### 耐用品通俗定义 --- #### 耐用品的精准定义 ----- - 短期的价格需求弹性大于长期的价格需求弹性的商品定义为耐用品 - 解读下来就是：长期的需求量相对确定，短期需求量可调节的商品，例如家电长期来看总是需要的，但短期不是必须要买，可以等价格低时再入手，所以家电就是耐用品。 - 类似的，非耐用品就是短期需求相对确定，长期可调整。例如饮食习惯不容易马上改变，短期需求会相对确定，但长期来看，是可以改变的。 --- #### 科斯猜想 ----- - 由于将来销售的耐用品将会影响到现在所售出的产品的未来价值，在垄断耐用品生产者没有对未来的产量水平做出承诺时，如果消费者具有价格下跌的理性预期，那么垄断价格就会迅速降到边际成本水平。 - 耐用品生产者垄断无法带来更多的回报（例如没有品牌溢价）。 --- #### 解决耐用品科斯猜想的办法 ----- - 只出租，不出售； - 维持消费者向上的价格预期； - 将耐用品转变成非耐用品； --- #### 出租不出售 ----- - 从买断制转向订阅制就是这种类型； - 例如：Office 365，优酷会员 等等； --- #### 维持向上的价格预期 ----- - 当用户对耐用品有向上的价格预期时，其购物的需求性质会发生变化：从使用需求变成保值或增值需求； - 股票、茅台、黄金、钻石、房地产、比特币都是属于维持用户向上的价格预期； - 当向上的价格预期存在时，耐用品就具备了货币属性；反过来，必须是通货紧缩的货币才能维持向上的价格预期。**也就是说向上的价格预期的商品，产量是被控制的**。 --- #### 将耐用品转变为非耐用品 ----- - 从定义出发，降低短期需求弹性，提升长期需求弹性。 - 女装行业，通过新潮流，新风尚等引导，强化了短期的需求量，同时削弱了过往的销量对当期销量的影响，提升了长期需求弹性。所以女装成功的从耐用品转成了非耐用品。 - 电脑、手机、软件等行业是通过新功能的迭代（用户认知）来实现耐用品到非耐用品的转型的。当创新不能影响用户认知时，用户又会以耐用品的心态来对待这些产品。 --- #### 服务（免费类 APP） - 一般来说，服务（免费类 APP）都属于耐用品，如何提升用户对服务的价值感，形成更好的竞争优势？主要有两种途径： - 维持向上的价值预期，控制服务群体的体量，但提升 ARPU 值。例如：豆瓣、知乎、网易严选等一众小众应用； - 提供新功能、新玩法、、不断引领新潮流。 - 例如 Windows 系列、Office 系列、iOS 系列都是按版本号更新，每次更新前大家都会很期待，提升价值感。 - 而一些工具类的应用，在消费者心中的价值感会逐渐降低，直到被替代。 ","permalink":"https://blog.uglyboy.cn/slides/2018/08/07/%E8%80%90%E7%94%A8%E5%93%81%E4%BB%B7%E6%A0%BC%E7%AD%96%E7%95%A5/","summary":"# 耐用品的价格 \u0026gt; 比特币火热的原因 --- 使用寿命长的商品一般都是耐用品 ### 耐用品通俗定义 --- #### 耐用品的精准定义 ----- - 短期的价格需求弹性大于长期的价格需求","title":"耐用品价格策略"},{"content":" ## 游戏改变世界 从游戏到游戏化 --- ### 人类简史 ----- - 大自然为了生物更好的进化，把有意义的事情赋予了“好玩”的属性 - 人类为了更快的发展，学会了“理智”，用利益代替了好玩——不再追求事事都好玩，以此获得最终“幸福”的结果 - “人生就是在完成很多知道是对的但依然很无趣的事情。” - **游戏化**——回归本源，让对的事情也变得有趣，让有趣来引导人们做对的事情。 --- ### 为什么要研究游戏化？ ----- - 现在的商业环境，越来越倾向于资本竞争（技术壁垒随着人才的流动，在资本下也很难保持）。 - 资本竞争的要素： - 一是资本投入的方向（战略） - 另一个就是如何能花小钱办大事（策略） - 游戏化是一种可以不依照一般的经济学规律，花小钱办大事的**手段**。 --- ## 游戏模式 \u0026gt; 游戏是如何抓住用户的？ --- ### 好玩是什么？多巴胺！ ----- - “好玩”是人类进化形成的产物： - **探索新事物**：旅游、地图、地下城 - **提升技能**：物理系统（跳一跳）、棋类等 - **欲望的满足**：获得更多的资源、更少的损失 - **高尚的情操**：“为了集体，为了人类！” --- ### 一些游戏的设计手段 ----- - **移情**（带入到新的世界中） - **探索和发现**（密室逃脱） - **收集**（集五福、小浣熊水浒卡） - **更宏大的意义**（做小事也能有大价值） - **更有把握的成功**（微交互） - **更有趣的失败**（404页面） --- ### 游戏是什么？ - 游戏的本源：好玩！ - 古代的：九连环、华容道； - 现在的：三消、《植物大战僵尸》、《愤怒的小鸟》 - 单机大作：《仙剑》、《上古卷轴》、《文明》 - 主机游戏：《塞尔达传说》、《马里奥之奥德赛》 - 这种纯粹追求游戏性的游戏，我们定义为：**冒险类游戏**。 --- ### 两种进阶的游戏模式 | | 冒险类 | 竞技类 | 养成类 | | ----- | ----- | ----- | ----- | | 游戏对象 | 跟规则竞争 | 跟人竞争 | 跟人竞争 | | 时间 | 游戏时长 | 比赛时长 | 长期发展 | | 竞争内容 | 操作水平 | 操作水平 | 游戏投入\u0026#43;谋划 | | 生命周期 | 兴趣 | 社交热度 | 沉没成本 | --- ### 竞技类游戏模式 ----- - **竞技类游戏貌似核心是竞技，其实本质是社交诉求**： - 古时候，人们见面要对诗、弈棋； - 男生小时候都玩玻璃球、拍方片、敲圆片；女生小时候都要跳皮筋、踩方格； - 曾经去网吧，大家都在玩：CS、魔兽争霸、Dota - **社交热度决定了竞技类游戏的生命周期**。“有了青蛙儿子，你有多久没直播答题了？” --- ### 养成类游戏模式 ----- - **养成类游戏的本质是构建用户的沉没成本**： - 用户在游戏中为了达成阶段性目标花费（拥有）的成本越高，用户越不容易流失； - 用户为达成阶段性目标花费的时间越长，越容易流失； - 养成类游戏的一般要素： - **核心资源** - **阶段性目标** --- ### 养成类游戏核心要素 | 游戏名称 | **核心资源** | 控制器 | 变量 | **阶段目标** | | ----- | ----- | ----- | ----- | ----- | | 阴阳师 | 经验 | 体力 | 关卡进度 | 升星 | | 魔兽世界 | 装备分 | 副本 | 副本进度 | 下个副本 | | 部落冲突 | 圣水 | 秒 | 基地等级 | 基地升级 | | 魂斗罗 | 通关数量 | 无 | 无 | 下一关 | --- ### 促活手段（中国特色） ----- - 通过价格策略，利用行为经济学诱使用户完成目标操作： - 非日常手段获取核心资源或等价物； - 临时性调节控制器或变量关系； - 中国的游戏在游戏性方面（曾经）不如国外的游戏，但在留存、活跃、氪金等各方面都远超国外游戏。 - 相关的经验也被复制到了中国的网络文学、短剧等领域。 --- ### 趣头条模式 --- ### 趣头条是一个养成类游戏 ----- - 创始人经历： 盛大、广告、游戏化 - 阶段目标：提现 - 核心资源：金币 - 控制器：阅读量的上限（本质是每天金币上限） - 促活手段：金币奖励活动；金币兑换汇率；拉新 --- ### 趣头条的拉新模式 ----- - 动机：更快的完成阶段性目标——收一个有效徒弟意味着核心资源的获取速度提升两倍； - 每个人的社交关系有限，通常收徒集中在亲密的关系链中； - 收徒的传播性——利用社交关系拉新和加强游戏性； --- ### 趣头条的收支平衡？ ----- - 趣头条广告主的流失率超过 60%，超过广告红线； - 当前的收支平衡只是一些短期操作带来的结果，不可持续。 --- ### 直播答题模式 ----- 游戏化模式正在成为新的风口 --- ### 直播答题本质是竞技类游戏 ----- - 外部动机不压迫内部动机（用户外什么玩游戏）； - 要利用社交关系增加游戏性和游戏生命力； - 不存在亏钱一说。将续命的方式从拉新变为充值，没广告都赚钱； - 当前的运营模式缺少灵活的抓手，并且跟 APP 本身缺少联动，没能彻底融为一体； --- ## 什么是游戏化 \u0026gt; 跟游戏有什么不同？ --- ### 游戏化定义 ----- - 就是**将游戏设计的手段应用于非游戏的场景**. - 更简单一点说，就是**用游戏的框架，来解决工作生活中一切非游戏的问题**。 - 游戏化概念比较新，但它并不是新事物，很多手段早已被广泛应用。 --- ### 游戏化的基本立场 ----- 1. 游戏化不是上瘾机制 2. 游戏化必须从需求出发，不是所有领域都必须游戏化 - 只将游戏化当作上瘾机制，制作出来的方案一定是 McGonigal 的套皮式游戏化，是没有乐趣，不可持续的。 --- ### McGonigal 的套皮式游戏化 ----- - 游戏 = 活动本身 \u0026#43; 故事背景/规则限定 \u0026#43; 积分系统 - 大家常说的游戏化工具三件套： - 积分 - 徽章 - 排行榜 --- ### 奖励会挤走乐趣 \u0026gt; 一个老头有个院子，很多孩子常到院子里玩。老头喜欢清净，但撵不走这些爱玩的孩子。于是老头对孩子们说：“你们每天来玩，我奖励你们每天一块糖怎么样？”……一周之后，老头对孩子们说：“糖发光了，没办法给糖了”，于是孩子们愤然离去，不再为了“糖”来玩了 --- ### 游戏化的核心要素 ----- - 目标的一致性！！ - 简单！！ - 有趣！！ - 实时反馈（无论是好的反馈还是不好的反馈） --- ### 一般的落地方式 ----- - 为实现某业务目标，设计正常的业务流程。 - 考察整体流程是否简单？能否简化？ - 考察流程是否有趣？能不能增加一些有趣的要素？ - 注意有趣不要违背更重要的简单原则。 - 如果想不到简单的方式，就通过微交互或故事背景让流程变有趣。 - 考察用户动线是否都有合适的反馈？反馈流程中是否都简单有趣。 --- ### 游戏和游戏化 - 如果产品中增加了游戏（非游戏化），那么这部分模块可以吸引游戏用户，相当于产品的额外功能。 - 对于游戏，需要用游戏的指标来考核，以游戏好玩为目的；游戏和其他功能的联动是最终能取得的效果。 - 游戏的指标和非游戏（包括游戏化）是截然不同的，而且数量级上没有可比性。 - 对于游戏，可以类比成万达广场中的汤姆熊（游戏厅）。 --- ## 游戏化实例 \u0026gt; 用例子来理解游戏化 --- ### 游戏化实例：航空公司 ----- - 航空公司的会员体系是非常好的游戏化实践： - 根据里程进行会员等级提升，行为和目的一致; - 金卡会员享有*贵宾厅*，*贵宾通道*，*优先升舱*等服务；（有趣，有成就感） - 形成沉没成本，用户不容易流失； - 可以对比淘宝等电商的会员体系。。。 --- ### 游戏化实例：军衔军功章 ----- - 目标、规则、反馈； - 自愿参与（有趣，有成就）； - 对军人而言，战争不是一个哲学问题，而是打怪升级的过程。 - 某种意义上，希特勒是一个游戏化的大师。 --- ### 游戏化实例：微交互 ----- - 微交互就是游戏化，基本思路： - 培养用户习惯 - 用动效给予反馈 - 要简单有趣 - 例子：双击666、微信中关键词触发的效果、下拉刷新、甚至让人深恶痛绝的“小红点”。 --- ### 游戏化实例：节日庆典 ----- - 很多节日背后都有故事或传说，让人们通过移情获得节日的代入感； - 很多节日都会有一些传统习俗，给大家目标和成就感； - 大部分的节日活动后很有趣！ - 节日让人和人之间形成弱社交关系，增强节日游戏的生命力。这一点非常重要！！ - 国庆、建党节、建军节有节日的氛围吗？双十一呢？ --- ### 游戏化实例：赌博、股票、彩票 ----- - 最佳的游戏化场所应当评给赌场！ - 人们在屠场真正赢得的不是钱，而是成就感 - 沉没成本是人们无法自拔的核心要素 - 可持续的赌博——老虎机最赚钱！ --- ### 游戏化实例：教育、医疗、管理 ----- - 这三个领域中游戏化的应用已经相对而言比较成熟： - 通过游戏化教育，育教于乐教孩子张知识； - 复健领域的游戏化模式很常见； - 我们参加的素质拓展就是游戏化的应用之一； --- ### 附： 与推荐算法类比 ----- - 推荐算法的本质是学习用户行为，不以改变用户为目标； - 游戏化是以培养用户习惯为目标。 - 差一点： - 算法不知道答案，所以需要学习；游戏化是“上帝”视角，知道答案，教给用户； - 推荐算法不需要用户理解其规则，自动给用户想要的；游戏化让用户通过掌握一些简单的规则来控制自己想要的； --- ### 附：游戏化是强化学习的反面 ----- - AlphaGo 通过强化学习，在围棋上战胜了人类； - 强化学习是通过对最终激励的向前传播，模拟了人类学习的过程； - 游戏化相当于通过设定实时激励，加快强化学习的过程和成功率。 ","permalink":"https://blog.uglyboy.cn/slides/2018/01/29/%E6%B8%B8%E6%88%8F%E4%B8%8E%E6%B8%B8%E6%88%8F%E5%8C%96/","summary":"## 游戏改变世界 从游戏到游戏化 --- ### 人类简史 ----- - 大自然为了生物更好的进化，把有意义的事情赋予了“好玩”的属性 - 人类为了更快的发展，学会了“理智”","title":"游戏与游戏化"},{"content":" ## 用户增长核心模型 \u0026gt; 当我们谈规模时，我们应该做什么？ --- ## 核心模型 ----- 让我们快速进入主题 --- #### 核心模型 ----- $DAU$ 拆解后与如下三个因素有关： \u0026gt; $$ \u0026gt; DAU = (1\u0026#43;\\frac{\\lambda}{\\gamma})\\times DNU \u0026gt; $$ - $DNU$：日新增用户数 - $\\lambda$：新用户增长率 - $\\gamma$：老用户流失率 --- #### 简单的数学推导 ----- $$ DAU = DNU \u0026#43; DOU $$ $$ \\Delta^\u0026#43; DOU = \\lambda \\times DNU $$ $$ \\Delta^- DOU = \\gamma \\times DOU $$ 当均衡态时，有 $\\Delta^\u0026#43; DOU = \\Delta^- DOU $ 即 $ \\lambda \\times DNU = \\gamma \\times DOU $ $$ DAU = (1\u0026#43;\\frac{\\lambda}{\\gamma})\\times DNU $$ --- ## 蓝海用户增长 ----- 最朴素的规模发展观 --- #### 四种发展视角 ----- - 生产视角 - 我能生产什么，我就卖什么 - 产品视角 - 我不断优化我的产品，消费者就会买单 - 营销视角 - 消费者喜欢什么，我就生产什么 - 竞争视角 - 我要寻求我的竞争优势，来决定我的产品 --- #### 蓝海市场的用户增长 ----- - 因为蓝海市场几乎没有竞争，企业更多的是跟自己做比较，所以发展路径是视角中的 1～3。 - 生产视角：不关心用户增长（生产力有瓶颈） - 产品视角、用户视角：解决老用户留存问题，优化 $\\gamma$。也就是我们俗称的：“*酒香不怕巷子深*”; - 在没有竞品的情况下，新用户可以反复洗，所以只要能提升产品的核心体验，总有一天可以达到用户量的上限。 --- ## 渠道的作用 ----- 竞争条件下，用户增长第一次变革 --- #### 为什么要花钱买量？ ----- - 因为有钱赚 - 如果一个客户能让你赚 $2$ 块钱，拉一个新用户需要 $3$ 块钱，干不干？ - 如果 $2\\times DAU \u0026gt; 3 \\times DNU$ 就可以干 - $2\\times(1\u0026#43;\\frac{\\lambda}{\\gamma}\\cdot DNU \u0026gt; 3\\times DNU$ - $\\frac{\\lambda}{\\gamma} \u0026gt; 0.5$ --- #### 拉新是用户规模的重中之重 ----- - 新用户规模和总用户规模是成正比的。必须维持新用户的体量，才能维持总用户规模。 - 拉新是不需要提升产品品质，不需要优化任何用户体验即可扩大规模的重要手段。 - 只要拉新成本够低，就值得花钱拉新（拓展更丰富的渠道）。 - 要拓展渠道，比较多种渠道的拉新成本； - 拉新本身也有足够多的优化空间； --- ##### 案例 ----- - 线下零售店最核心要素之一就是选址。在选址这件事上，最核心的指标就是人流量； - 线上 APP 推广的最重要的手段： - 手机预装； - 应用商店广告和刷榜； --- #### 竞争条件下，产品好不再是绝对优势 ----- - 好的产品，如果没有好的渠道（拉新手段），一样难以在竞争中获胜。 - 当市场上出现竞争时，正确的做法便不再是“把事情做好”，而是“选择去做对的事情”。事如此，人也如此。 - 关于竞争条件下，如何选择做对的事情，欢迎阅读《[科学决策讲义](https://blog.uglyboy.cn/slides/2022/04/27/%E7%A7%91%E5%AD%A6%E5%86%B3%E7%AD%96%E8%AE%B2%E4%B9%89/)》。 --- ## 新用户转化 ----- 当我们谈论增长黑客时，我们究竟在谈论什么？ --- #### 增长黑客是什么？为什么突然火了？ - 2010 年的时候，Sean Ellis 首次提出增长黑客这个概念。 - 国外的 Facebook、Uber、Airbnb、Pinterest 在发展初期都使?了增长黑客的手段，从而得到了高速的发展。 - 国内力推增长黑客的企业是 字节跳动。随后各大互联网公司也都快速跟进，尤其以 PDD 为代表的新一代互联网公司，利用社交裂变的玩法，已经创造出了具有中国特色的用户增长新玩法。甚至如今社交裂变的热度已经大过增长黑客了。 --- #### 回顾一下我们的核心模型 \u0026gt; $$ \u0026gt; DAU = (1\u0026#43;\\frac{\\lambda}{\\gamma})\\times DNU \u0026gt; $$ - 产品的核心竞争力：$\\gamma$ - 渠道的作用：$DNU$ - 新用户到老用户的转化率：$\\lambda$ --- \u0026gt; - 淘宝曾经的用户登陆界面没有花很大力气优化过。 \u0026gt; - 2017 年，淘宝的产品技术团队对该界面进行了精简，优化了流程体验，减少了该页面大概 $10\\\\%$ 的跳出率； \u0026gt; - 随后惊喜的发现，淘宝的用户总量大概带来了 $5\\\\%$ 左右的提升 - 新用户转化的过程是大部分成熟产品最容易忽视的地方，也恰恰是增长黑客起核心作用的点。 --- #### 增长黑客的核心理论 ----- - AARRR 模型 - Acquisition：获取新用户、Activation：激活新用户、Retention：留存老用户、Revenue：变现、Referral：裂变 - 核心突破点：数字化用户增长，在拉新环节得到突破。 - 魔数理论 - （FaceBook）当一个用户拥有 $5$ 个好友时，他就不会离开 FaceBook 了。 --- #### 透过现象看本质 ----- - $DAU = (1\u0026#43;\\frac{\\lambda}{\\gamma})DNU$ - 关于用户增长，我们需要对三个要素都投入足够的重视： - 新用户数量 - 新用户的转化率； - 老用户的留失率（留存率）； --- #### 从游戏市场看用户增长 ----- - 游戏的生命周期更短，所以游戏企业更重视用户增长的作用。我们通过对游戏市场的学习，更容易理解用户增长的真谛： - 无所不用其极的渠道推广手段（渣渣辉）； - 极易上手的新用户体验（开局一条鲲）； - 构筑沉默成本，强行提升用户留存； - 贪玩蓝月是好游戏吗？为什么大家都在玩？ --- ## 模型之外 ----- 打破束缚看用户增长 --- - 好产品跟用户增长之间有什么关系？ - 没有产品优势能做用户增长吗？能提升用户留存吗？ - 不要被自己的经验所束缚。欢迎加入“用户增长”邪教。 --- #### 补充案例：拼多多 ----- - 早期的拼多多假货非常多，平台也没有很好的保障体系和商家治理。 - 相比于淘宝，拼多多利用微信渠道和裂变传播玩法，获得了大量的社交流量 - 对比淘宝最核心的优势，是对于新用户几乎无门槛，并且有新手礼包引导用户成为电商付费用户，顺利的打开了下沉市场的大门。 - 当有了规模，一切皆有可能。 --- #### 补充案例：趣头条 ----- - 趣头条的商业本质：激励用户点广告，点广告即返现。给用户的钱是从广告费中赚取的，羊毛出在羊身上。 - 趣头条用游戏化的手段做用户增长，几乎没有提供什么核心用户价值，但依然受广告市场青睐。 - 互联网的玩法，有流量就有价值——用户增长这件事不需要产品加持，本身就在创造价值了。 --- - 宗教 - 传销 - 洗脑广告 - 流量明星 - 新冠肺炎 ","permalink":"https://blog.uglyboy.cn/slides/2018/01/02/%E7%94%A8%E6%88%B7%E5%A2%9E%E9%95%BF%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%9E%8B/","summary":"## 用户增长核心模型 \u0026gt; 当我们谈规模时，我们应该做什么？ --- ## 核心模型 ----- 让我们快速进入主题 --- #### 核心模型 ----- $DAU$ 拆解后与如下三个因素有关： \u0026gt; $$ \u0026gt; DAU = (1\u0026#43;\\frac{\\lambda}{\\gamma})\\times DNU","title":"用户增长核心模型"}]