<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Automation on 拾柒读库</title>
    <link>https://blog.uglyboy.cn/tags/automation/</link>
    <description>Recent content in Automation on 拾柒读库</description>
    <generator>Hugo -- 0.142.0</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 13 Nov 2024 22:28:11 +0800</lastBuildDate>
    <atom:link href="https://blog.uglyboy.cn/tags/automation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Autorestic</title>
      <link>https://blog.uglyboy.cn/posts/2022/02/22/</link>
      <pubDate>Tue, 22 Feb 2022 06:44:00 +0800</pubDate>
      <guid>https://blog.uglyboy.cn/posts/2022/02/22/</guid>
      <description>完善的数据自动备份系统</description>
      <content:encoded><![CDATA[<blockquote>
<p>原本是打算不再在这里写技术类博客了，结果最近的一个小成果确实没啥合适的地方存放，所以还是留在这里吧。</p>
</blockquote>
<p>自从开始使用树莓派，忧虑的一个重要问题就是：万一我的硬盘坏了可怎么办？通常的方案是硬盘组磁盘列阵，例如 raid1，raid5，raid10。可惜这套方案价格太高，不符合我用树莓派做 NAS 的风格。所以还是追求一套通常且通用的数据备份方案。</p>
<p>其间尝试了一些手段，例如：rclone，Duplicati，rsync，自己写 shell 脚本等等，但是如何构建一个完善的数据备份方案还是比较复杂的，需要考虑包括备份的可靠性，备份文件的大小（冗余程度），备份的版本管理，按不同时效留档等很多的要素。</p>
<p>最终，终于遇到了 <a href="https://autorestic.vercel.app/">automation</a> ，并依此打造了一套完善的备份方案。</p>
<h2 id="备份方案的基本原则">备份方案的基本原则</h2>
<ul>
<li>备份数据要保证本地非源数据的硬盘保存一份，云端保存一份；</li>
<li>云端备份需要有数据加密机制；</li>
<li>备份数据需要有类似 git 的版本管理机制，保证冗余数据不被重复存储，且按版本标签可方便的管理；</li>
<li>云端保存需要支持各种云端数据源；</li>
<li>本地需要有旧版本文件清理机制；</li>
<li>可以对不同的数据源进行不同的备份机制设定；</li>
<li>自动化管理备份，无需过多的人工干预和介入；</li>
</ul>
<h2 id="数据备份方案的基本组件">数据备份方案的基本组件</h2>
<h3 id="rclone">rclone</h3>
<p>最早我是使用 rclone + shell 进行备份的，但是这只能解决云端备份和支持数据源的部分，而且设定异常的复杂。根本原因是在于，rclone 其实是一款同步数据应用，而不是数据备份应用。</p>
<p>但现在有了一个良好的开端：可以将数据同步到任何云端网盘中了。</p>
<h3 id="restichttpsresticnet"><a href="https://restic.net/">restic</a></h3>
<p>这是一款类似于 rclone 的软件，但是不同的是，restic 是专注于备份的软件，支持加密传输，增量备份，快照记录等等，而且还可以同 rclone 联动，利用 rclone 支持多种云端的能力，将数据备份到各种网盘中。</p>
<p>另外，restic 也可以非常便捷的还原任何一个版本的数据，总得来说，是一个很简单便捷的备份工具。但它是一个命令行工具，也就是说，并不是一个服务，无法提供自动备份的功能（定时备份），而且每一项操作都需要运行相关命令加参数。</p>
<p>如此一来，关于备份这件事，就只剩下自动化版本管理这个问题需要解决了。</p>
<h3 id="autorestichttpsautoresticvercelapp"><a href="https://autorestic.vercel.app/">autorestic</a></h3>
<p>autorestic 是 restic 的一个「包装器」，通过自动调用 restic 的方法，加上了配置文件、定时执行（伪）等功能。将命令行程序扩展成了一个基于固定配置可重复运行的应用。</p>
<p>相关的命令说明还是需要自己看一下官方的文档。</p>
<p>但 autorestic 依然是一个命令行，不是服务，虽然提供了配置文件的方式可重复操作，但依然无法实现定时自动备份功能</p>
<h3 id="crontab">crontab</h3>
<p>autorestic 的官方文档推荐的方式即配合 crontab 每 5 分钟执行一次的方式 将 autorestic 配置成一个伪服务，进而提供定时自动备份功能。</p>
<h3 id="docker">docker</h3>
<p>最后，终极的解决方案，是需要将这些工具组合起来，形成一套完整的工具链。于是将对应的工具打包进 docker image，就可以便捷的部署和使用对应的自动化备份方案了。</p>
<h3 id="2023-12-18-更新">2023-12-18 更新</h3>
<ul>
<li>之前一直没有能自动进行 forget 操作，导致备份的数据越来越多。这个问题需要在 autorestic 的配置文件中添加 forget 的配置。</li>
<li>之前的镜像的 hostname 每次都是随机生成的，导致每次都会重新初始化，现在已经解决了这个问题，通过在 docker-compose 中添加 hostname，可以保证每次都是同一个 hostname 了。</li>
</ul>
<h2 id="最终的数据自动化备份解决方案">最终的数据自动化备份解决方案</h2>
<p>我通过 <a href="https://github.com/uglyboy-tl/autorestic-docker">Github</a> 的自动化流程，构建了实现上述 autorestic 服务的 <a href="https://hub.docker.com/r/guixi/autorestic">镜像</a> ，使用说明如下：</p>
<h3 id="features">Features</h3>
<p>Often it is usefully to trigger backups automatically. So in this image, it would be trigger the command every 5min.</p>
<h3 id="install">Install</h3>
<ol>
<li>Create an initial config file (<code>autorestic.yml</code>) such as:</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="nt">locations</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">my-location</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">from</span><span class="p">:</span><span class="w"> </span><span class="l">/data</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">to</span><span class="p">:</span><span class="w"> </span><span class="l">my-backend</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">forget</span><span class="p">:</span><span class="w"> </span><span class="l">prune</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cron</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;0 3 * * 0&#39;</span><span class="w"> </span><span class="c"># Every Sunday at 3:00</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>You can read full <a href="https://autorestic.vercel.app/config">docs</a> to configure it.</p>
<ol start="2">
<li>Create an empty file (<code>autorestic.lock.yml</code>)</li>
<li>run [[docker-compose]] as below:</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;3&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">services</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">autorestic</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">guixi/autorestic</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">autorestic</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">unless-stopped</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">hostname</span><span class="p">:</span><span class="w"> </span><span class="l">autorestic</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/etc/localtime:/etc/localtime:ro</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">$(pwd)/autorestic.yml:/root/.autorestic.yml:ro</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">$(pwd)/autorestic.lock.yml:/root/.autorestic.lock.yml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">~/.config/rclone/rclone.conf:/root/.config/rclone/rclone.conf:ro </span><span class="w"> </span><span class="c">#optional</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">my-volume:/data</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="usage">Usage</h3>
<p>you can use autorestic to show all buckups such as</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it autorestic autorestic <span class="nb">exec</span> -av -- snapshots
</span></span></code></pre></td></tr></table>
</div>
</div><p>and also use restic directly such as</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">docker <span class="nb">exec</span> -it autorestic restic
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="license">License</h3>
<p><a href="https://github.com/uglyboy-tl/autorestic-docker/blob/main/LICENSE">MIT</a> © Uglyboy</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
